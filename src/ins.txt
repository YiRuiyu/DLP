This is the hex stream of Code: 
0x13 0x01 0x01 0xff 0x93 0x05 0x00 0x00 0x23 0x24 0x81 0x00 0x23 0x26 0x11 0x00 0x13 0x04 0x05 0x00 0xef 0x00 0xc0 0x72 0x03 0xa5 0x01 0x03 0x83 0x27 0xc5 0x03 0x63 0x84 0x07 0x00 0xe7 0x80 0x07 0x00 0x13 0x05 0x04 0x00 0xef 0x20 0x80 0x68 0x93 0x07 0x00 0x00 0x63 0x88 0x07 0x00 0x37 0x15 0x01 0x00 0x13 0x05 0x05 0xfd 0x6f 0x20 0xc0 0x0c 0x67 0x80 0x00 0x00 0x97 0x31 0x00 0x00 0x93 0x81 0x41 0x71 0x13 0x85 0x41 0x04 0x13 0x86 0x41 0x08 0x33 0x06 0xa6 0x40 0x93 0x05 0x00 0x00 0xef 0x00 0x40 0x1e 0x17 0x25 0x00 0x00 0x13 0x05 0x85 0x0a 0x63 0x08 0x05 0x00 0x17 0x15 0x00 0x00 0x13 0x05 0xc5 0xea 0xef 0x20 0x40 0x09 0xef 0x00 0xc0 0x12 0x03 0x25 0x01 0x00 0x93 0x05 0x41 0x00 0x13 0x06 0x00 0x00 0xef 0x00 0x00 0x09 0x6f 0xf0 0x1f 0xf7 0x93 0x87 0x01 0x03 0x13 0x87 0x01 0x03 0x63 0x0a 0xf7 0x00 0x93 0x07 0x00 0x00 0x63 0x86 0x07 0x00 0x13 0x85 0x01 0x03 0x67 0x80 0x07 0x00 0x67 0x80 0x00 0x00 0x93 0x87 0x01 0x03 0x93 0x85 0x01 0x03 0xb3 0x85 0xf5 0x40 0x93 0xd7 0x25 0x40 0x93 0xd5 0xf5 0x01 0xb3 0x85 0xf5 0x00 0x93 0xd5 0x15 0x40 0x63 0x8a 0x05 0x00 0x93 0x07 0x00 0x00 0x63 0x86 0x07 0x00 0x13 0x85 0x01 0x03 0x67 0x80 0x07 0x00 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x83 0xc7 0x81 0x05 0x23 0x26 0x11 0x00 0x63 0x98 0x07 0x00 0xef 0xf0 0x9f 0xf9 0x93 0x07 0x10 0x00 0x23 0x8c 0xf1 0x04 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x6f 0xf0 0xdf 0xf9 0x13 0x01 0x01 0xfe 0x23 0x2e 0x11 0x00 0x23 0x2c 0x81 0x00 0x13 0x04 0x01 0x02 0xb7 0x67 0x6c 0x6c 0x93 0x87 0x87 0x54 0x23 0x20 0xf4 0xfe 0xb7 0x27 0x57 0x6f 0x93 0x87 0xf7 0x06 0x23 0x22 0xf4 0xfe 0xb7 0x77 0x64 0x00 0x93 0x87 0x27 0xc7 0x23 0x24 0xf4 0xfe 0x23 0x26 0x04 0xfe 0x6f 0x00 0x80 0x02 0x83 0x27 0xc4 0xfe 0x93 0x87 0x07 0xff 0xb3 0x87 0x87 0x00 0x83 0xc7 0x07 0xff 0x13 0x85 0x07 0x00 0xef 0x00 0xc0 0x1b 0x83 0x27 0xc4 0xfe 0x93 0x87 0x17 0x00 0x23 0x26 0xf4 0xfe 0x83 0x27 0xc4 0xfe 0x93 0x87 0x07 0xff 0xb3 0x87 0x87 0x00 0x83 0xc7 0x07 0xff 0xe3 0x96 0x07 0xfc 0x93 0x07 0x00 0x00 0x13 0x85 0x07 0x00 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0xb7 0x37 0x01 0x00 0x37 0x34 0x01 0x00 0x23 0x20 0x21 0x01 0x93 0x87 0x07 0x00 0x13 0x07 0x04 0x00 0x23 0x26 0x11 0x00 0x23 0x22 0x91 0x00 0x33 0x89 0xe7 0x40 0x63 0x82 0xe7 0x02 0x13 0x59 0x29 0x40 0x13 0x04 0x04 0x00 0x93 0x04 0x00 0x00 0x83 0x27 0x04 0x00 0x93 0x84 0x14 0x00 0x13 0x04 0x44 0x00 0xe7 0x80 0x07 0x00 0xe3 0xe8 0x24 0xff 0x37 0x34 0x01 0x00 0xb7 0x37 0x01 0x00 0x93 0x87 0x87 0x00 0x13 0x07 0x04 0x00 0x33 0x89 0xe7 0x40 0x13 0x59 0x29 0x40 0x63 0x80 0xe7 0x02 0x13 0x04 0x04 0x00 0x93 0x04 0x00 0x00 0x83 0x27 0x04 0x00 0x93 0x84 0x14 0x00 0x13 0x04 0x44 0x00 0xe7 0x80 0x07 0x00 0xe3 0xe8 0x24 0xff 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x03 0x29 0x01 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x03 0xf0 0x00 0x13 0x07 0x05 0x00 0x63 0x7e 0xc3 0x02 0x93 0x77 0xf7 0x00 0x63 0x90 0x07 0x0a 0x63 0x92 0x05 0x08 0x93 0x76 0x06 0xff 0x13 0x76 0xf6 0x00 0xb3 0x86 0xe6 0x00 0x23 0x20 0xb7 0x00 0x23 0x22 0xb7 0x00 0x23 0x24 0xb7 0x00 0x23 0x26 0xb7 0x00 0x13 0x07 0x07 0x01 0xe3 0x66 0xd7 0xfe 0x63 0x14 0x06 0x00 0x67 0x80 0x00 0x00 0xb3 0x06 0xc3 0x40 0x93 0x96 0x26 0x00 0x97 0x02 0x00 0x00 0xb3 0x86 0x56 0x00 0x67 0x80 0xc6 0x00 0x23 0x07 0xb7 0x00 0xa3 0x06 0xb7 0x00 0x23 0x06 0xb7 0x00 0xa3 0x05 0xb7 0x00 0x23 0x05 0xb7 0x00 0xa3 0x04 0xb7 0x00 0x23 0x04 0xb7 0x00 0xa3 0x03 0xb7 0x00 0x23 0x03 0xb7 0x00 0xa3 0x02 0xb7 0x00 0x23 0x02 0xb7 0x00 0xa3 0x01 0xb7 0x00 0x23 0x01 0xb7 0x00 0xa3 0x00 0xb7 0x00 0x23 0x00 0xb7 0x00 0x67 0x80 0x00 0x00 0x93 0xf5 0xf5 0x0f 0x93 0x96 0x85 0x00 0xb3 0xe5 0xd5 0x00 0x93 0x96 0x05 0x01 0xb3 0xe5 0xd5 0x00 0x6f 0xf0 0xdf 0xf6 0x93 0x96 0x27 0x00 0x97 0x02 0x00 0x00 0xb3 0x86 0x56 0x00 0x93 0x82 0x00 0x00 0xe7 0x80 0x06 0xfa 0x93 0x80 0x02 0x00 0x93 0x87 0x07 0xff 0x33 0x07 0xf7 0x40 0x33 0x06 0xf6 0x00 0xe3 0x78 0xc3 0xf6 0x6f 0xf0 0xdf 0xf3 0x03 0x26 0x85 0x00 0x6f 0x00 0x80 0x01 0x83 0xa7 0x81 0x03 0x93 0x05 0x05 0x00 0x03 0xa6 0x87 0x00 0x13 0x85 0x07 0x00 0x6f 0x00 0x40 0x00 0x13 0x01 0x01 0xfe 0x23 0x2c 0x21 0x01 0x23 0x2e 0x11 0x00 0x13 0x09 0x05 0x00 0x63 0x06 0x05 0x00 0x83 0x27 0x85 0x03 0x63 0x86 0x07 0x04 0x83 0x27 0x86 0x00 0x93 0x87 0xf7 0xff 0x23 0x24 0xf6 0x00 0x63 0xdc 0x07 0x00 0x03 0x27 0x86 0x01 0x63 0xc6 0xe7 0x04 0x93 0xf7 0xf5 0x0f 0x13 0x07 0xa0 0x00 0x63 0x80 0xe7 0x04 0x83 0x27 0x06 0x00 0x13 0xf5 0xf5 0x0f 0x13 0x87 0x17 0x00 0x23 0x20 0xe6 0x00 0x23 0x80 0xb7 0x00 0x83 0x20 0xc1 0x01 0x03 0x29 0x81 0x01 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x23 0x26 0xc1 0x00 0x23 0x24 0xb1 0x00 0xef 0x00 0x50 0x33 0x03 0x26 0xc1 0x00 0x83 0x25 0x81 0x00 0x6f 0xf0 0x5f 0xfa 0x83 0x20 0xc1 0x01 0x13 0x05 0x09 0x00 0x03 0x29 0x81 0x01 0x13 0x01 0x01 0x02 0x6f 0x00 0x00 0x0b 0x13 0x01 0x01 0xff 0x23 0x20 0x21 0x01 0x03 0xa9 0x81 0x03 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x23 0x26 0x11 0x00 0x93 0x04 0x05 0x00 0x13 0x84 0x05 0x00 0x63 0x06 0x09 0x00 0x83 0x27 0x89 0x03 0x63 0x8a 0x07 0x04 0x83 0x27 0x84 0x00 0x93 0x87 0xf7 0xff 0x23 0x24 0xf4 0x00 0x63 0xdc 0x07 0x00 0x03 0x27 0x84 0x01 0x63 0xc4 0xe7 0x04 0x93 0xf7 0xf4 0x0f 0x13 0x07 0xa0 0x00 0x63 0x8e 0xe7 0x02 0x83 0x27 0x04 0x00 0x13 0xf5 0xf4 0x0f 0x13 0x87 0x17 0x00 0x23 0x20 0xe4 0x00 0x23 0x80 0x97 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x03 0x29 0x01 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x05 0x09 0x00 0xef 0x00 0x10 0x29 0x6f 0xf0 0x9f 0xfa 0x13 0x06 0x04 0x00 0x03 0x24 0x81 0x00 0x83 0x20 0xc1 0x00 0x93 0x85 0x04 0x00 0x13 0x05 0x09 0x00 0x83 0x24 0x41 0x00 0x03 0x29 0x01 0x00 0x13 0x01 0x01 0x01 0x6f 0x00 0x40 0x00 0x13 0x01 0x01 0xfe 0x23 0x2c 0x81 0x00 0x23 0x2a 0x91 0x00 0x23 0x28 0x21 0x01 0x23 0x2e 0x11 0x00 0x23 0x26 0x31 0x01 0x13 0x09 0x05 0x00 0x93 0x84 0x05 0x00 0x13 0x04 0x06 0x00 0x63 0x06 0x05 0x00 0x83 0x27 0x85 0x03 0x63 0x80 0x07 0x14 0x83 0x27 0x84 0x01 0x03 0x17 0xc4 0x00 0x23 0x24 0xf4 0x00 0x93 0x77 0x87 0x00 0x63 0x82 0x07 0x08 0x83 0x27 0x04 0x01 0x63 0x8e 0x07 0x06 0x93 0x16 0x27 0x01 0x93 0xf9 0xf4 0x0f 0x93 0xf4 0xf4 0x0f 0x63 0xda 0x06 0x08 0x03 0x27 0x04 0x00 0x83 0x26 0x44 0x01 0xb3 0x07 0xf7 0x40 0x63 0xda 0xd7 0x0a 0x83 0x26 0x84 0x00 0x13 0x06 0x17 0x00 0x23 0x20 0xc4 0x00 0x93 0x86 0xf6 0xff 0x23 0x24 0xd4 0x00 0x23 0x00 0x37 0x01 0x03 0x27 0x44 0x01 0x93 0x87 0x17 0x00 0x63 0x04 0xf7 0x0c 0x83 0x57 0xc4 0x00 0x93 0xf7 0x17 0x00 0x63 0x86 0x07 0x00 0x93 0x07 0xa0 0x00 0x63 0x8a 0xf4 0x0a 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x13 0x85 0x04 0x00 0x83 0x24 0x41 0x01 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x93 0x05 0x04 0x00 0x13 0x05 0x09 0x00 0xef 0x00 0xc0 0x0b 0x63 0x1a 0x05 0x08 0x03 0x17 0xc4 0x00 0x93 0xf9 0xf4 0x0f 0x83 0x27 0x04 0x01 0x93 0x16 0x27 0x01 0x93 0xf4 0xf4 0x0f 0xe3 0xca 0x06 0xf6 0x83 0x26 0x44 0x06 0x37 0x26 0x00 0x00 0x33 0x67 0xc7 0x00 0x37 0xe6 0xff 0xff 0x13 0x06 0xf6 0xff 0xb3 0xf6 0xc6 0x00 0x23 0x16 0xe4 0x00 0x03 0x27 0x04 0x00 0x23 0x22 0xd4 0x06 0x83 0x26 0x44 0x01 0xb3 0x07 0xf7 0x40 0xe3 0xca 0xd7 0xf4 0x93 0x05 0x04 0x00 0x13 0x05 0x09 0x00 0xef 0x00 0x00 0x51 0x63 0x1e 0x05 0x02 0x03 0x27 0x04 0x00 0x83 0x26 0x84 0x00 0x93 0x07 0x10 0x00 0x13 0x06 0x17 0x00 0x93 0x86 0xf6 0xff 0x23 0x20 0xc4 0x00 0x23 0x24 0xd4 0x00 0x23 0x00 0x37 0x01 0x03 0x27 0x44 0x01 0xe3 0x10 0xf7 0xf4 0x93 0x05 0x04 0x00 0x13 0x05 0x09 0x00 0xef 0x00 0x80 0x4d 0xe3 0x02 0x05 0xf4 0x93 0x04 0xf0 0xff 0x6f 0xf0 0xdf 0xf3 0xef 0x00 0x90 0x0f 0x6f 0xf0 0x1f 0xec 0x93 0x07 0x05 0x00 0x03 0xa5 0x81 0x03 0x13 0x86 0x05 0x00 0x93 0x85 0x07 0x00 0x6f 0xf0 0xdf 0xe7 0x83 0xa7 0x81 0x03 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x23 0x26 0x11 0x00 0x93 0x04 0x05 0x00 0x13 0x84 0x05 0x00 0x63 0x86 0x07 0x00 0x03 0xa7 0x87 0x03 0x63 0x00 0x07 0x08 0x83 0x17 0xc4 0x00 0x13 0xf7 0x87 0x00 0x63 0x04 0x07 0x08 0x03 0x27 0x04 0x01 0x63 0x00 0x07 0x0a 0x93 0xf6 0x17 0x00 0x63 0x88 0x06 0x02 0x83 0x26 0x44 0x01 0x23 0x24 0x04 0x00 0x13 0x05 0x00 0x00 0xb3 0x06 0xd0 0x40 0x23 0x2c 0xd4 0x00 0x63 0x0a 0x07 0x02 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x93 0xf6 0x27 0x00 0x13 0x06 0x00 0x00 0x63 0x94 0x06 0x00 0x03 0x26 0x44 0x01 0x23 0x24 0xc4 0x00 0x13 0x05 0x00 0x00 0xe3 0x1a 0x07 0xfc 0x13 0xf7 0x07 0x08 0xe3 0x06 0x07 0xfc 0x93 0xe7 0x07 0x04 0x23 0x16 0xf4 0x00 0x13 0x05 0xf0 0xff 0x6f 0xf0 0xdf 0xfb 0x13 0x85 0x07 0x00 0xef 0x00 0x50 0x03 0x83 0x17 0xc4 0x00 0x13 0xf7 0x87 0x00 0xe3 0x10 0x07 0xf8 0x13 0xf7 0x07 0x01 0x63 0x0a 0x07 0x06 0x13 0xf7 0x47 0x00 0x63 0x1c 0x07 0x02 0x03 0x27 0x04 0x01 0x93 0xe7 0x87 0x00 0x23 0x16 0xf4 0x00 0xe3 0x14 0x07 0xf6 0x93 0xf6 0x07 0x28 0x13 0x06 0x00 0x20 0xe3 0x8e 0xc6 0xf4 0x93 0x05 0x04 0x00 0x13 0x85 0x04 0x00 0xef 0x00 0xd0 0x60 0x83 0x17 0xc4 0x00 0x03 0x27 0x04 0x01 0x6f 0xf0 0x5f 0xf4 0x83 0x25 0x04 0x03 0x63 0x8e 0x05 0x00 0x13 0x07 0x04 0x04 0x63 0x88 0xe5 0x00 0x13 0x85 0x04 0x00 0xef 0x00 0x90 0x19 0x83 0x17 0xc4 0x00 0x23 0x28 0x04 0x02 0x03 0x27 0x04 0x01 0x93 0xf7 0xb7 0xfd 0x23 0x22 0x04 0x00 0x23 0x20 0xe4 0x00 0x6f 0xf0 0x1f 0xfa 0x13 0x07 0x90 0x00 0x23 0xa0 0xe4 0x00 0x93 0xe7 0x07 0x04 0x6f 0xf0 0xdf 0xf5 0x13 0x01 0x01 0xfd 0x23 0x2c 0x41 0x01 0x03 0xaa 0x01 0x03 0x23 0x20 0x21 0x03 0x23 0x26 0x11 0x02 0x03 0x29 0x8a 0x14 0x23 0x24 0x81 0x02 0x23 0x22 0x91 0x02 0x23 0x2e 0x31 0x01 0x23 0x2a 0x51 0x01 0x23 0x28 0x61 0x01 0x23 0x26 0x71 0x01 0x23 0x24 0x81 0x01 0x63 0x00 0x09 0x04 0x13 0x0b 0x05 0x00 0x93 0x8b 0x05 0x00 0x93 0x0a 0x10 0x00 0x93 0x09 0xf0 0xff 0x83 0x24 0x49 0x00 0x13 0x84 0xf4 0xff 0x63 0x42 0x04 0x02 0x93 0x94 0x24 0x00 0xb3 0x04 0x99 0x00 0x63 0x84 0x0b 0x04 0x83 0xa7 0x44 0x10 0x63 0x80 0x77 0x05 0x13 0x04 0xf4 0xff 0x93 0x84 0xc4 0xff 0xe3 0x16 0x34 0xff 0x83 0x20 0xc1 0x02 0x03 0x24 0x81 0x02 0x83 0x24 0x41 0x02 0x03 0x29 0x01 0x02 0x83 0x29 0xc1 0x01 0x03 0x2a 0x81 0x01 0x83 0x2a 0x41 0x01 0x03 0x2b 0x01 0x01 0x83 0x2b 0xc1 0x00 0x03 0x2c 0x81 0x00 0x13 0x01 0x01 0x03 0x67 0x80 0x00 0x00 0x83 0x27 0x49 0x00 0x83 0xa6 0x44 0x00 0x93 0x87 0xf7 0xff 0x63 0x8e 0x87 0x04 0x23 0xa2 0x04 0x00 0xe3 0x88 0x06 0xfa 0x83 0x27 0x89 0x18 0x33 0x97 0x8a 0x00 0x03 0x2c 0x49 0x00 0xb3 0x77 0xf7 0x00 0x63 0x92 0x07 0x02 0xe7 0x80 0x06 0x00 0x03 0x27 0x49 0x00 0x83 0x27 0x8a 0x14 0x63 0x14 0x87 0x01 0xe3 0x84 0x27 0xf9 0xe3 0x88 0x07 0xf8 0x13 0x89 0x07 0x00 0x6f 0xf0 0xdf 0xf5 0x83 0x27 0xc9 0x18 0x83 0xa5 0x44 0x08 0x33 0x77 0xf7 0x00 0x63 0x1c 0x07 0x00 0x13 0x05 0x0b 0x00 0xe7 0x80 0x06 0x00 0x6f 0xf0 0xdf 0xfc 0x23 0x22 0x89 0x00 0x6f 0xf0 0x9f 0xfa 0x13 0x85 0x05 0x00 0xe7 0x80 0x06 0x00 0x6f 0xf0 0x9f 0xfb 0x83 0x97 0xc5 0x00 0x13 0x01 0x01 0xfe 0x23 0x2c 0x81 0x00 0x23 0x26 0x31 0x01 0x23 0x2e 0x11 0x00 0x23 0x2a 0x91 0x00 0x23 0x28 0x21 0x01 0x13 0xf7 0x87 0x00 0x13 0x84 0x05 0x00 0x93 0x09 0x05 0x00 0x63 0x12 0x07 0x12 0x37 0x17 0x00 0x00 0x13 0x07 0x07 0x80 0x83 0xa6 0x45 0x00 0x33 0xe7 0xe7 0x00 0x23 0x96 0xe5 0x00 0x63 0x58 0xd0 0x18 0x03 0x28 0x84 0x02 0x63 0x02 0x08 0x0e 0x93 0xd7 0xc7 0x00 0x83 0xa4 0x09 0x00 0x93 0xf7 0x17 0x00 0x23 0xa0 0x09 0x00 0x83 0x25 0xc4 0x01 0x63 0x90 0x07 0x18 0x13 0x06 0x00 0x00 0x93 0x06 0x10 0x00 0x13 0x85 0x09 0x00 0xe7 0x00 0x08 0x00 0x93 0x07 0xf0 0xff 0x13 0x06 0x05 0x00 0x63 0x00 0xf5 0x1a 0x03 0x17 0xc4 0x00 0x03 0x28 0x84 0x02 0x83 0x25 0xc4 0x01 0x13 0x77 0x47 0x00 0x63 0x0e 0x07 0x00 0x03 0x27 0x44 0x00 0x83 0x27 0x04 0x03 0x33 0x06 0xe6 0x40 0x63 0x86 0x07 0x00 0x83 0x27 0xc4 0x03 0x33 0x06 0xf6 0x40 0x93 0x06 0x00 0x00 0x13 0x85 0x09 0x00 0xe7 0x00 0x08 0x00 0x93 0x07 0xf0 0xff 0x63 0x16 0xf5 0x12 0x83 0xa6 0x09 0x00 0x93 0x07 0xd0 0x01 0x63 0xee 0xd7 0x0c 0x37 0x07 0xc0 0xdf 0x13 0x07 0xe7 0xff 0x33 0x57 0xd7 0x40 0x13 0x77 0x17 0x00 0x83 0x17 0xc4 0x00 0x63 0x14 0x07 0x0c 0x03 0x26 0x04 0x01 0x37 0xf7 0xff 0xff 0x13 0x07 0xf7 0x7f 0x33 0xf7 0xe7 0x00 0x93 0xd7 0xc7 0x00 0x23 0x16 0xe4 0x00 0x23 0x22 0x04 0x00 0x23 0x20 0xc4 0x00 0x93 0xf7 0x17 0x00 0x63 0x9c 0x07 0x12 0x83 0x25 0x04 0x03 0x23 0xa0 0x99 0x00 0x63 0x8c 0x05 0x00 0x93 0x07 0x04 0x04 0x63 0x86 0xf5 0x00 0x13 0x85 0x09 0x00 0xef 0x00 0x40 0x72 0x23 0x28 0x04 0x02 0x13 0x05 0x00 0x00 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x03 0xa9 0x05 0x01 0xe3 0x0e 0x09 0xfc 0x83 0xa4 0x05 0x00 0x93 0xf7 0x37 0x00 0x23 0xa0 0x25 0x01 0xb3 0x84 0x24 0x41 0x13 0x07 0x00 0x00 0x63 0x94 0x07 0x00 0x03 0xa7 0x45 0x01 0x23 0x24 0xe4 0x00 0x63 0x48 0x90 0x00 0x6f 0xf0 0x5f 0xfb 0x33 0x09 0xa9 0x00 0xe3 0x56 0x90 0xfa 0x83 0x27 0x44 0x02 0x83 0x25 0xc4 0x01 0x93 0x86 0x04 0x00 0x13 0x06 0x09 0x00 0x13 0x85 0x09 0x00 0xe7 0x80 0x07 0x00 0xb3 0x84 0xa4 0x40 0xe3 0x4e 0xa0 0xfc 0x83 0x17 0xc4 0x00 0x93 0xe7 0x07 0x04 0x83 0x20 0xc1 0x01 0x23 0x16 0xf4 0x00 0x03 0x24 0x81 0x01 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x13 0x05 0xf0 0xff 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x83 0xa6 0xc5 0x03 0xe3 0x48 0xd0 0xe6 0x13 0x05 0x00 0x00 0x6f 0xf0 0x5f 0xf5 0x03 0x26 0x04 0x05 0x6f 0xf0 0x9f 0xea 0x83 0x17 0xc4 0x00 0x83 0x26 0x04 0x01 0x37 0xf7 0xff 0xff 0x13 0x07 0xf7 0x7f 0x33 0xf7 0xe7 0x00 0x93 0xd7 0xc7 0x00 0x23 0x16 0xe4 0x00 0x23 0x22 0x04 0x00 0x23 0x20 0xd4 0x00 0x93 0xf7 0x17 0x00 0xe3 0x8e 0x07 0xee 0x23 0x28 0xa4 0x04 0x6f 0xf0 0x5f 0xef 0x83 0xa7 0x09 0x00 0xe3 0x80 0x07 0xe6 0x13 0x07 0xd0 0x01 0x63 0x86 0xe7 0x00 0x13 0x07 0x60 0x01 0xe3 0x9a 0xe7 0xf6 0x23 0xa0 0x99 0x00 0x13 0x05 0x00 0x00 0x6f 0xf0 0x5f 0xef 0xe3 0x96 0x06 0xec 0x23 0x28 0xa4 0x04 0x6f 0xf0 0x5f 0xec 0x13 0x01 0x01 0xfe 0x23 0x2c 0x81 0x00 0x23 0x2e 0x11 0x00 0x13 0x04 0x05 0x00 0x63 0x06 0x05 0x00 0x83 0x27 0x85 0x03 0x63 0x80 0x07 0x02 0x83 0x97 0xc5 0x00 0x63 0x96 0x07 0x02 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x13 0x05 0x00 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x23 0x26 0xb1 0x00 0xef 0x00 0x40 0x3f 0x83 0x25 0xc1 0x00 0x83 0x97 0xc5 0x00 0xe3 0x8e 0x07 0xfc 0x13 0x05 0x04 0x00 0x03 0x24 0x81 0x01 0x83 0x20 0xc1 0x01 0x13 0x01 0x01 0x02 0x6f 0xf0 0x9f 0xd5 0x63 0x06 0x05 0x06 0x13 0x01 0x01 0xfe 0x23 0x2c 0x81 0x00 0x13 0x04 0x05 0x00 0x03 0xa5 0x81 0x03 0x23 0x2e 0x11 0x00 0x63 0x06 0x05 0x00 0x83 0x27 0x85 0x03 0x63 0x8a 0x07 0x02 0x83 0x17 0xc4 0x00 0x63 0x9c 0x07 0x00 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x13 0x05 0x00 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x93 0x05 0x04 0x00 0x03 0x24 0x81 0x01 0x83 0x20 0xc1 0x01 0x13 0x01 0x01 0x02 0x6f 0xf0 0x5f 0xd0 0x23 0x26 0xa1 0x00 0xef 0x00 0x80 0x37 0x83 0x17 0xc4 0x00 0x03 0x25 0xc1 0x00 0xe3 0x84 0x07 0xfc 0x6f 0xf0 0x9f 0xfd 0x03 0xa5 0x01 0x03 0xb7 0x15 0x01 0x00 0x93 0x85 0x05 0xb6 0x6f 0x00 0x10 0x0c 0x13 0x05 0x00 0x00 0x67 0x80 0x00 0x00 0xb7 0x25 0x01 0x00 0x93 0x85 0x05 0x23 0x6f 0x00 0xd0 0x0a 0x13 0x05 0x00 0x00 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xfe 0xb7 0x17 0x01 0x00 0x23 0x2e 0x11 0x00 0x23 0x2c 0x81 0x00 0x23 0x2a 0x91 0x00 0x23 0x28 0x21 0x01 0x23 0x26 0x31 0x01 0x23 0x24 0x41 0x01 0x23 0x22 0x51 0x01 0x23 0x20 0x61 0x01 0x03 0x24 0x45 0x00 0x93 0x87 0x47 0xc4 0x23 0x2e 0xf5 0x02 0x13 0x07 0xc5 0x2e 0x93 0x07 0x30 0x00 0x23 0x24 0xe5 0x2e 0x23 0x22 0xf5 0x2e 0x23 0x20 0x05 0x2e 0x93 0x07 0x40 0x00 0x13 0x09 0x05 0x00 0x23 0x26 0xf4 0x00 0x13 0x06 0x80 0x00 0x93 0x05 0x00 0x00 0x23 0x20 0x04 0x00 0x23 0x22 0x04 0x00 0x23 0x24 0x04 0x00 0x23 0x22 0x04 0x06 0x23 0x28 0x04 0x00 0x23 0x2a 0x04 0x00 0x23 0x2c 0x04 0x00 0x13 0x05 0xc4 0x05 0xef 0xf0 0x4f 0xe2 0x37 0x2b 0x01 0x00 0x83 0x24 0x89 0x00 0xb7 0x2a 0x01 0x00 0x37 0x2a 0x01 0x00 0xb7 0x29 0x01 0x00 0x13 0x0b 0xcb 0xfe 0x93 0x8a 0x0a 0x05 0x13 0x0a 0x8a 0x0d 0x93 0x89 0x09 0x15 0xb7 0x07 0x01 0x00 0x23 0x20 0x64 0x03 0x23 0x22 0x54 0x03 0x23 0x24 0x44 0x03 0x23 0x26 0x34 0x03 0x23 0x2e 0x84 0x00 0x93 0x87 0x97 0x00 0x23 0xa6 0xf4 0x00 0x13 0x06 0x80 0x00 0x93 0x05 0x00 0x00 0x23 0xa0 0x04 0x00 0x23 0xa2 0x04 0x00 0x23 0xa4 0x04 0x00 0x23 0xa2 0x04 0x06 0x23 0xa8 0x04 0x00 0x23 0xaa 0x04 0x00 0x23 0xac 0x04 0x00 0x13 0x85 0xc4 0x05 0xef 0xf0 0x4f 0xdb 0x03 0x24 0xc9 0x00 0xb7 0x07 0x02 0x00 0x23 0xa0 0x64 0x03 0x23 0xa2 0x54 0x03 0x23 0xa4 0x44 0x03 0x23 0xa6 0x34 0x03 0x23 0xae 0x94 0x00 0x93 0x87 0x27 0x01 0x23 0x26 0xf4 0x00 0x23 0x20 0x04 0x00 0x23 0x22 0x04 0x00 0x23 0x24 0x04 0x00 0x23 0x22 0x04 0x06 0x23 0x28 0x04 0x00 0x23 0x2a 0x04 0x00 0x23 0x2c 0x04 0x00 0x13 0x05 0xc4 0x05 0x13 0x06 0x80 0x00 0x93 0x05 0x00 0x00 0xef 0xf0 0x4f 0xd6 0x83 0x20 0xc1 0x01 0x23 0x20 0x64 0x03 0x23 0x22 0x54 0x03 0x23 0x24 0x44 0x03 0x23 0x26 0x34 0x03 0x23 0x2e 0x84 0x00 0x03 0x24 0x81 0x01 0x93 0x07 0x10 0x00 0x23 0x2c 0xf9 0x02 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x03 0x2a 0x81 0x00 0x83 0x2a 0x41 0x00 0x03 0x2b 0x01 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x93 0x87 0xf5 0xff 0x23 0x24 0x81 0x00 0x13 0x94 0x17 0x00 0x33 0x04 0xf4 0x00 0x13 0x14 0x24 0x00 0x33 0x04 0xf4 0x00 0x13 0x14 0x34 0x00 0x23 0x20 0x21 0x01 0x13 0x89 0x05 0x00 0x93 0x05 0x44 0x07 0x23 0x22 0x91 0x00 0x23 0x26 0x11 0x00 0xef 0x00 0x50 0x20 0x93 0x04 0x05 0x00 0x63 0x00 0x05 0x02 0x13 0x05 0xc5 0x00 0x23 0xa0 0x04 0x00 0x23 0xa2 0x24 0x01 0x23 0xa4 0xa4 0x00 0x13 0x06 0x84 0x06 0x93 0x05 0x00 0x00 0xef 0xf0 0x4f 0xcc 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x03 0x29 0x01 0x00 0x13 0x85 0x04 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xfe 0x23 0x28 0x21 0x01 0x03 0xa9 0x01 0x03 0x23 0x26 0x31 0x01 0x23 0x2e 0x11 0x00 0x83 0x27 0x89 0x03 0x23 0x2c 0x81 0x00 0x23 0x2a 0x91 0x00 0x93 0x09 0x05 0x00 0x63 0x86 0x07 0x0a 0x13 0x09 0x09 0x2e 0x93 0x04 0xf0 0xff 0x83 0x27 0x49 0x00 0x03 0x24 0x89 0x00 0x93 0x87 0xf7 0xff 0x63 0xd8 0x07 0x00 0x6f 0x00 0x00 0x08 0x13 0x04 0x84 0x06 0x63 0x8c 0x97 0x06 0x03 0x17 0xc4 0x00 0x93 0x87 0xf7 0xff 0xe3 0x18 0x07 0xfe 0xb7 0x07 0xff 0xff 0x93 0x87 0x17 0x00 0x23 0x26 0xf4 0x00 0x23 0x22 0x04 0x06 0x23 0x20 0x04 0x00 0x23 0x24 0x04 0x00 0x23 0x22 0x04 0x00 0x23 0x28 0x04 0x00 0x23 0x2a 0x04 0x00 0x23 0x2c 0x04 0x00 0x13 0x06 0x80 0x00 0x93 0x05 0x00 0x00 0x13 0x05 0xc4 0x05 0xef 0xf0 0x8f 0xc1 0x23 0x28 0x04 0x02 0x23 0x2a 0x04 0x02 0x23 0x22 0x04 0x04 0x23 0x24 0x04 0x04 0x83 0x20 0xc1 0x01 0x13 0x05 0x04 0x00 0x03 0x24 0x81 0x01 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x03 0x24 0x09 0x00 0x63 0x0c 0x04 0x00 0x13 0x09 0x04 0x00 0x6f 0xf0 0x5f 0xf6 0x13 0x05 0x09 0x00 0xef 0xf0 0x1f 0xd3 0x6f 0xf0 0x1f 0xf5 0x93 0x05 0xc0 0x1a 0x13 0x85 0x09 0x00 0xef 0x00 0xd0 0x0d 0x13 0x04 0x05 0x00 0x63 0x08 0x05 0x02 0x13 0x05 0xc5 0x00 0x93 0x07 0x40 0x00 0x23 0x20 0x04 0x00 0x23 0x22 0xf4 0x00 0x23 0x24 0xa4 0x00 0x13 0x06 0x00 0x1a 0x93 0x05 0x00 0x00 0xef 0xf0 0x8f 0xb9 0x23 0x20 0x89 0x00 0x13 0x09 0x04 0x00 0x6f 0xf0 0x9f 0xf1 0x23 0x20 0x09 0x00 0x93 0x07 0xc0 0x00 0x23 0xa0 0xf9 0x00 0x6f 0xf0 0x9f 0xf7 0x03 0xa5 0x01 0x03 0xb7 0x25 0x01 0x00 0x93 0x85 0x05 0x23 0x6f 0x00 0xc0 0x56 0x83 0x27 0x85 0x03 0x63 0x84 0x07 0x00 0x67 0x80 0x00 0x00 0x6f 0xf0 0xdf 0xcb 0x67 0x80 0x00 0x00 0x67 0x80 0x00 0x00 0x67 0x80 0x00 0x00 0x67 0x80 0x00 0x00 0x03 0xa5 0x81 0x03 0xb7 0x15 0x01 0x00 0x93 0x85 0xc5 0xc3 0x6f 0x00 0x80 0x49 0x03 0xa5 0x81 0x03 0xb7 0x15 0x01 0x00 0x93 0x85 0x05 0xc5 0x6f 0x00 0x80 0x48 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0xb7 0x37 0x01 0x00 0x37 0x34 0x01 0x00 0x93 0x87 0x87 0x00 0x13 0x04 0xc4 0x00 0x33 0x04 0xf4 0x40 0x23 0x22 0x91 0x00 0x23 0x26 0x11 0x00 0x93 0x54 0x24 0x40 0x63 0x80 0x04 0x02 0x13 0x04 0xc4 0xff 0x33 0x04 0xf4 0x00 0x83 0x27 0x04 0x00 0x93 0x84 0xf4 0xff 0x13 0x04 0xc4 0xff 0xe7 0x80 0x07 0x00 0xe3 0x98 0x04 0xfe 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xfe 0x23 0x26 0x31 0x01 0x23 0x2c 0x81 0x00 0x23 0x2a 0x91 0x00 0x23 0x28 0x21 0x01 0x23 0x24 0x41 0x01 0x23 0x2e 0x11 0x00 0x13 0x8a 0x05 0x00 0x13 0x09 0x05 0x00 0x93 0x89 0x81 0xc2 0xef 0x00 0x50 0x73 0x03 0xa7 0x89 0x00 0xb7 0x17 0x00 0x00 0x13 0x84 0xf7 0xfe 0x83 0x24 0x47 0x00 0x93 0xf4 0xc4 0xff 0x33 0x84 0x84 0x00 0x33 0x04 0x44 0x41 0x13 0x54 0xc4 0x00 0x13 0x04 0xf4 0xff 0x13 0x14 0xc4 0x00 0x63 0x4e 0xf4 0x00 0x93 0x05 0x00 0x00 0x13 0x05 0x09 0x00 0xef 0x00 0x50 0x70 0x83 0xa7 0x89 0x00 0xb3 0x87 0x97 0x00 0x63 0x08 0xf5 0x02 0x13 0x05 0x09 0x00 0xef 0x00 0xd0 0x6e 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x03 0x2a 0x81 0x00 0x13 0x05 0x00 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0xb3 0x05 0x80 0x40 0x13 0x05 0x09 0x00 0xef 0x00 0x10 0x6c 0x93 0x07 0xf0 0xff 0x63 0x08 0xf5 0x04 0x93 0x87 0xc1 0x05 0x03 0xa7 0x07 0x00 0x83 0xa6 0x89 0x00 0xb3 0x84 0x84 0x40 0x93 0xe4 0x14 0x00 0x33 0x07 0x87 0x40 0x13 0x05 0x09 0x00 0x23 0xa2 0x96 0x00 0x23 0xa0 0xe7 0x00 0xef 0x00 0xd0 0x68 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x03 0x2a 0x81 0x00 0x13 0x05 0x10 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x93 0x05 0x00 0x00 0x13 0x05 0x09 0x00 0xef 0x00 0x10 0x66 0x03 0xa7 0x89 0x00 0x93 0x06 0xf0 0x00 0xb3 0x07 0xe5 0x40 0xe3 0xde 0xf6 0xf4 0x83 0xa6 0xc1 0x03 0x93 0xe7 0x17 0x00 0x23 0x22 0xf7 0x00 0x33 0x05 0xd5 0x40 0x23 0xae 0xa1 0x04 0x6f 0xf0 0x5f 0xf4 0x63 0x8e 0x05 0x16 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x13 0x84 0x05 0x00 0x93 0x04 0x05 0x00 0x23 0x26 0x11 0x00 0xef 0x00 0x10 0x61 0x03 0x25 0xc4 0xff 0x13 0x07 0x84 0xff 0x93 0x77 0xe5 0xff 0x33 0x06 0xf7 0x00 0x93 0x85 0x81 0xc2 0x83 0x26 0x46 0x00 0x03 0xa8 0x85 0x00 0x93 0xf6 0xc6 0xff 0x63 0x0e 0xc8 0x18 0x23 0x22 0xd6 0x00 0x13 0x75 0x15 0x00 0x33 0x08 0xd6 0x00 0x63 0x1e 0x05 0x08 0x03 0x23 0x84 0xff 0x03 0x28 0x48 0x00 0x33 0x07 0x67 0x40 0x83 0x28 0x87 0x00 0x13 0x85 0x01 0xc3 0xb3 0x87 0x67 0x00 0x13 0x78 0x18 0x00 0x63 0x80 0xa8 0x14 0x03 0x23 0xc7 0x00 0x23 0xa6 0x68 0x00 0x23 0x24 0x13 0x01 0x63 0x04 0x08 0x1a 0x93 0xe6 0x17 0x00 0x23 0x22 0xd7 0x00 0x23 0x20 0xf6 0x00 0x93 0x06 0xf0 0x1f 0x63 0xec 0xf6 0x06 0x93 0xf6 0x87 0xff 0x93 0x86 0x86 0x00 0x03 0xa5 0x45 0x00 0xb3 0x86 0xd5 0x00 0x03 0xa6 0x06 0x00 0x13 0xd8 0x57 0x00 0x93 0x07 0x10 0x00 0xb3 0x97 0x07 0x01 0xb3 0xe7 0xa7 0x00 0x13 0x85 0x86 0xff 0x23 0x26 0xa7 0x00 0x23 0x24 0xc7 0x00 0x23 0xa2 0xf5 0x00 0x23 0xa0 0xe6 0x00 0x23 0x26 0xe6 0x00 0x03 0x24 0x81 0x00 0x83 0x20 0xc1 0x00 0x13 0x85 0x04 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x6f 0x00 0x90 0x54 0x03 0x25 0x48 0x00 0x13 0x75 0x15 0x00 0x63 0x06 0x05 0x08 0x93 0xe6 0x17 0x00 0x23 0x2e 0xd4 0xfe 0x23 0x20 0xf6 0x00 0x93 0x06 0xf0 0x1f 0xe3 0xf8 0xf6 0xf8 0x93 0xd6 0x97 0x00 0x13 0x06 0x40 0x00 0x63 0x6e 0xd6 0x10 0x93 0xd6 0x67 0x00 0x13 0x85 0x96 0x03 0x13 0x86 0x86 0x03 0x13 0x15 0x35 0x00 0x33 0x85 0xa5 0x00 0x83 0x26 0x05 0x00 0x13 0x05 0x85 0xff 0x63 0x18 0xd5 0x00 0x6f 0x00 0x00 0x15 0x83 0xa6 0x86 0x00 0x63 0x08 0xd5 0x00 0x03 0xa6 0x46 0x00 0x13 0x76 0xc6 0xff 0xe3 0xe8 0xc7 0xfe 0x03 0xa5 0xc6 0x00 0x23 0x26 0xa7 0x00 0x23 0x24 0xd7 0x00 0x03 0x24 0x81 0x00 0x23 0x24 0xe5 0x00 0x83 0x20 0xc1 0x00 0x13 0x85 0x04 0x00 0x83 0x24 0x41 0x00 0x23 0xa6 0xe6 0x00 0x13 0x01 0x01 0x01 0x6f 0x00 0x90 0x4b 0x67 0x80 0x00 0x00 0xb3 0x87 0xd7 0x00 0x13 0x85 0x01 0xc3 0x83 0x26 0x86 0x00 0x63 0x8c 0xa6 0x0c 0x03 0x28 0xc6 0x00 0x13 0xe5 0x17 0x00 0x33 0x06 0xf7 0x00 0x23 0xa6 0x06 0x01 0x23 0x24 0xd8 0x00 0x23 0x22 0xa7 0x00 0x23 0x20 0xf6 0x00 0x6f 0xf0 0x5f 0xee 0x63 0x1c 0x08 0x12 0x83 0x25 0x86 0x00 0x03 0x26 0xc6 0x00 0xb3 0x86 0xf6 0x00 0x93 0xe7 0x16 0x00 0x23 0xa6 0xc5 0x00 0x23 0x24 0xb6 0x00 0x23 0x22 0xf7 0x00 0x33 0x07 0xd7 0x00 0x23 0x20 0xd7 0x00 0x6f 0xf0 0xdf 0xef 0x13 0x75 0x15 0x00 0xb3 0x86 0xd7 0x00 0x63 0x10 0x05 0x02 0x03 0x25 0x84 0xff 0x33 0x07 0xa7 0x40 0x83 0x27 0xc7 0x00 0x03 0x26 0x87 0x00 0xb3 0x86 0xa6 0x00 0x23 0x26 0xf6 0x00 0x23 0xa4 0xc7 0x00 0x13 0xe6 0x16 0x00 0x83 0xa7 0x01 0x04 0x23 0x22 0xc7 0x00 0x23 0xa4 0xe5 0x00 0xe3 0xe0 0xf6 0xec 0x83 0xa5 0xc1 0x04 0x13 0x85 0x04 0x00 0xef 0xf0 0x1f 0xcb 0x6f 0xf0 0x1f 0xeb 0xb3 0x87 0xd7 0x00 0x6f 0xf0 0xdf 0xf5 0x13 0x06 0x40 0x01 0x63 0x70 0xd6 0x02 0x13 0x06 0x40 0x05 0x63 0x64 0xd6 0x06 0x93 0xd6 0xc7 0x00 0x13 0x85 0xf6 0x06 0x13 0x86 0xe6 0x06 0x13 0x15 0x35 0x00 0x6f 0xf0 0x9f 0xed 0x13 0x85 0xc6 0x05 0x13 0x86 0xb6 0x05 0x13 0x15 0x35 0x00 0x6f 0xf0 0x9f 0xec 0x23 0xaa 0xe5 0x00 0x23 0xa8 0xe5 0x00 0x93 0xe6 0x17 0x00 0x23 0x26 0xa7 0x00 0x23 0x24 0xa7 0x00 0x23 0x22 0xd7 0x00 0x33 0x07 0xf7 0x00 0x23 0x20 0xf7 0x00 0x6f 0xf0 0x1f 0xe5 0x03 0xa8 0x45 0x00 0x13 0x56 0x26 0x40 0x93 0x07 0x10 0x00 0xb3 0x97 0xc7 0x00 0xb3 0xe7 0x07 0x01 0x23 0xa2 0xf5 0x00 0x6f 0xf0 0x5f 0xeb 0x13 0x06 0x40 0x15 0x63 0x6c 0xd6 0x00 0x93 0xd6 0xf7 0x00 0x13 0x85 0x86 0x07 0x13 0x86 0x76 0x07 0x13 0x15 0x35 0x00 0x6f 0xf0 0xdf 0xe6 0x13 0x06 0x40 0x55 0x63 0x6c 0xd6 0x00 0x93 0xd6 0x27 0x01 0x13 0x85 0xd6 0x07 0x13 0x86 0xc6 0x07 0x13 0x15 0x35 0x00 0x6f 0xf0 0x1f 0xe5 0x13 0x05 0x80 0x3f 0x13 0x06 0xe0 0x07 0x6f 0xf0 0x5f 0xe4 0x93 0xe6 0x17 0x00 0x23 0x22 0xd7 0x00 0x23 0x20 0xf6 0x00 0x6f 0xf0 0x1f 0xde 0x13 0x01 0x01 0xfe 0x23 0x28 0x21 0x01 0x23 0x26 0x31 0x01 0x23 0x24 0x41 0x01 0x23 0x22 0x51 0x01 0x23 0x20 0x61 0x01 0x23 0x2e 0x11 0x00 0x23 0x2c 0x81 0x00 0x23 0x2a 0x91 0x00 0x13 0x8b 0x05 0x00 0x93 0x0a 0x05 0x2e 0x13 0x0a 0x00 0x00 0x93 0x09 0x10 0x00 0x13 0x09 0xf0 0xff 0x83 0xa4 0x4a 0x00 0x03 0xa4 0x8a 0x00 0x93 0x84 0xf4 0xff 0x63 0xc6 0x04 0x02 0x83 0x57 0xc4 0x00 0x93 0x84 0xf4 0xff 0x63 0xfc 0xf9 0x00 0x83 0x17 0xe4 0x00 0x13 0x05 0x04 0x00 0x63 0x86 0x27 0x01 0xe7 0x00 0x0b 0x00 0x33 0x6a 0xaa 0x00 0x13 0x04 0x84 0x06 0xe3 0x9e 0x24 0xfd 0x83 0xaa 0x0a 0x00 0xe3 0x92 0x0a 0xfc 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x83 0x2a 0x41 0x00 0x03 0x2b 0x01 0x00 0x13 0x05 0x0a 0x00 0x03 0x2a 0x81 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xfd 0x23 0x20 0x21 0x03 0x23 0x2e 0x31 0x01 0x23 0x2c 0x41 0x01 0x23 0x2a 0x51 0x01 0x23 0x28 0x61 0x01 0x23 0x26 0x71 0x01 0x23 0x26 0x11 0x02 0x23 0x24 0x81 0x02 0x23 0x22 0x91 0x02 0x93 0x0a 0x05 0x00 0x93 0x8b 0x05 0x00 0x13 0x0b 0x05 0x2e 0x13 0x0a 0x00 0x00 0x93 0x09 0x10 0x00 0x13 0x09 0xf0 0xff 0x83 0x24 0x4b 0x00 0x03 0x24 0x8b 0x00 0x93 0x84 0xf4 0xff 0x63 0xc8 0x04 0x02 0x83 0x57 0xc4 0x00 0x93 0x84 0xf4 0xff 0x63 0xfe 0xf9 0x00 0x83 0x17 0xe4 0x00 0x93 0x05 0x04 0x00 0x13 0x85 0x0a 0x00 0x63 0x86 0x27 0x01 0xe7 0x80 0x0b 0x00 0x33 0x6a 0xaa 0x00 0x13 0x04 0x84 0x06 0xe3 0x9c 0x24 0xfd 0x03 0x2b 0x0b 0x00 0xe3 0x10 0x0b 0xfc 0x83 0x20 0xc1 0x02 0x03 0x24 0x81 0x02 0x83 0x24 0x41 0x02 0x03 0x29 0x01 0x02 0x83 0x29 0xc1 0x01 0x83 0x2a 0x41 0x01 0x03 0x2b 0x01 0x01 0x83 0x2b 0xc1 0x00 0x13 0x05 0x0a 0x00 0x03 0x2a 0x81 0x01 0x13 0x01 0x01 0x03 0x67 0x80 0x00 0x00 0x83 0x97 0xc5 0x00 0x13 0x01 0x01 0xf8 0x23 0x2c 0x81 0x06 0x23 0x2e 0x11 0x06 0x23 0x2a 0x91 0x06 0x23 0x28 0x21 0x07 0x23 0x26 0x31 0x07 0x23 0x24 0x41 0x07 0x13 0xf7 0x27 0x00 0x13 0x84 0x05 0x00 0x63 0x0c 0x07 0x02 0x93 0x87 0x35 0x04 0x23 0xa0 0xf5 0x00 0x23 0xa8 0xf5 0x00 0x93 0x07 0x10 0x00 0x23 0xaa 0xf5 0x00 0x83 0x20 0xc1 0x07 0x03 0x24 0x81 0x07 0x83 0x24 0x41 0x07 0x03 0x29 0x01 0x07 0x83 0x29 0xc1 0x06 0x03 0x2a 0x81 0x06 0x13 0x01 0x01 0x08 0x67 0x80 0x00 0x00 0x83 0x95 0xe5 0x00 0x93 0x04 0x05 0x00 0x63 0xcc 0x05 0x08 0x13 0x06 0x81 0x00 0xef 0x00 0x10 0x53 0x63 0x44 0x05 0x08 0x83 0x27 0xc1 0x00 0x37 0xf9 0x00 0x00 0xb7 0x19 0x00 0x00 0x33 0x79 0xf9 0x00 0xb7 0xe7 0xff 0xff 0x33 0x09 0xf9 0x00 0x13 0x39 0x19 0x00 0x13 0x0a 0x00 0x40 0x93 0x89 0x09 0x80 0x93 0x05 0x0a 0x00 0x13 0x85 0x04 0x00 0xef 0x00 0x40 0x1c 0x83 0x17 0xc4 0x00 0x63 0x0e 0x05 0x06 0x37 0x17 0x01 0x00 0x13 0x07 0x47 0xc4 0x23 0xae 0xe4 0x02 0x93 0xe7 0x07 0x08 0x23 0x16 0xf4 0x00 0x23 0x20 0xa4 0x00 0x23 0x28 0xa4 0x00 0x23 0x2a 0x44 0x01 0x63 0x18 0x09 0x08 0xb3 0xe7 0x37 0x01 0x83 0x20 0xc1 0x07 0x23 0x16 0xf4 0x00 0x03 0x24 0x81 0x07 0x83 0x24 0x41 0x07 0x03 0x29 0x01 0x07 0x83 0x29 0xc1 0x06 0x03 0x2a 0x81 0x06 0x13 0x01 0x01 0x08 0x67 0x80 0x00 0x00 0x83 0x17 0xc4 0x00 0x93 0xf7 0x07 0x08 0x13 0x09 0x00 0x00 0x63 0x86 0x07 0x04 0x13 0x0a 0x00 0x04 0x93 0x05 0x0a 0x00 0x13 0x85 0x04 0x00 0xef 0x00 0x00 0x15 0x83 0x17 0xc4 0x00 0x93 0x09 0x00 0x00 0xe3 0x16 0x05 0xf8 0x13 0xf7 0x07 0x20 0xe3 0x1a 0x07 0xf0 0x93 0xf7 0xc7 0xff 0x93 0xe7 0x27 0x00 0x13 0x07 0x34 0x04 0x23 0x16 0xf4 0x00 0x93 0x07 0x10 0x00 0x23 0x20 0xe4 0x00 0x23 0x28 0xe4 0x00 0x23 0x2a 0xf4 0x00 0x6f 0xf0 0x1f 0xef 0x13 0x0a 0x00 0x40 0x93 0x09 0x00 0x00 0x6f 0xf0 0x1f 0xf4 0x83 0x15 0xe4 0x00 0x13 0x85 0x04 0x00 0xef 0x00 0xd0 0x49 0x63 0x16 0x05 0x00 0x83 0x17 0xc4 0x00 0x6f 0xf0 0x1f 0xf6 0x83 0x57 0xc4 0x00 0x93 0xf7 0xc7 0xff 0x93 0xe7 0x17 0x00 0x93 0x97 0x07 0x01 0x93 0xd7 0x07 0x41 0x6f 0xf0 0x9f 0xf4 0x13 0x01 0x01 0xf9 0x23 0x24 0x81 0x06 0x13 0x84 0x05 0x00 0x83 0x95 0xe5 0x00 0x23 0x22 0x91 0x06 0x23 0x20 0x21 0x07 0x23 0x26 0x11 0x06 0x93 0x04 0x06 0x00 0x13 0x89 0x06 0x00 0x63 0xca 0x05 0x04 0x13 0x06 0x81 0x00 0xef 0x00 0x50 0x3e 0x63 0x44 0x05 0x04 0x03 0x27 0xc1 0x00 0xb7 0xf7 0x00 0x00 0x83 0x20 0xc1 0x06 0xb3 0xf7 0xe7 0x00 0x37 0xe7 0xff 0xff 0xb3 0x87 0xe7 0x00 0x03 0x24 0x81 0x06 0x93 0xb7 0x17 0x00 0x23 0x20 0xf9 0x00 0x13 0x07 0x00 0x40 0x23 0xa0 0xe4 0x00 0x37 0x15 0x00 0x00 0x83 0x24 0x41 0x06 0x03 0x29 0x01 0x06 0x13 0x05 0x05 0x80 0x13 0x01 0x01 0x07 0x67 0x80 0x00 0x00 0x83 0x57 0xc4 0x00 0x93 0xf7 0x07 0x08 0x63 0x88 0x07 0x02 0x83 0x20 0xc1 0x06 0x03 0x24 0x81 0x06 0x93 0x07 0x00 0x00 0x23 0x20 0xf9 0x00 0x13 0x07 0x00 0x04 0x23 0xa0 0xe4 0x00 0x03 0x29 0x01 0x06 0x83 0x24 0x41 0x06 0x13 0x05 0x00 0x00 0x13 0x01 0x01 0x07 0x67 0x80 0x00 0x00 0x83 0x20 0xc1 0x06 0x03 0x24 0x81 0x06 0x23 0x20 0xf9 0x00 0x13 0x07 0x00 0x40 0x23 0xa0 0xe4 0x00 0x03 0x29 0x01 0x06 0x83 0x24 0x41 0x06 0x13 0x05 0x00 0x00 0x13 0x01 0x01 0x07 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xfd 0x23 0x2e 0x31 0x01 0x23 0x26 0x11 0x02 0x23 0x24 0x81 0x02 0x23 0x22 0x91 0x02 0x23 0x20 0x21 0x03 0x23 0x2c 0x41 0x01 0x23 0x2a 0x51 0x01 0x23 0x28 0x61 0x01 0x23 0x26 0x71 0x01 0x23 0x24 0x81 0x01 0x23 0x22 0x91 0x01 0x93 0x87 0xb5 0x00 0x13 0x07 0x60 0x01 0x93 0x09 0x05 0x00 0x63 0x6c 0xf7 0x08 0x93 0x07 0x00 0x01 0x63 0xea 0xb7 0x20 0xef 0x00 0xc0 0x72 0x93 0x04 0x00 0x01 0x93 0x07 0x80 0x01 0x93 0x05 0x20 0x00 0x13 0x89 0x81 0xc2 0xb3 0x07 0xf9 0x00 0x03 0xa4 0x47 0x00 0x13 0x87 0x87 0xff 0x63 0x00 0xe4 0x30 0x83 0x27 0x44 0x00 0x83 0x26 0xc4 0x00 0x03 0x26 0x84 0x00 0x93 0xf7 0xc7 0xff 0xb3 0x07 0xf4 0x00 0x03 0xa7 0x47 0x00 0x23 0x26 0xd6 0x00 0x23 0xa4 0xc6 0x00 0x13 0x67 0x17 0x00 0x13 0x85 0x09 0x00 0x23 0xa2 0xe7 0x00 0xef 0x00 0x00 0x6e 0x13 0x05 0x84 0x00 0x83 0x20 0xc1 0x02 0x03 0x24 0x81 0x02 0x83 0x24 0x41 0x02 0x03 0x29 0x01 0x02 0x83 0x29 0xc1 0x01 0x03 0x2a 0x81 0x01 0x83 0x2a 0x41 0x01 0x03 0x2b 0x01 0x01 0x83 0x2b 0xc1 0x00 0x03 0x2c 0x81 0x00 0x83 0x2c 0x41 0x00 0x13 0x01 0x01 0x03 0x67 0x80 0x00 0x00 0x93 0xf4 0x87 0xff 0x63 0xc0 0x07 0x18 0x63 0xee 0xb4 0x16 0xef 0x00 0x40 0x69 0x93 0x07 0x70 0x1f 0x63 0xfa 0x97 0x38 0x93 0xd7 0x94 0x00 0x63 0x8c 0x07 0x16 0x13 0x07 0x40 0x00 0x63 0x60 0xf7 0x2e 0x93 0xd7 0x64 0x00 0x93 0x85 0x97 0x03 0x13 0x85 0x87 0x03 0x93 0x96 0x35 0x00 0x13 0x89 0x81 0xc2 0xb3 0x06 0xd9 0x00 0x03 0xa4 0x46 0x00 0x93 0x86 0x86 0xff 0x63 0x86 0x86 0x02 0x13 0x06 0xf0 0x00 0x6f 0x00 0x00 0x01 0x63 0x5a 0x07 0x22 0x03 0x24 0xc4 0x00 0x63 0x8c 0x86 0x00 0x83 0x27 0x44 0x00 0x93 0xf7 0xc7 0xff 0x33 0x87 0x97 0x40 0xe3 0x54 0xe6 0xfe 0x93 0x05 0x05 0x00 0x03 0x24 0x09 0x01 0x13 0x88 0x01 0xc3 0x63 0x0e 0x04 0x1d 0x83 0x27 0x44 0x00 0x93 0x06 0xf0 0x00 0x93 0xf7 0xc7 0xff 0x33 0x87 0x97 0x40 0x63 0xc2 0xe6 0x32 0x23 0x2a 0x09 0x01 0x23 0x28 0x09 0x01 0x63 0x56 0x07 0x2e 0x13 0x07 0xf0 0x1f 0x03 0x25 0x49 0x00 0x63 0x6e 0xf7 0x1e 0x13 0xf7 0x87 0xff 0x13 0x07 0x87 0x00 0x33 0x07 0xe9 0x00 0x83 0x26 0x07 0x00 0x13 0xd6 0x57 0x00 0x93 0x07 0x10 0x00 0xb3 0x97 0xc7 0x00 0x33 0x65 0xf5 0x00 0x93 0x07 0x87 0xff 0x23 0x26 0xf4 0x00 0x23 0x24 0xd4 0x00 0x23 0x22 0xa9 0x00 0x23 0x20 0x87 0x00 0x23 0xa6 0x86 0x00 0x93 0xd7 0x25 0x40 0x13 0x06 0x10 0x00 0x33 0x16 0xf6 0x00 0x63 0x6a 0xc5 0x0a 0xb3 0x77 0xa6 0x00 0x63 0x94 0x07 0x02 0x13 0x16 0x16 0x00 0x93 0xf5 0xc5 0xff 0xb3 0x77 0xa6 0x00 0x93 0x85 0x45 0x00 0x63 0x9a 0x07 0x00 0x13 0x16 0x16 0x00 0xb3 0x77 0xa6 0x00 0x93 0x85 0x45 0x00 0xe3 0x8a 0x07 0xfe 0x93 0x08 0xf0 0x00 0x13 0x93 0x35 0x00 0x33 0x03 0x69 0x00 0x13 0x05 0x03 0x00 0x83 0x27 0xc5 0x00 0x13 0x8e 0x05 0x00 0x63 0x08 0xf5 0x1e 0x03 0xa7 0x47 0x00 0x13 0x84 0x07 0x00 0x83 0xa7 0xc7 0x00 0x13 0x77 0xc7 0xff 0xb3 0x06 0x97 0x40 0x63 0xc8 0xd8 0x1e 0xe3 0xc2 0x06 0xfe 0x33 0x07 0xe4 0x00 0x83 0x26 0x47 0x00 0x03 0x26 0x84 0x00 0x13 0x85 0x09 0x00 0x93 0xe6 0x16 0x00 0x23 0x22 0xd7 0x00 0x23 0x26 0xf6 0x00 0x23 0xa4 0xc7 0x00 0xef 0x00 0xc0 0x52 0x13 0x05 0x84 0x00 0x6f 0xf0 0xdf 0xe4 0x93 0x07 0xc0 0x00 0x23 0xa0 0xf9 0x00 0x13 0x05 0x00 0x00 0x6f 0xf0 0xdf 0xe3 0x93 0x06 0x00 0x20 0x93 0x05 0x00 0x04 0x13 0x05 0xf0 0x03 0x6f 0xf0 0x9f 0xe9 0x03 0x24 0x89 0x00 0x83 0x27 0x44 0x00 0x13 0xfb 0xc7 0xff 0x63 0x68 0x9b 0x00 0x33 0x07 0x9b 0x40 0x93 0x07 0xf0 0x00 0x63 0xc2 0xe7 0x0a 0x83 0xaa 0xc1 0x04 0x03 0xa7 0xc1 0x03 0x93 0x07 0xf0 0xff 0x33 0x0a 0x64 0x01 0xb3 0x8a 0x54 0x01 0x63 0x04 0xf7 0x3a 0xb7 0x17 0x00 0x00 0x93 0x87 0xf7 0x00 0xb3 0x8a 0xfa 0x00 0xb7 0xf7 0xff 0xff 0xb3 0xfa 0xfa 0x00 0x93 0x85 0x0a 0x00 0x13 0x85 0x09 0x00 0xef 0x00 0x40 0x4b 0x93 0x07 0xf0 0xff 0x93 0x0b 0x05 0x00 0x63 0x04 0xf5 0x20 0x63 0x60 0x45 0x21 0x13 0x8c 0xc1 0x05 0x83 0x25 0x0c 0x00 0xb3 0x85 0xba 0x00 0x23 0x20 0xbc 0x00 0x13 0x87 0x05 0x00 0x63 0x16 0xaa 0x28 0x93 0x17 0x45 0x01 0x63 0x92 0x07 0x28 0x83 0x2b 0x89 0x00 0xb3 0x07 0x5b 0x01 0x93 0xe7 0x17 0x00 0x23 0xa2 0xfb 0x00 0x83 0xa6 0x81 0x04 0x63 0xf4 0xb6 0x00 0x23 0xa4 0xb1 0x04 0x83 0xa6 0x41 0x04 0x63 0xf4 0xb6 0x00 0x23 0xa2 0xb1 0x04 0x13 0x84 0x0b 0x00 0x6f 0x00 0xc0 0x1b 0x03 0x25 0x49 0x00 0x6f 0xf0 0x9f 0xe8 0x93 0xe7 0x14 0x00 0x23 0x22 0xf4 0x00 0xb3 0x04 0x94 0x00 0x23 0x24 0x99 0x00 0x13 0x67 0x17 0x00 0x13 0x85 0x09 0x00 0x23 0xa2 0xe4 0x00 0xef 0x00 0x80 0x42 0x13 0x05 0x84 0x00 0x6f 0xf0 0x9f 0xd4 0x83 0x26 0xc4 0x00 0x03 0x26 0x84 0x00 0x6f 0xf0 0x9f 0xd1 0x03 0xa4 0xc7 0x00 0x93 0x85 0x25 0x00 0xe3 0x8c 0x87 0xdc 0x6f 0xf0 0x9f 0xcf 0x13 0xd7 0x97 0x00 0x93 0x06 0x40 0x00 0x63 0xf2 0xe6 0x14 0x93 0x06 0x40 0x01 0x63 0xea 0xe6 0x30 0x13 0x06 0xc7 0x05 0x93 0x06 0xb7 0x05 0x13 0x16 0x36 0x00 0x33 0x06 0xc9 0x00 0x03 0x27 0x06 0x00 0x13 0x06 0x86 0xff 0x63 0x18 0xe6 0x00 0x6f 0x00 0x00 0x2b 0x03 0x27 0x87 0x00 0x63 0x08 0xe6 0x00 0x83 0x26 0x47 0x00 0x93 0xf6 0xc6 0xff 0xe3 0xe8 0xd7 0xfe 0x03 0x26 0xc7 0x00 0x23 0x26 0xc4 0x00 0x23 0x24 0xe4 0x00 0x23 0x24 0x86 0x00 0x23 0x26 0x87 0x00 0x6f 0xf0 0x5f 0xde 0x13 0x07 0x40 0x01 0x63 0x76 0xf7 0x12 0x13 0x07 0x40 0x05 0x63 0x6a 0xf7 0x2c 0x93 0xd7 0xc4 0x00 0x93 0x85 0xf7 0x06 0x13 0x85 0xe7 0x06 0x93 0x96 0x35 0x00 0x6f 0xf0 0x5f 0xd1 0x13 0x0e 0x1e 0x00 0x93 0x77 0x3e 0x00 0x13 0x05 0x85 0x00 0x63 0x8e 0x07 0x10 0x83 0x27 0xc5 0x00 0x6f 0xf0 0xdf 0xdf 0x03 0x26 0x84 0x00 0x93 0xe5 0x14 0x00 0x23 0x22 0xb4 0x00 0x23 0x26 0xf6 0x00 0x23 0xa4 0xc7 0x00 0xb3 0x04 0x94 0x00 0x23 0x2a 0x99 0x00 0x23 0x28 0x99 0x00 0x93 0xe7 0x16 0x00 0x23 0xa6 0x04 0x01 0x23 0xa4 0x04 0x01 0x23 0xa2 0xf4 0x00 0x33 0x07 0xe4 0x00 0x13 0x85 0x09 0x00 0x23 0x20 0xd7 0x00 0xef 0x00 0x80 0x32 0x13 0x05 0x84 0x00 0x6f 0xf0 0x9f 0xc4 0xb3 0x07 0xf4 0x00 0x03 0xa7 0x47 0x00 0x13 0x85 0x09 0x00 0x13 0x67 0x17 0x00 0x23 0xa2 0xe7 0x00 0xef 0x00 0x80 0x30 0x13 0x05 0x84 0x00 0x6f 0xf0 0x9f 0xc2 0x93 0xd5 0x34 0x00 0x93 0x87 0x84 0x00 0x6f 0xf0 0x5f 0xbd 0x93 0xe6 0x14 0x00 0x23 0x22 0xd4 0x00 0xb3 0x04 0x94 0x00 0x23 0x2a 0x99 0x00 0x23 0x28 0x99 0x00 0x93 0x66 0x17 0x00 0x23 0xa6 0x04 0x01 0x23 0xa4 0x04 0x01 0x23 0xa2 0xd4 0x00 0xb3 0x07 0xf4 0x00 0x13 0x85 0x09 0x00 0x23 0xa0 0xe7 0x00 0xef 0x00 0x00 0x2c 0x13 0x05 0x84 0x00 0x6f 0xf0 0x1f 0xbe 0x13 0xd7 0x67 0x00 0x13 0x06 0x97 0x03 0x93 0x06 0x87 0x03 0x13 0x16 0x36 0x00 0x6f 0xf0 0x5f 0xec 0x63 0x0a 0x24 0x09 0x03 0x24 0x89 0x00 0x83 0x27 0x44 0x00 0x93 0xf7 0xc7 0xff 0x33 0x87 0x97 0x40 0x63 0xe6 0x97 0x00 0x93 0x07 0xf0 0x00 0xe3 0xc0 0xe7 0xe4 0x13 0x85 0x09 0x00 0xef 0x00 0xc0 0x27 0x13 0x05 0x00 0x00 0x6f 0xf0 0xdf 0xb9 0x93 0x85 0xc7 0x05 0x13 0x85 0xb7 0x05 0x93 0x96 0x35 0x00 0x6f 0xf0 0x9f 0xbf 0x83 0x27 0x83 0x00 0x93 0x85 0xf5 0xff 0x63 0x96 0x67 0x24 0x93 0xf7 0x35 0x00 0x13 0x03 0x83 0xff 0xe3 0x96 0x07 0xfe 0x03 0x27 0x49 0x00 0x93 0x47 0xf6 0xff 0xb3 0xf7 0xe7 0x00 0x23 0x22 0xf9 0x00 0x13 0x16 0x16 0x00 0xe3 0xea 0xc7 0xd2 0xe3 0x08 0x06 0xd2 0x33 0x77 0xf6 0x00 0x63 0x1a 0x07 0x00 0x13 0x16 0x16 0x00 0x33 0x77 0xf6 0x00 0x13 0x0e 0x4e 0x00 0xe3 0x0a 0x07 0xfe 0x93 0x05 0x0e 0x00 0x6f 0xf0 0x1f 0xc9 0x13 0x8c 0xc1 0x05 0x03 0x27 0x0c 0x00 0x33 0x87 0xea 0x00 0x23 0x20 0xec 0x00 0x83 0xa6 0xc1 0x03 0x93 0x07 0xf0 0xff 0x63 0x88 0xf6 0x14 0xb3 0x87 0x4b 0x41 0xb3 0x87 0xe7 0x00 0x23 0x20 0xfc 0x00 0x93 0xfc 0x7b 0x00 0x63 0x8c 0x0c 0x0c 0x37 0x17 0x00 0x00 0xb3 0x8b 0x9b 0x41 0x93 0x05 0x87 0x00 0x93 0x8b 0x8b 0x00 0xb3 0x85 0x95 0x41 0xb3 0x8a 0x5b 0x01 0xb3 0x85 0x55 0x41 0x13 0x07 0xf7 0xff 0x33 0xfa 0xe5 0x00 0x93 0x05 0x0a 0x00 0x13 0x85 0x09 0x00 0xef 0x00 0x40 0x1b 0x93 0x07 0xf0 0xff 0x63 0x08 0xf5 0x14 0x33 0x05 0x75 0x41 0xb3 0x0a 0x45 0x01 0x03 0x27 0x0c 0x00 0x23 0x24 0x79 0x01 0x93 0xe7 0x1a 0x00 0xb3 0x05 0xea 0x00 0x23 0x20 0xbc 0x00 0x23 0xa2 0xfb 0x00 0xe3 0x0c 0x24 0xd1 0x93 0x06 0xf0 0x00 0x63 0xf0 0x66 0x0f 0x03 0x27 0x44 0x00 0x93 0x07 0x4b 0xff 0x93 0xf7 0x87 0xff 0x13 0x77 0x17 0x00 0x33 0x67 0xf7 0x00 0x23 0x22 0xe4 0x00 0x13 0x06 0x50 0x00 0x33 0x07 0xf4 0x00 0x23 0x22 0xc7 0x00 0x23 0x24 0xc7 0x00 0x63 0xe6 0xf6 0x00 0x83 0xa7 0x4b 0x00 0x6f 0xf0 0xdf 0xcd 0x93 0x05 0x84 0x00 0x13 0x85 0x09 0x00 0xef 0xf0 0xcf 0xb0 0x83 0x2b 0x89 0x00 0x83 0x25 0x0c 0x00 0x83 0xa7 0x4b 0x00 0x6f 0xf0 0x1f 0xcc 0x93 0x8a 0x0a 0x01 0x6f 0xf0 0xdf 0xc6 0x93 0xd6 0x26 0x40 0x93 0x07 0x10 0x00 0xb3 0x97 0xd7 0x00 0x33 0x65 0xf5 0x00 0x23 0x22 0xa9 0x00 0x6f 0xf0 0x9f 0xd5 0xb3 0x85 0x5b 0x01 0xb3 0x05 0xb0 0x40 0x93 0x95 0x45 0x01 0x13 0xda 0x45 0x01 0x93 0x05 0x0a 0x00 0x13 0x85 0x09 0x00 0xef 0x00 0x40 0x0f 0x93 0x07 0xf0 0xff 0xe3 0x12 0xf5 0xf4 0x13 0x0a 0x00 0x00 0x6f 0xf0 0x5f 0xf4 0x93 0x06 0x40 0x05 0x63 0xe4 0xe6 0x04 0x13 0xd7 0xc7 0x00 0x13 0x06 0xf7 0x06 0x93 0x06 0xe7 0x06 0x13 0x16 0x36 0x00 0x6f 0xf0 0x5f 0xce 0x13 0x07 0x40 0x15 0x63 0x64 0xf7 0x04 0x93 0xd7 0xf4 0x00 0x93 0x85 0x87 0x07 0x13 0x85 0x77 0x07 0x93 0x96 0x35 0x00 0x6f 0xf0 0xdf 0xa3 0x23 0xae 0x71 0x03 0x6f 0xf0 0xdf 0xeb 0x93 0x07 0x10 0x00 0x23 0xa2 0xfb 0x00 0x6f 0xf0 0x5f 0xe1 0x93 0x06 0x40 0x15 0x63 0xe4 0xe6 0x04 0x13 0xd7 0xf7 0x00 0x13 0x06 0x87 0x07 0x93 0x06 0x77 0x07 0x13 0x16 0x36 0x00 0x6f 0xf0 0x9f 0xc9 0x13 0x07 0x40 0x55 0x63 0x64 0xf7 0x04 0x93 0xd7 0x24 0x01 0x93 0x85 0xd7 0x07 0x13 0x85 0xc7 0x07 0x93 0x96 0x35 0x00 0x6f 0xf0 0x1f 0x9f 0x93 0x8c 0x8c 0xff 0xb3 0x8a 0x9a 0x01 0xb3 0x8a 0x7a 0x41 0x13 0x0a 0x00 0x00 0x6f 0xf0 0xdf 0xea 0x93 0x06 0x40 0x55 0x63 0xe4 0xe6 0x02 0x13 0xd7 0x27 0x01 0x13 0x06 0xd7 0x07 0x93 0x06 0xc7 0x07 0x13 0x16 0x36 0x00 0x6f 0xf0 0xdf 0xc4 0x93 0x06 0x80 0x3f 0x93 0x05 0xf0 0x07 0x13 0x05 0xe0 0x07 0x6f 0xf0 0x1f 0x9b 0x13 0x06 0x80 0x3f 0x93 0x06 0xe0 0x07 0x6f 0xf0 0x1f 0xc3 0x83 0x27 0x49 0x00 0x6f 0xf0 0x1f 0xdd 0x67 0x80 0x00 0x00 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x13 0x04 0x05 0x00 0x13 0x85 0x05 0x00 0x23 0x26 0x11 0x00 0x23 0xa8 0x01 0x04 0xef 0x00 0x50 0x11 0x93 0x07 0xf0 0xff 0x63 0x0c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0xa7 0x01 0x05 0xe3 0x84 0x07 0xfe 0x83 0x20 0xc1 0x00 0x23 0x20 0xf4 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x13 0x84 0x05 0x00 0x83 0x95 0xe5 0x00 0x23 0x26 0x11 0x00 0xef 0x00 0x40 0x47 0x63 0x40 0x05 0x02 0x83 0x27 0x04 0x05 0x83 0x20 0xc1 0x00 0xb3 0x87 0xa7 0x00 0x23 0x28 0xf4 0x04 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0x57 0xc4 0x00 0x37 0xf7 0xff 0xff 0x13 0x07 0xf7 0xff 0xb3 0xf7 0xe7 0x00 0x83 0x20 0xc1 0x00 0x23 0x16 0xf4 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x05 0x00 0x00 0x67 0x80 0x00 0x00 0x83 0x97 0xc5 0x00 0x13 0x01 0x01 0xfe 0x23 0x2c 0x81 0x00 0x23 0x2a 0x91 0x00 0x23 0x28 0x21 0x01 0x23 0x26 0x31 0x01 0x23 0x2e 0x11 0x00 0x13 0xf7 0x07 0x10 0x13 0x84 0x05 0x00 0x93 0x04 0x05 0x00 0x13 0x09 0x06 0x00 0x93 0x89 0x06 0x00 0x63 0x10 0x07 0x04 0x37 0xf7 0xff 0xff 0x13 0x07 0xf7 0xff 0xb3 0xf7 0xe7 0x00 0x83 0x15 0xe4 0x00 0x23 0x16 0xf4 0x00 0x03 0x24 0x81 0x01 0x83 0x20 0xc1 0x01 0x93 0x86 0x09 0x00 0x13 0x06 0x09 0x00 0x83 0x29 0xc1 0x00 0x03 0x29 0x01 0x01 0x13 0x85 0x04 0x00 0x83 0x24 0x41 0x01 0x13 0x01 0x01 0x02 0x6f 0x00 0xc0 0x09 0x83 0x95 0xe5 0x00 0x93 0x06 0x20 0x00 0x13 0x06 0x00 0x00 0xef 0x00 0x00 0x34 0x83 0x17 0xc4 0x00 0x6f 0xf0 0x1f 0xfb 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x13 0x84 0x05 0x00 0x83 0x95 0xe5 0x00 0x23 0x26 0x11 0x00 0xef 0x00 0x00 0x32 0x93 0x07 0xf0 0xff 0x63 0x08 0xf5 0x02 0x83 0x57 0xc4 0x00 0x37 0x17 0x00 0x00 0x83 0x20 0xc1 0x00 0xb3 0xe7 0xe7 0x00 0x93 0x97 0x07 0x01 0x93 0xd7 0x07 0x41 0x23 0x28 0xa4 0x04 0x23 0x16 0xf4 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0x57 0xc4 0x00 0x37 0xf7 0xff 0xff 0x13 0x07 0xf7 0xff 0xb3 0xf7 0xe7 0x00 0x93 0x97 0x07 0x01 0x93 0xd7 0x07 0x41 0x83 0x20 0xc1 0x00 0x23 0x16 0xf4 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0x95 0xe5 0x00 0x6f 0x00 0x00 0x08 0x13 0x01 0x01 0xff 0x13 0x87 0x05 0x00 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x93 0x05 0x06 0x00 0x13 0x04 0x05 0x00 0x13 0x86 0x06 0x00 0x13 0x05 0x07 0x00 0x23 0x26 0x11 0x00 0x23 0xa8 0x01 0x04 0xef 0x00 0x80 0x7b 0x93 0x07 0xf0 0xff 0x63 0x0c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0xa7 0x01 0x05 0xe3 0x84 0x07 0xfe 0x83 0x20 0xc1 0x00 0x23 0x20 0xf4 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x93 0x05 0x05 0x00 0x93 0x06 0x00 0x00 0x13 0x06 0x00 0x00 0x13 0x05 0x00 0x00 0x6f 0x00 0xc0 0x4b 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x13 0x04 0x05 0x00 0x13 0x85 0x05 0x00 0x23 0x26 0x11 0x00 0x23 0xa8 0x01 0x04 0xef 0x00 0x40 0x53 0x93 0x07 0xf0 0xff 0x63 0x0c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0xa7 0x01 0x05 0xe3 0x84 0x07 0xfe 0x83 0x20 0xc1 0x00 0x23 0x20 0xf4 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x26 0x11 0x00 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x23 0x20 0x21 0x01 0x63 0x80 0x05 0x02 0x13 0x84 0x05 0x00 0x93 0x04 0x05 0x00 0x63 0x06 0x05 0x00 0x83 0x27 0x85 0x03 0x63 0x8c 0x07 0x0a 0x83 0x17 0xc4 0x00 0x63 0x92 0x07 0x02 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x13 0x09 0x00 0x00 0x83 0x24 0x41 0x00 0x13 0x05 0x09 0x00 0x03 0x29 0x01 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x93 0x05 0x04 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x8f 0xe8 0x83 0x27 0xc4 0x02 0x13 0x09 0x05 0x00 0x63 0x8a 0x07 0x00 0x83 0x25 0xc4 0x01 0x13 0x85 0x04 0x00 0xe7 0x80 0x07 0x00 0x63 0x4c 0x05 0x06 0x83 0x57 0xc4 0x00 0x93 0xf7 0x07 0x08 0x63 0x9e 0x07 0x06 0x83 0x25 0x04 0x03 0x63 0x8c 0x05 0x00 0x93 0x07 0x04 0x04 0x63 0x86 0xf5 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x1f 0xe9 0x23 0x28 0x04 0x02 0x83 0x25 0x44 0x04 0x63 0x88 0x05 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0xdf 0xe7 0x23 0x22 0x04 0x04 0xef 0xe0 0x9f 0xcb 0x23 0x16 0x04 0x00 0xef 0xe0 0x5f 0xcb 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x05 0x09 0x00 0x03 0x29 0x01 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0xef 0xe0 0x1f 0xc8 0x83 0x17 0xc4 0x00 0xe3 0x86 0x07 0xf4 0x6f 0xf0 0x9f 0xf6 0x83 0x57 0xc4 0x00 0x13 0x09 0xf0 0xff 0x93 0xf7 0x07 0x08 0xe3 0x86 0x07 0xf8 0x83 0x25 0x04 0x01 0x13 0x85 0x04 0x00 0xef 0xe0 0x5f 0xe2 0x6f 0xf0 0xdf 0xf7 0x93 0x05 0x05 0x00 0x03 0xa5 0x81 0x03 0x6f 0xf0 0x9f 0xee 0x13 0x01 0x01 0xff 0x13 0x87 0x05 0x00 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x13 0x04 0x05 0x00 0x93 0x05 0x06 0x00 0x13 0x05 0x07 0x00 0x23 0x26 0x11 0x00 0x23 0xa8 0x01 0x04 0xef 0x00 0x80 0x42 0x93 0x07 0xf0 0xff 0x63 0x0c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0xa7 0x01 0x05 0xe3 0x84 0x07 0xfe 0x83 0x20 0xc1 0x00 0x23 0x20 0xf4 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x13 0x04 0x05 0x00 0x13 0x85 0x05 0x00 0x23 0x26 0x11 0x00 0x23 0xa8 0x01 0x04 0xef 0x00 0xc0 0x42 0x93 0x07 0xf0 0xff 0x63 0x0c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0xa7 0x01 0x05 0xe3 0x84 0x07 0xfe 0x83 0x20 0xc1 0x00 0x23 0x20 0xf4 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x13 0x87 0x05 0x00 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x93 0x05 0x06 0x00 0x13 0x04 0x05 0x00 0x13 0x86 0x06 0x00 0x13 0x05 0x07 0x00 0x23 0x26 0x11 0x00 0x23 0xa8 0x01 0x04 0xef 0x00 0x40 0x40 0x93 0x07 0xf0 0xff 0x63 0x0c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0xa7 0x01 0x05 0xe3 0x84 0x07 0xfe 0x83 0x20 0xc1 0x00 0x23 0x20 0xf4 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x13 0x87 0x05 0x00 0x23 0x24 0x81 0x00 0x23 0x22 0x91 0x00 0x93 0x05 0x06 0x00 0x13 0x04 0x05 0x00 0x13 0x86 0x06 0x00 0x13 0x05 0x07 0x00 0x23 0x26 0x11 0x00 0x23 0xa8 0x01 0x04 0xef 0x00 0x00 0x3e 0x93 0x07 0xf0 0xff 0x63 0x0c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x83 0xa7 0x01 0x05 0xe3 0x84 0x07 0xfe 0x83 0x20 0xc1 0x00 0x23 0x20 0xf4 0x00 0x03 0x24 0x81 0x00 0x83 0x24 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xfe 0x23 0x28 0x21 0x01 0x03 0xa9 0x05 0x00 0x23 0x2c 0x81 0x00 0x23 0x2a 0x91 0x00 0x23 0x2e 0x11 0x00 0x23 0x26 0x31 0x01 0x23 0x24 0x41 0x01 0x13 0x84 0x05 0x00 0x93 0x04 0x05 0x00 0x63 0x02 0x09 0x04 0x83 0x29 0x09 0x00 0x63 0x88 0x09 0x02 0x03 0xaa 0x09 0x00 0x63 0x0e 0x0a 0x00 0x83 0x25 0x0a 0x00 0x63 0x84 0x05 0x00 0xef 0xf0 0xdf 0xfb 0x93 0x05 0x0a 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x1f 0xc3 0x93 0x85 0x09 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x5f 0xc2 0x93 0x05 0x09 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x9f 0xc1 0x93 0x05 0x04 0x00 0x03 0x24 0x81 0x01 0x83 0x20 0xc1 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x03 0x2a 0x81 0x00 0x13 0x85 0x04 0x00 0x83 0x24 0x41 0x01 0x13 0x01 0x01 0x02 0x6f 0xe0 0x1f 0xbf 0x83 0xa7 0x81 0x03 0x63 0x8a 0xa7 0x10 0x83 0x25 0xc5 0x04 0x13 0x01 0x01 0xfe 0x23 0x2a 0x91 0x00 0x23 0x2e 0x11 0x00 0x23 0x2c 0x81 0x00 0x23 0x28 0x21 0x01 0x23 0x26 0x31 0x01 0x93 0x04 0x05 0x00 0x63 0x80 0x05 0x04 0x13 0x09 0x00 0x00 0x93 0x09 0x00 0x08 0xb3 0x87 0x25 0x01 0x03 0xa4 0x07 0x00 0x63 0x0e 0x04 0x00 0x93 0x05 0x04 0x00 0x03 0x24 0x04 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x1f 0xba 0xe3 0x18 0x04 0xfe 0x83 0xa5 0xc4 0x04 0x13 0x09 0x49 0x00 0xe3 0x1c 0x39 0xfd 0x13 0x85 0x04 0x00 0xef 0xe0 0x9f 0xb8 0x83 0xa5 0x04 0x04 0x63 0x86 0x05 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x9f 0xb7 0x03 0xa4 0x84 0x14 0x63 0x00 0x04 0x02 0x13 0x89 0xc4 0x14 0x63 0x0c 0x24 0x01 0x93 0x05 0x04 0x00 0x03 0x24 0x04 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x9f 0xb5 0xe3 0x18 0x89 0xfe 0x83 0xa5 0x44 0x05 0x63 0x86 0x05 0x00 0x13 0x85 0x04 0x00 0xef 0xe0 0x5f 0xb4 0x83 0xa7 0x84 0x03 0x63 0x86 0x07 0x04 0x83 0xa7 0xc4 0x03 0x13 0x85 0x04 0x00 0xe7 0x80 0x07 0x00 0x03 0xa4 0x04 0x2e 0x63 0x0c 0x04 0x02 0x83 0x25 0x04 0x00 0x63 0x86 0x05 0x00 0x13 0x85 0x04 0x00 0xef 0xf0 0x9f 0xe9 0x93 0x05 0x04 0x00 0x03 0x24 0x81 0x01 0x83 0x20 0xc1 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x13 0x85 0x04 0x00 0x83 0x24 0x41 0x01 0x13 0x01 0x01 0x02 0x6f 0xe0 0x5f 0xaf 0x83 0x20 0xc1 0x01 0x03 0x24 0x81 0x01 0x83 0x24 0x41 0x01 0x03 0x29 0x01 0x01 0x83 0x29 0xc1 0x00 0x13 0x01 0x01 0x02 0x67 0x80 0x00 0x00 0x67 0x80 0x00 0x00 0x03 0xa7 0x01 0x03 0x83 0x27 0x87 0x14 0x63 0x8c 0x07 0x04 0x03 0xa7 0x47 0x00 0x13 0x08 0xf0 0x01 0x63 0x4e 0xe8 0x06 0x13 0x18 0x27 0x00 0x63 0x06 0x05 0x02 0x33 0x83 0x07 0x01 0x23 0x24 0xc3 0x08 0x83 0xa8 0x87 0x18 0x13 0x06 0x10 0x00 0x33 0x16 0xe6 0x00 0xb3 0xe8 0xc8 0x00 0x23 0xa4 0x17 0x19 0x23 0x24 0xd3 0x10 0x93 0x06 0x20 0x00 0x63 0x04 0xd5 0x02 0x13 0x07 0x17 0x00 0x23 0xa2 0xe7 0x00 0xb3 0x87 0x07 0x01 0x23 0xa4 0xb7 0x00 0x13 0x05 0x00 0x00 0x67 0x80 0x00 0x00 0x93 0x07 0xc7 0x14 0x23 0x24 0xf7 0x14 0x6f 0xf0 0x5f 0xfa 0x83 0xa6 0xc7 0x18 0x13 0x07 0x17 0x00 0x23 0xa2 0xe7 0x00 0xb3 0xe6 0xc6 0x00 0x23 0xa6 0xd7 0x18 0xb3 0x87 0x07 0x01 0x23 0xa4 0xb7 0x00 0x13 0x05 0x00 0x00 0x67 0x80 0x00 0x00 0x13 0x05 0xf0 0xff 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x26 0x11 0x00 0x23 0x24 0x81 0x00 0x93 0x08 0x90 0x03 0x73 0x00 0x00 0x00 0x13 0x04 0x05 0x00 0x63 0x4c 0x05 0x00 0x83 0x20 0xc1 0x00 0x13 0x05 0x04 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x33 0x04 0x80 0x40 0xef 0x00 0xc0 0x2c 0x23 0x20 0x85 0x00 0x13 0x04 0xf0 0xff 0x6f 0xf0 0xdf 0xfd 0x93 0x08 0xd0 0x05 0x73 0x00 0x00 0x00 0x63 0x44 0x05 0x00 0x6f 0x00 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x24 0x81 0x00 0x13 0x04 0x05 0x00 0x23 0x26 0x11 0x00 0x33 0x04 0x80 0x40 0xef 0x00 0x80 0x29 0x23 0x20 0x85 0x00 0x6f 0x00 0x00 0x00 0x13 0x01 0x01 0xf7 0x23 0x22 0x91 0x08 0x23 0x26 0x11 0x08 0x93 0x84 0x05 0x00 0x23 0x24 0x81 0x08 0x93 0x08 0x00 0x05 0x93 0x05 0x01 0x00 0x73 0x00 0x00 0x00 0x13 0x04 0x05 0x00 0x63 0x44 0x05 0x02 0x13 0x85 0x04 0x00 0x93 0x05 0x01 0x00 0xef 0x00 0x40 0x1b 0x83 0x20 0xc1 0x08 0x13 0x05 0x04 0x00 0x03 0x24 0x81 0x08 0x83 0x24 0x41 0x08 0x13 0x01 0x01 0x09 0x67 0x80 0x00 0x00 0x33 0x04 0x80 0x40 0xef 0x00 0xc0 0x23 0x23 0x20 0x85 0x00 0x13 0x04 0xf0 0xff 0x6f 0xf0 0xdf 0xfc 0x13 0x01 0x01 0xf9 0x93 0x05 0x81 0x00 0x23 0x26 0x11 0x06 0xef 0xf0 0x5f 0xf9 0x93 0x07 0xf0 0xff 0x63 0x0e 0xf5 0x00 0x03 0x25 0xc1 0x00 0x83 0x20 0xc1 0x06 0x13 0x55 0xd5 0x00 0x13 0x75 0x15 0x00 0x13 0x01 0x01 0x07 0x67 0x80 0x00 0x00 0x83 0x20 0xc1 0x06 0x13 0x05 0x00 0x00 0x13 0x01 0x01 0x07 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x26 0x11 0x00 0x23 0x24 0x81 0x00 0x93 0x08 0xe0 0x03 0x73 0x00 0x00 0x00 0x13 0x04 0x05 0x00 0x63 0x4c 0x05 0x00 0x83 0x20 0xc1 0x00 0x13 0x05 0x04 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x33 0x04 0x80 0x40 0xef 0x00 0x80 0x1b 0x23 0x20 0x85 0x00 0x13 0x04 0xf0 0xff 0x6f 0xf0 0xdf 0xfd 0x13 0x01 0x01 0xff 0x23 0x26 0x11 0x00 0x23 0x24 0x81 0x00 0x93 0x08 0xf0 0x03 0x73 0x00 0x00 0x00 0x13 0x04 0x05 0x00 0x63 0x4c 0x05 0x00 0x83 0x20 0xc1 0x00 0x13 0x05 0x04 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x33 0x04 0x80 0x40 0xef 0x00 0x40 0x17 0x23 0x20 0x85 0x00 0x13 0x04 0xf0 0xff 0x6f 0xf0 0xdf 0xfd 0x03 0xa7 0x41 0x05 0x13 0x01 0x01 0xff 0x23 0x26 0x11 0x00 0x93 0x07 0x05 0x00 0x63 0x10 0x07 0x02 0x93 0x08 0x60 0x0d 0x13 0x05 0x00 0x00 0x73 0x00 0x00 0x00 0x13 0x06 0xf0 0xff 0x13 0x07 0x05 0x00 0x63 0x0a 0xc5 0x02 0x23 0xaa 0xa1 0x04 0x93 0x08 0x60 0x0d 0x33 0x85 0xe7 0x00 0x73 0x00 0x00 0x00 0x03 0xa7 0x41 0x05 0xb3 0x87 0xe7 0x00 0x63 0x1c 0xf5 0x00 0x83 0x20 0xc1 0x00 0x23 0xaa 0xa1 0x04 0x13 0x05 0x07 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0xef 0x00 0x80 0x10 0x83 0x20 0xc1 0x00 0x93 0x07 0xc0 0x00 0x23 0x20 0xf5 0x00 0x13 0x05 0xf0 0xff 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x13 0x01 0x01 0xff 0x23 0x26 0x11 0x00 0x23 0x24 0x81 0x00 0x93 0x08 0x00 0x04 0x73 0x00 0x00 0x00 0x13 0x04 0x05 0x00 0x63 0x4c 0x05 0x00 0x83 0x20 0xc1 0x00 0x13 0x05 0x04 0x00 0x03 0x24 0x81 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x33 0x04 0x80 0x40 0xef 0x00 0x80 0x0b 0x23 0x20 0x85 0x00 0x13 0x04 0xf0 0xff 0x6f 0xf0 0xdf 0xfd 0x03 0xd7 0x85 0x01 0x83 0xd7 0x45 0x01 0x13 0x01 0x01 0xff 0x83 0xa2 0xc5 0x01 0x83 0xaf 0x05 0x02 0x03 0xaf 0x05 0x03 0x83 0xae 0x05 0x04 0x03 0xae 0x85 0x03 0x03 0xa3 0x85 0x04 0x83 0xa3 0xc5 0x04 0x03 0xa8 0x85 0x05 0x83 0xa8 0xc5 0x05 0x23 0x26 0x81 0x00 0x23 0x24 0x91 0x00 0x03 0xa4 0x05 0x01 0x83 0xa4 0x85 0x00 0x23 0x22 0x21 0x01 0x03 0xa9 0x05 0x00 0x03 0xa6 0x85 0x06 0x13 0x17 0x07 0x01 0xb3 0xe7 0xe7 0x00 0x83 0xa6 0xc5 0x06 0x23 0x10 0x25 0x01 0x23 0x11 0x95 0x00 0x23 0x22 0x85 0x00 0x23 0x24 0xf5 0x00 0x23 0x16 0x55 0x00 0x23 0x17 0xf5 0x01 0x23 0x28 0xe5 0x01 0x23 0x26 0xd5 0x05 0x23 0x24 0xc5 0x05 0x23 0x2c 0x65 0x00 0x23 0x2e 0x75 0x00 0x23 0x24 0x05 0x03 0x23 0x26 0x15 0x03 0x23 0x2c 0xc5 0x02 0x03 0x24 0xc1 0x00 0x23 0x2e 0xd5 0x02 0x83 0x24 0x81 0x00 0x03 0x29 0x41 0x00 0x13 0x01 0x01 0x01 0x67 0x80 0x00 0x00 0x03 0xa5 0x81 0x03 0x67 0x80 0x00 0x00 
0x100b4:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x100b8:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x100bc:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x100c0:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x100c4:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x100c8:	jal	ra, 0x72c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x72c

0x100cc:	lw	a0, 0x30(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x30

0x100d0:	lw	a5, 0x3c(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x3c

0x100d4:	beq	a5, zero, 8	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x100d8:	jalr	ra, a5, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x100dc:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x100e0:	jal	ra, 0x2688	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x2688

0x100e4:	addi	a5, zero, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x100e8:	beq	a5, zero, 0x10	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x100ec:	lui	a0, 0x11	221
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: IMM = 0x11

0x100f0:	addi	a0, a0, -0x30	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xffffffffffffffd0

0x100f4:	jal	zero, 0x20cc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x20cc

0x100f8:	ret		207

0x100fc:	auipc	gp, 3	79
	op_count: 2
		operands[0].type: REG = gp
		operands[1].type: IMM = 0x3

0x10100:	addi	gp, gp, 0x714	2
	op_count: 3
		operands[0].type: REG = gp
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x714

0x10104:	addi	a0, gp, 0x44	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x44

0x10108:	addi	a2, gp, 0x84	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x84

0x1010c:	sub	a2, a2, a0	265
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: REG = a0

0x10110:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10114:	jal	ra, 0x1e4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x1e4

0x10118:	auipc	a0, 2	79
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: IMM = 0x2

0x1011c:	addi	a0, a0, 0xa8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xa8

0x10120:	beq	a0, zero, 0x10	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x10124:	auipc	a0, 1	79
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: IMM = 0x1

0x10128:	addi	a0, a0, -0x154	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xfffffffffffffeac

0x1012c:	jal	ra, 0x2094	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x2094

0x10130:	jal	ra, 0x12c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x12c

0x10134:	lw	a0, 0(sp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10138:	addi	a1, sp, 4	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x4

0x1013c:	addi	a2, zero, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10140:	jal	ra, 0x90	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x90

0x10144:	jal	zero, -0x90	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff70

0x10148:	addi	a5, gp, 0x30	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x30

0x1014c:	addi	a4, gp, 0x30	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x30

0x10150:	beq	a4, a5, 0x14	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x14
	This instruction belongs to groups: jump 

0x10154:	addi	a5, zero, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10158:	beq	a5, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x1015c:	addi	a0, gp, 0x30	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x30

0x10160:	jalr	zero, a5, 0	207
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x10164:	ret		207

0x10168:	addi	a5, gp, 0x30	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x30

0x1016c:	addi	a1, gp, 0x30	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x30

0x10170:	sub	a1, a1, a5	265
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: REG = a5

0x10174:	srai	a5, a1, 2	257
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x2

0x10178:	srli	a1, a1, 0x1f	262
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x1f

0x1017c:	add	a1, a1, a5	1
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: REG = a5

0x10180:	srai	a1, a1, 1	257
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x1

0x10184:	beq	a1, zero, 0x14	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x14
	This instruction belongs to groups: jump 

0x10188:	addi	a5, zero, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x1018c:	beq	a5, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x10190:	addi	a0, gp, 0x30	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x30

0x10194:	jalr	zero, a5, 0	207
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x10198:	ret		207

0x1019c:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x101a0:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x101a4:	lbu	a5, 0x58(gp)	209
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x58

0x101a8:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x101ac:	bne	a5, zero, 0x10	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x101b0:	jal	ra, -0x68	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffff98

0x101b4:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x101b8:	sb	a5, 0x58(gp)	236
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x58

0x101bc:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x101c0:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x101c4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x101c8:	ret		207

0x101cc:	jal	zero, -0x64	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff9c

0x101d0:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x101d4:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x101d8:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x101dc:	addi	s0, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x101e0:	lui	a5, 0x6c6c6	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x6c6c6

0x101e4:	addi	a5, a5, 0x548	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x548

0x101e8:	sw	a5, -0x20(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffe0

0x101ec:	lui	a5, 0x6f572	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x6f572

0x101f0:	addi	a5, a5, 0x6f	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x6f

0x101f4:	sw	a5, -0x1c(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffe4

0x101f8:	lui	a5, 0x647	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x647

0x101fc:	addi	a5, a5, -0x38e	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffc72

0x10200:	sw	a5, -0x18(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffe8

0x10204:	sw	zero, -0x14(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffec

0x10208:	jal	zero, 0x28	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x28

0x1020c:	lw	a5, -0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffec

0x10210:	addi	a5, a5, -0x10	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff0

0x10214:	add	a5, a5, s0	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = s0

0x10218:	lbu	a5, -0x10(a5)	209
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0xfffffffffffffff0

0x1021c:	addi	a0, a5, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x10220:	jal	ra, 0x1bc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x1bc

0x10224:	lw	a5, -0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffec

0x10228:	addi	a5, a5, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x1022c:	sw	a5, -0x14(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffec

0x10230:	lw	a5, -0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xffffffffffffffec

0x10234:	addi	a5, a5, -0x10	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff0

0x10238:	add	a5, a5, s0	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = s0

0x1023c:	lbu	a5, -0x10(a5)	209
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0xfffffffffffffff0

0x10240:	bne	a5, zero, -0x34	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffcc
	This instruction belongs to groups: jump 

0x10244:	addi	a5, zero, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10248:	addi	a0, a5, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x1024c:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10250:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10254:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10258:	ret		207

0x1025c:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x10260:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10264:	lui	a5, 0x13	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x13

0x10268:	lui	s0, 0x13	221
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: IMM = 0x13

0x1026c:	sw	s2, 0(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10270:	addi	a5, a5, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x10274:	addi	a4, s0, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10278:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1027c:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10280:	sub	s2, a5, a4	265
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x10284:	beq	a5, a4, 0x24	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x24
	This instruction belongs to groups: jump 

0x10288:	srai	s2, s2, 2	257
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x2

0x1028c:	addi	s0, s0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10290:	addi	s1, zero, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10294:	lw	a5, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10298:	addi	s1, s1, 1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x1

0x1029c:	addi	s0, s0, 4	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x4

0x102a0:	jalr	ra, a5, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x102a4:	bltu	s1, s2, -0x10	84
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x102a8:	lui	s0, 0x13	221
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: IMM = 0x13

0x102ac:	lui	a5, 0x13	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x13

0x102b0:	addi	a5, a5, 8	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x8

0x102b4:	addi	a4, s0, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x102b8:	sub	s2, a5, a4	265
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x102bc:	srai	s2, s2, 2	257
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x2

0x102c0:	beq	a5, a4, 0x20	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x102c4:	addi	s0, s0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x102c8:	addi	s1, zero, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x102cc:	lw	a5, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x102d0:	addi	s1, s1, 1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x1

0x102d4:	addi	s0, s0, 4	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x4

0x102d8:	jalr	ra, a5, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x102dc:	bltu	s1, s2, -0x10	84
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x102e0:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x102e4:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x102e8:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x102ec:	lw	s2, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x102f0:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x102f4:	ret		207

0x102f8:	addi	t1, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = t1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x102fc:	addi	a4, a0, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10300:	bgeu	t1, a2, 0x3c	82
	op_count: 3
		operands[0].type: REG = t1
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x3c
	This instruction belongs to groups: jump 

0x10304:	andi	a5, a4, 0xf	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xf

0x10308:	bne	a5, zero, 0xa0	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xa0
	This instruction belongs to groups: jump 

0x1030c:	bne	a1, zero, 0x84	85
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x84
	This instruction belongs to groups: jump 

0x10310:	andi	a3, a2, -0x10	78
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xfffffffffffffff0

0x10314:	andi	a2, a2, 0xf	78
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xf

0x10318:	add	a3, a3, a4	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: REG = a4

0x1031c:	sw	a1, 0(a4)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x10320:	sw	a1, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x10324:	sw	a1, 8(a4)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x10328:	sw	a1, 0xc(a4)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x1032c:	addi	a4, a4, 0x10	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x10

0x10330:	bltu	a4, a3, -0x14	84
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xffffffffffffffec
	This instruction belongs to groups: jump 

0x10334:	bne	a2, zero, 8	85
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x10338:	ret		207

0x1033c:	sub	a3, t1, a2	265
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = t1
		operands[2].type: REG = a2

0x10340:	slli	a3, a3, 2	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x2

0x10344:	auipc	t0, 0	79
	op_count: 2
		operands[0].type: REG = t0
		operands[1].type: IMM = 0x0

0x10348:	add	a3, a3, t0	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: REG = t0

0x1034c:	jalr	zero, a3, 0xc	207
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xc

0x10350:	sb	a1, 0xe(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xe

0x10354:	sb	a1, 0xd(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xd

0x10358:	sb	a1, 0xc(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x1035c:	sb	a1, 0xb(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xb

0x10360:	sb	a1, 0xa(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xa

0x10364:	sb	a1, 9(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x9

0x10368:	sb	a1, 8(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x1036c:	sb	a1, 7(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x7

0x10370:	sb	a1, 6(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x6

0x10374:	sb	a1, 5(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x5

0x10378:	sb	a1, 4(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x1037c:	sb	a1, 3(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x3

0x10380:	sb	a1, 2(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x2

0x10384:	sb	a1, 1(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x1

0x10388:	sb	a1, 0(a4)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x1038c:	ret		207

0x10390:	andi	a1, a1, 0xff	78
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xff

0x10394:	slli	a3, a1, 8	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x8

0x10398:	or	a1, a1, a3	230
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: REG = a3

0x1039c:	slli	a3, a1, 0x10	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x10

0x103a0:	or	a1, a1, a3	230
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: REG = a3

0x103a4:	jal	zero, -0x94	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff6c

0x103a8:	slli	a3, a5, 2	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x2

0x103ac:	auipc	t0, 0	79
	op_count: 2
		operands[0].type: REG = t0
		operands[1].type: IMM = 0x0

0x103b0:	add	a3, a3, t0	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: REG = t0

0x103b4:	addi	t0, ra, 0	2
	op_count: 3
		operands[0].type: REG = t0
		operands[1].type: REG = ra
		operands[2].type: IMM = 0x0

0x103b8:	jalr	ra, a3, -0x60	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xffffffffffffffa0

0x103bc:	addi	ra, t0, 0	2
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = t0
		operands[2].type: IMM = 0x0

0x103c0:	addi	a5, a5, -0x10	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff0

0x103c4:	sub	a4, a4, a5	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x103c8:	add	a2, a2, a5	1
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: REG = a5

0x103cc:	bgeu	t1, a2, -0x90	82
	op_count: 3
		operands[0].type: REG = t1
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xffffffffffffff70
	This instruction belongs to groups: jump 

0x103d0:	jal	zero, -0xc4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff3c

0x103d4:	lw	a2, 8(a0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x8

0x103d8:	jal	zero, 0x18	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x18

0x103dc:	lw	a5, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x103e0:	addi	a1, a0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x103e4:	lw	a2, 8(a5)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x8

0x103e8:	addi	a0, a5, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x103ec:	jal	zero, 4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x4

0x103f0:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x103f4:	sw	s2, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x103f8:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x103fc:	addi	s2, a0, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10400:	beq	a0, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x10404:	lw	a5, 0x38(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x38

0x10408:	beq	a5, zero, 0x4c	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4c
	This instruction belongs to groups: jump 

0x1040c:	lw	a5, 8(a2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x8

0x10410:	addi	a5, a5, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffffff

0x10414:	sw	a5, 8(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x8

0x10418:	bge	a5, zero, 0x18	81
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x1041c:	lw	a4, 0x18(a2)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x18

0x10420:	blt	a5, a4, 0x4c	83
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x4c
	This instruction belongs to groups: jump 

0x10424:	andi	a5, a1, 0xff	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xff

0x10428:	addi	a4, zero, 0xa	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xa

0x1042c:	beq	a5, a4, 0x40	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x40
	This instruction belongs to groups: jump 

0x10430:	lw	a5, 0(a2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2

0x10434:	andi	a0, a1, 0xff	78
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xff

0x10438:	addi	a4, a5, 1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x1043c:	sw	a4, 0(a2)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a2

0x10440:	sb	a1, 0(a5)	236
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a5

0x10444:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10448:	lw	s2, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x1044c:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10450:	ret		207

0x10454:	sw	a2, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10458:	sw	a1, 8(sp)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x1045c:	jal	ra, 0xb34	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xb34

0x10460:	lw	a2, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10464:	lw	a1, 8(sp)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10468:	jal	zero, -0x5c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffa4

0x1046c:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10470:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x10474:	lw	s2, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10478:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x1047c:	jal	zero, 0xb0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xb0

0x10480:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x10484:	sw	s2, 0(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10488:	lw	s2, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x1048c:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10490:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10494:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10498:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x1049c:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x104a0:	beq	s2, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x104a4:	lw	a5, 0x38(s2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x38

0x104a8:	beq	a5, zero, 0x54	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x54
	This instruction belongs to groups: jump 

0x104ac:	lw	a5, 8(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x104b0:	addi	a5, a5, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffffff

0x104b4:	sw	a5, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x104b8:	bge	a5, zero, 0x18	81
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x104bc:	lw	a4, 0x18(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x18

0x104c0:	blt	a5, a4, 0x48	83
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x48
	This instruction belongs to groups: jump 

0x104c4:	andi	a5, s1, 0xff	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xff

0x104c8:	addi	a4, zero, 0xa	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xa

0x104cc:	beq	a5, a4, 0x3c	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x3c
	This instruction belongs to groups: jump 

0x104d0:	lw	a5, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x104d4:	andi	a0, s1, 0xff	78
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xff

0x104d8:	addi	a4, a5, 1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x104dc:	sw	a4, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x104e0:	sb	s1, 0(a5)	236
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = a5

0x104e4:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x104e8:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x104ec:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x104f0:	lw	s2, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x104f4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x104f8:	ret		207

0x104fc:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x10500:	jal	ra, 0xa90	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xa90

0x10504:	jal	zero, -0x58	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffa8

0x10508:	addi	a2, s0, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1050c:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10510:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10514:	addi	a1, s1, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x10518:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x1051c:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10520:	lw	s2, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10524:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x10528:	jal	zero, 4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x4

0x1052c:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x10530:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10534:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10538:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x1053c:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10540:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10544:	addi	s2, a0, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10548:	addi	s1, a1, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x1054c:	addi	s0, a2, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x0

0x10550:	beq	a0, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x10554:	lw	a5, 0x38(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x38

0x10558:	beq	a5, zero, 0x140	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x140
	This instruction belongs to groups: jump 

0x1055c:	lw	a5, 0x18(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x18

0x10560:	lh	a4, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10564:	sw	a5, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10568:	andi	a5, a4, 8	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x8

0x1056c:	beq	a5, zero, 0x84	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x84
	This instruction belongs to groups: jump 

0x10570:	lw	a5, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x10574:	beq	a5, zero, 0x7c	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x7c
	This instruction belongs to groups: jump 

0x10578:	slli	a3, a4, 0x12	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x12

0x1057c:	andi	s3, s1, 0xff	78
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xff

0x10580:	andi	s1, s1, 0xff	78
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xff

0x10584:	bge	a3, zero, 0x94	81
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x94
	This instruction belongs to groups: jump 

0x10588:	lw	a4, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x1058c:	lw	a3, 0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x10590:	sub	a5, a4, a5	265
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x10594:	bge	a5, a3, 0xb4	81
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xb4
	This instruction belongs to groups: jump 

0x10598:	lw	a3, 8(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x1059c:	addi	a2, a4, 1	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x105a0:	sw	a2, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x105a4:	addi	a3, a3, -1	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xffffffffffffffff

0x105a8:	sw	a3, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x105ac:	sb	s3, 0(a4)	236
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x105b0:	lw	a4, 0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x105b4:	addi	a5, a5, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x105b8:	beq	a4, a5, 0xc8	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc8
	This instruction belongs to groups: jump 

0x105bc:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x105c0:	andi	a5, a5, 1	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x105c4:	beq	a5, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x105c8:	addi	a5, zero, 0xa	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xa

0x105cc:	beq	s1, a5, 0xb4	80
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xb4
	This instruction belongs to groups: jump 

0x105d0:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x105d4:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x105d8:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x105dc:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x105e0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x105e4:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x105e8:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x105ec:	ret		207

0x105f0:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x105f4:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x105f8:	jal	ra, 0xbc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xbc

0x105fc:	bne	a0, zero, 0x94	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x94
	This instruction belongs to groups: jump 

0x10600:	lh	a4, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10604:	andi	s3, s1, 0xff	78
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xff

0x10608:	lw	a5, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x1060c:	slli	a3, a4, 0x12	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x12

0x10610:	andi	s1, s1, 0xff	78
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xff

0x10614:	blt	a3, zero, -0x8c	83
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff74
	This instruction belongs to groups: jump 

0x10618:	lw	a3, 0x64(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x64

0x1061c:	lui	a2, 2	221
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: IMM = 0x2

0x10620:	or	a4, a4, a2	230
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a2

0x10624:	lui	a2, 0xffffe	221
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: IMM = 0xffffe

0x10628:	addi	a2, a2, -1	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xffffffffffffffff

0x1062c:	and	a3, a3, a2	77
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: REG = a2

0x10630:	sh	a4, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10634:	lw	a4, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10638:	sw	a3, 0x64(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x64

0x1063c:	lw	a3, 0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x10640:	sub	a5, a4, a5	265
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x10644:	blt	a5, a3, -0xac	83
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xffffffffffffff54
	This instruction belongs to groups: jump 

0x10648:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1064c:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x10650:	jal	ra, 0x510	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x510

0x10654:	bne	a0, zero, 0x3c	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3c
	This instruction belongs to groups: jump 

0x10658:	lw	a4, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x1065c:	lw	a3, 8(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10660:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x10664:	addi	a2, a4, 1	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x10668:	addi	a3, a3, -1	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xffffffffffffffff

0x1066c:	sw	a2, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10670:	sw	a3, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10674:	sb	s3, 0(a4)	236
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x10678:	lw	a4, 0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x1067c:	bne	a4, a5, -0xc0	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffff40
	This instruction belongs to groups: jump 

0x10680:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10684:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x10688:	jal	ra, 0x4d8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x4d8

0x1068c:	beq	a0, zero, -0xbc	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff44
	This instruction belongs to groups: jump 

0x10690:	addi	s1, zero, -1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x10694:	jal	zero, -0xc4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff3c

0x10698:	jal	ra, 0x8f8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x8f8

0x1069c:	jal	zero, -0x140	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffec0

0x106a0:	addi	a5, a0, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x106a4:	lw	a0, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x106a8:	addi	a2, a1, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x106ac:	addi	a1, a5, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x106b0:	jal	zero, -0x184	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe7c

0x106b4:	lw	a5, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x106b8:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x106bc:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x106c0:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x106c4:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x106c8:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x106cc:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x106d0:	beq	a5, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x106d4:	lw	a4, 0x38(a5)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x38

0x106d8:	beq	a4, zero, 0x80	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x80
	This instruction belongs to groups: jump 

0x106dc:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x106e0:	andi	a4, a5, 8	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x8

0x106e4:	beq	a4, zero, 0x88	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x88
	This instruction belongs to groups: jump 

0x106e8:	lw	a4, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x106ec:	beq	a4, zero, 0xa0	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xa0
	This instruction belongs to groups: jump 

0x106f0:	andi	a3, a5, 1	78
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x106f4:	beq	a3, zero, 0x30	80
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x30
	This instruction belongs to groups: jump 

0x106f8:	lw	a3, 0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x106fc:	sw	zero, 8(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10700:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10704:	sub	a3, zero, a3	265
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: REG = a3

0x10708:	sw	a3, 0x18(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x18

0x1070c:	beq	a4, zero, 0x34	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x34
	This instruction belongs to groups: jump 

0x10710:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10714:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10718:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x1071c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x10720:	ret		207

0x10724:	andi	a3, a5, 2	78
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x2

0x10728:	addi	a2, zero, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x1072c:	bne	a3, zero, 8	85
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x10730:	lw	a2, 0x14(s0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x10734:	sw	a2, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10738:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x1073c:	bne	a4, zero, -0x2c	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffd4
	This instruction belongs to groups: jump 

0x10740:	andi	a4, a5, 0x80	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x80

0x10744:	beq	a4, zero, -0x34	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffcc
	This instruction belongs to groups: jump 

0x10748:	ori	a5, a5, 0x40	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x40

0x1074c:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10750:	addi	a0, zero, -1	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x10754:	jal	zero, -0x44	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffbc

0x10758:	addi	a0, a5, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x1075c:	jal	ra, 0x834	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x834

0x10760:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10764:	andi	a4, a5, 8	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x8

0x10768:	bne	a4, zero, -0x80	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff80
	This instruction belongs to groups: jump 

0x1076c:	andi	a4, a5, 0x10	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x10

0x10770:	beq	a4, zero, 0x74	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x74
	This instruction belongs to groups: jump 

0x10774:	andi	a4, a5, 4	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x4

0x10778:	bne	a4, zero, 0x38	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x38
	This instruction belongs to groups: jump 

0x1077c:	lw	a4, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x10780:	ori	a5, a5, 8	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x8

0x10784:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10788:	bne	a4, zero, -0x98	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff68
	This instruction belongs to groups: jump 

0x1078c:	andi	a3, a5, 0x280	78
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x280

0x10790:	addi	a2, zero, 0x200	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x200

0x10794:	beq	a3, a2, -0xa4	80
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xffffffffffffff5c
	This instruction belongs to groups: jump 

0x10798:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1079c:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x107a0:	jal	ra, 0xe0c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xe0c

0x107a4:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x107a8:	lw	a4, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x107ac:	jal	zero, -0xbc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff44

0x107b0:	lw	a1, 0x30(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x107b4:	beq	a1, zero, 0x1c	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1c
	This instruction belongs to groups: jump 

0x107b8:	addi	a4, s0, 0x40	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x40

0x107bc:	beq	a1, a4, 0x10	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x107c0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x107c4:	jal	ra, 0x998	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x998

0x107c8:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x107cc:	sw	zero, 0x30(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x107d0:	lw	a4, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x107d4:	andi	a5, a5, -0x25	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffffdb

0x107d8:	sw	zero, 4(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x107dc:	sw	a4, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x107e0:	jal	zero, -0x60	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffa0

0x107e4:	addi	a4, zero, 9	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x9

0x107e8:	sw	a4, 0(s1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s1

0x107ec:	ori	a5, a5, 0x40	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x40

0x107f0:	jal	zero, -0xa4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff5c

0x107f4:	addi	sp, sp, -0x30	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffd0

0x107f8:	sw	s4, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x107fc:	lw	s4, 0x30(gp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x30

0x10800:	sw	s2, 0x20(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x20

0x10804:	sw	ra, 0x2c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x2c

0x10808:	lw	s2, 0x148(s4)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = s4
			operands[1].mem.disp: 0x148

0x1080c:	sw	s0, 0x28(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x28

0x10810:	sw	s1, 0x24(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x24

0x10814:	sw	s3, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10818:	sw	s5, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x1081c:	sw	s6, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10820:	sw	s7, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10824:	sw	s8, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s8
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10828:	beq	s2, zero, 0x40	80
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x40
	This instruction belongs to groups: jump 

0x1082c:	addi	s6, a0, 0	2
	op_count: 3
		operands[0].type: REG = s6
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10830:	addi	s7, a1, 0	2
	op_count: 3
		operands[0].type: REG = s7
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x10834:	addi	s5, zero, 1	2
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x10838:	addi	s3, zero, -1	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x1083c:	lw	s1, 4(s2)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x10840:	addi	s0, s1, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xffffffffffffffff

0x10844:	blt	s0, zero, 0x24	83
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x24
	This instruction belongs to groups: jump 

0x10848:	slli	s1, s1, 2	249
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x2

0x1084c:	add	s1, s2, s1	1
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s2
		operands[2].type: REG = s1

0x10850:	beq	s7, zero, 0x48	80
	op_count: 3
		operands[0].type: REG = s7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x48
	This instruction belongs to groups: jump 

0x10854:	lw	a5, 0x104(s1)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x104

0x10858:	beq	a5, s7, 0x40	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s7
		operands[2].type: IMM = 0x40
	This instruction belongs to groups: jump 

0x1085c:	addi	s0, s0, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xffffffffffffffff

0x10860:	addi	s1, s1, -4	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xfffffffffffffffc

0x10864:	bne	s0, s3, -0x14	85
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0xffffffffffffffec
	This instruction belongs to groups: jump 

0x10868:	lw	ra, 0x2c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x2c

0x1086c:	lw	s0, 0x28(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x28

0x10870:	lw	s1, 0x24(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x24

0x10874:	lw	s2, 0x20(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x20

0x10878:	lw	s3, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x1087c:	lw	s4, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10880:	lw	s5, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10884:	lw	s6, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10888:	lw	s7, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1088c:	lw	s8, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s8
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10890:	addi	sp, sp, 0x30	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x30

0x10894:	ret		207

0x10898:	lw	a5, 4(s2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x1089c:	lw	a3, 4(s1)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4

0x108a0:	addi	a5, a5, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffffff

0x108a4:	beq	a5, s0, 0x5c	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x5c
	This instruction belongs to groups: jump 

0x108a8:	sw	zero, 4(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4

0x108ac:	beq	a3, zero, -0x50	80
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffb0
	This instruction belongs to groups: jump 

0x108b0:	lw	a5, 0x188(s2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x188

0x108b4:	sll	a4, s5, s0	248
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s5
		operands[2].type: REG = s0

0x108b8:	lw	s8, 4(s2)	222
	op_count: 2
		operands[0].type: REG = s8
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x108bc:	and	a5, a4, a5	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x108c0:	bne	a5, zero, 0x24	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x24
	This instruction belongs to groups: jump 

0x108c4:	jalr	ra, a3, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x108c8:	lw	a4, 4(s2)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x108cc:	lw	a5, 0x148(s4)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s4
			operands[1].mem.disp: 0x148

0x108d0:	bne	a4, s8, 8	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s8
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x108d4:	beq	a5, s2, -0x78	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xffffffffffffff88
	This instruction belongs to groups: jump 

0x108d8:	beq	a5, zero, -0x70	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff90
	This instruction belongs to groups: jump 

0x108dc:	addi	s2, a5, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x108e0:	jal	zero, -0xa4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff5c

0x108e4:	lw	a5, 0x18c(s2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x18c

0x108e8:	lw	a1, 0x84(s1)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x84

0x108ec:	and	a4, a4, a5	77
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x108f0:	bne	a4, zero, 0x18	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x108f4:	addi	a0, s6, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s6
		operands[2].type: IMM = 0x0

0x108f8:	jalr	ra, a3, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x108fc:	jal	zero, -0x34	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffcc

0x10900:	sw	s0, 4(s2)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x10904:	jal	zero, -0x58	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffa8

0x10908:	addi	a0, a1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x1090c:	jalr	ra, a3, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x10910:	jal	zero, -0x48	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffb8

0x10914:	lh	a5, 0xc(a1)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xc

0x10918:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x1091c:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10920:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10924:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10928:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x1092c:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10930:	andi	a4, a5, 8	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x8

0x10934:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x10938:	addi	s3, a0, 0	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x1093c:	bne	a4, zero, 0x124	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x124
	This instruction belongs to groups: jump 

0x10940:	lui	a4, 1	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0x1

0x10944:	addi	a4, a4, -0x800	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xfffffffffffff800

0x10948:	lw	a3, 4(a1)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x4

0x1094c:	or	a4, a5, a4	230
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x10950:	sh	a4, 0xc(a1)	247
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xc

0x10954:	bge	zero, a3, 0x190	81
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x190
	This instruction belongs to groups: jump 

0x10958:	lw	a6, 0x28(s0)	222
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x28

0x1095c:	beq	a6, zero, 0xe4	80
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xe4
	This instruction belongs to groups: jump 

0x10960:	srli	a5, a5, 0xc	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc

0x10964:	lw	s1, 0(s3)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x10968:	andi	a5, a5, 1	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x1096c:	sw	zero, 0(s3)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x10970:	lw	a1, 0x1c(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x1c

0x10974:	bne	a5, zero, 0x180	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x180
	This instruction belongs to groups: jump 

0x10978:	addi	a2, zero, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x1097c:	addi	a3, zero, 1	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x10980:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x10984:	jalr	ra, a6, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a6
		operands[2].type: IMM = 0x0

0x10988:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x1098c:	addi	a2, a0, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10990:	beq	a0, a5, 0x1a0	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1a0
	This instruction belongs to groups: jump 

0x10994:	lh	a4, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10998:	lw	a6, 0x28(s0)	222
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x28

0x1099c:	lw	a1, 0x1c(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x1c

0x109a0:	andi	a4, a4, 4	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x4

0x109a4:	beq	a4, zero, 0x1c	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1c
	This instruction belongs to groups: jump 

0x109a8:	lw	a4, 4(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x109ac:	lw	a5, 0x30(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x109b0:	sub	a2, a2, a4	265
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: REG = a4

0x109b4:	beq	a5, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x109b8:	lw	a5, 0x3c(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x3c

0x109bc:	sub	a2, a2, a5	265
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: REG = a5

0x109c0:	addi	a3, zero, 0	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x109c4:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x109c8:	jalr	ra, a6, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a6
		operands[2].type: IMM = 0x0

0x109cc:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x109d0:	bne	a0, a5, 0x12c	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x12c
	This instruction belongs to groups: jump 

0x109d4:	lw	a3, 0(s3)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x109d8:	addi	a5, zero, 0x1d	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1d

0x109dc:	bltu	a5, a3, 0xdc	84
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xdc
	This instruction belongs to groups: jump 

0x109e0:	lui	a4, 0xdfc00	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0xdfc00

0x109e4:	addi	a4, a4, -2	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xfffffffffffffffe

0x109e8:	sra	a4, a4, a3	256
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a3

0x109ec:	andi	a4, a4, 1	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x109f0:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x109f4:	bne	a4, zero, 0xc8	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc8
	This instruction belongs to groups: jump 

0x109f8:	lw	a2, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x109fc:	lui	a4, 0xfffff	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0xfffff

0x10a00:	addi	a4, a4, 0x7ff	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x7ff

0x10a04:	and	a4, a5, a4	77
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x10a08:	srli	a5, a5, 0xc	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc

0x10a0c:	sh	a4, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10a10:	sw	zero, 4(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x10a14:	sw	a2, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10a18:	andi	a5, a5, 1	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x10a1c:	bne	a5, zero, 0x138	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x138
	This instruction belongs to groups: jump 

0x10a20:	lw	a1, 0x30(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x10a24:	sw	s1, 0(s3)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x10a28:	beq	a1, zero, 0x18	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x10a2c:	addi	a5, s0, 0x40	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x40

0x10a30:	beq	a1, a5, 0xc	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x10a34:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x10a38:	jal	ra, 0x724	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x724

0x10a3c:	sw	zero, 0x30(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x10a40:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10a44:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10a48:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10a4c:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10a50:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10a54:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10a58:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10a5c:	ret		207

0x10a60:	lw	s2, 0x10(a1)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x10

0x10a64:	beq	s2, zero, -0x24	80
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffdc
	This instruction belongs to groups: jump 

0x10a68:	lw	s1, 0(a1)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1

0x10a6c:	andi	a5, a5, 3	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x3

0x10a70:	sw	s2, 0(a1)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = a1

0x10a74:	sub	s1, s1, s2	265
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: REG = s2

0x10a78:	addi	a4, zero, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10a7c:	bne	a5, zero, 8	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x10a80:	lw	a4, 0x14(a1)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x14

0x10a84:	sw	a4, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10a88:	blt	zero, s1, 0x10	83
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x10a8c:	jal	zero, -0x4c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffb4

0x10a90:	add	s2, s2, a0	1
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: REG = a0

0x10a94:	bge	zero, s1, -0x54	81
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xffffffffffffffac
	This instruction belongs to groups: jump 

0x10a98:	lw	a5, 0x24(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x24

0x10a9c:	lw	a1, 0x1c(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x1c

0x10aa0:	addi	a3, s1, 0	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x10aa4:	addi	a2, s2, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x10aa8:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x10aac:	jalr	ra, a5, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x10ab0:	sub	s1, s1, a0	265
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: REG = a0

0x10ab4:	blt	zero, a0, -0x24	83
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xffffffffffffffdc
	This instruction belongs to groups: jump 

0x10ab8:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10abc:	ori	a5, a5, 0x40	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x40

0x10ac0:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10ac4:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10ac8:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10acc:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10ad0:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10ad4:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10ad8:	addi	a0, zero, -1	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x10adc:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10ae0:	ret		207

0x10ae4:	lw	a3, 0x3c(a1)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x3c

0x10ae8:	blt	zero, a3, -0x190	83
	op_count: 3
		operands[0].type: REG = zero
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xfffffffffffffe70
	This instruction belongs to groups: jump 

0x10aec:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10af0:	jal	zero, -0xac	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff54

0x10af4:	lw	a2, 0x50(s0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x50

0x10af8:	jal	zero, -0x158	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffea8

0x10afc:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10b00:	lw	a3, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x10b04:	lui	a4, 0xfffff	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0xfffff

0x10b08:	addi	a4, a4, 0x7ff	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x7ff

0x10b0c:	and	a4, a5, a4	77
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x10b10:	srli	a5, a5, 0xc	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc

0x10b14:	sh	a4, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10b18:	sw	zero, 4(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x10b1c:	sw	a3, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10b20:	andi	a5, a5, 1	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x10b24:	beq	a5, zero, -0x104	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffefc
	This instruction belongs to groups: jump 

0x10b28:	sw	a0, 0x50(s0)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x50

0x10b2c:	jal	zero, -0x10c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffef4

0x10b30:	lw	a5, 0(s3)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x10b34:	beq	a5, zero, -0x1a0	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffe60
	This instruction belongs to groups: jump 

0x10b38:	addi	a4, zero, 0x1d	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1d

0x10b3c:	beq	a5, a4, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x10b40:	addi	a4, zero, 0x16	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x16

0x10b44:	bne	a5, a4, -0x8c	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xffffffffffffff74
	This instruction belongs to groups: jump 

0x10b48:	sw	s1, 0(s3)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x10b4c:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10b50:	jal	zero, -0x10c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffef4

0x10b54:	bne	a3, zero, -0x134	85
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffecc
	This instruction belongs to groups: jump 

0x10b58:	sw	a0, 0x50(s0)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x50

0x10b5c:	jal	zero, -0x13c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffec4

0x10b60:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x10b64:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10b68:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10b6c:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10b70:	beq	a0, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x10b74:	lw	a5, 0x38(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x38

0x10b78:	beq	a5, zero, 0x20	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x10b7c:	lh	a5, 0xc(a1)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xc

0x10b80:	bne	a5, zero, 0x2c	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x2c
	This instruction belongs to groups: jump 

0x10b84:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10b88:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10b8c:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10b90:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10b94:	ret		207

0x10b98:	sw	a1, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10b9c:	jal	ra, 0x3f4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x3f4

0x10ba0:	lw	a1, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10ba4:	lh	a5, 0xc(a1)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xc

0x10ba8:	beq	a5, zero, -0x24	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffdc
	This instruction belongs to groups: jump 

0x10bac:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10bb0:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10bb4:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10bb8:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10bbc:	jal	zero, -0x2a8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffd58

0x10bc0:	beq	a0, zero, 0x6c	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x6c
	This instruction belongs to groups: jump 

0x10bc4:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x10bc8:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10bcc:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10bd0:	lw	a0, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x10bd4:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10bd8:	beq	a0, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x10bdc:	lw	a5, 0x38(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x38

0x10be0:	beq	a5, zero, 0x34	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x34
	This instruction belongs to groups: jump 

0x10be4:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10be8:	bne	a5, zero, 0x18	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x10bec:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10bf0:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10bf4:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10bf8:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10bfc:	ret		207

0x10c00:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10c04:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10c08:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10c0c:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10c10:	jal	zero, -0x2fc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffd04

0x10c14:	sw	a0, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10c18:	jal	ra, 0x378	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x378

0x10c1c:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10c20:	lw	a0, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10c24:	beq	a5, zero, -0x38	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffc8
	This instruction belongs to groups: jump 

0x10c28:	jal	zero, -0x28	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffd8

0x10c2c:	lw	a0, 0x30(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x30

0x10c30:	lui	a1, 0x11	221
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: IMM = 0x11

0x10c34:	addi	a1, a1, -0x4a0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xfffffffffffffb60

0x10c38:	jal	zero, 0x8c0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x8c0

0x10c3c:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10c40:	ret		207

0x10c44:	lui	a1, 0x12	221
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: IMM = 0x12

0x10c48:	addi	a1, a1, 0x230	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x230

0x10c4c:	jal	zero, 0x8ac	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x8ac

0x10c50:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10c54:	ret		207

0x10c58:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x10c5c:	lui	a5, 0x11	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x11

0x10c60:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10c64:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10c68:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10c6c:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10c70:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10c74:	sw	s4, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10c78:	sw	s5, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10c7c:	sw	s6, 0(sp)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10c80:	lw	s0, 4(a0)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x4

0x10c84:	addi	a5, a5, -0x3bc	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffc44

0x10c88:	sw	a5, 0x3c(a0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x3c

0x10c8c:	addi	a4, a0, 0x2ec	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x2ec

0x10c90:	addi	a5, zero, 3	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3

0x10c94:	sw	a4, 0x2e8(a0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x2e8

0x10c98:	sw	a5, 0x2e4(a0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x2e4

0x10c9c:	sw	zero, 0x2e0(a0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x2e0

0x10ca0:	addi	a5, zero, 4	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4

0x10ca4:	addi	s2, a0, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10ca8:	sw	a5, 0xc(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10cac:	addi	a2, zero, 8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8

0x10cb0:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10cb4:	sw	zero, 0(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10cb8:	sw	zero, 4(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x10cbc:	sw	zero, 8(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10cc0:	sw	zero, 0x64(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x64

0x10cc4:	sw	zero, 0x10(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x10cc8:	sw	zero, 0x14(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x10ccc:	sw	zero, 0x18(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x18

0x10cd0:	addi	a0, s0, 0x5c	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x5c

0x10cd4:	jal	ra, -0x9dc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffff624

0x10cd8:	lui	s6, 0x12	221
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: IMM = 0x12

0x10cdc:	lw	s1, 8(s2)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x10ce0:	lui	s5, 0x12	221
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: IMM = 0x12

0x10ce4:	lui	s4, 0x12	221
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: IMM = 0x12

0x10ce8:	lui	s3, 0x12	221
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: IMM = 0x12

0x10cec:	addi	s6, s6, -0x14	2
	op_count: 3
		operands[0].type: REG = s6
		operands[1].type: REG = s6
		operands[2].type: IMM = 0xffffffffffffffec

0x10cf0:	addi	s5, s5, 0x50	2
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s5
		operands[2].type: IMM = 0x50

0x10cf4:	addi	s4, s4, 0xd8	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = s4
		operands[2].type: IMM = 0xd8

0x10cf8:	addi	s3, s3, 0x150	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x150

0x10cfc:	lui	a5, 0x10	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x10

0x10d00:	sw	s6, 0x20(s0)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x20

0x10d04:	sw	s5, 0x24(s0)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x24

0x10d08:	sw	s4, 0x28(s0)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x28

0x10d0c:	sw	s3, 0x2c(s0)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x2c

0x10d10:	sw	s0, 0x1c(s0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x1c

0x10d14:	addi	a5, a5, 9	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x9

0x10d18:	sw	a5, 0xc(s1)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0xc

0x10d1c:	addi	a2, zero, 8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8

0x10d20:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10d24:	sw	zero, 0(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1

0x10d28:	sw	zero, 4(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4

0x10d2c:	sw	zero, 8(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x8

0x10d30:	sw	zero, 0x64(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x64

0x10d34:	sw	zero, 0x10(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x10

0x10d38:	sw	zero, 0x14(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x14

0x10d3c:	sw	zero, 0x18(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x18

0x10d40:	addi	a0, s1, 0x5c	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x5c

0x10d44:	jal	ra, -0xa4c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffff5b4

0x10d48:	lw	s0, 0xc(s2)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0xc

0x10d4c:	lui	a5, 0x20	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x20

0x10d50:	sw	s6, 0x20(s1)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x20

0x10d54:	sw	s5, 0x24(s1)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x24

0x10d58:	sw	s4, 0x28(s1)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x28

0x10d5c:	sw	s3, 0x2c(s1)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x2c

0x10d60:	sw	s1, 0x1c(s1)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x1c

0x10d64:	addi	a5, a5, 0x12	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x12

0x10d68:	sw	a5, 0xc(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10d6c:	sw	zero, 0(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10d70:	sw	zero, 4(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x10d74:	sw	zero, 8(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10d78:	sw	zero, 0x64(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x64

0x10d7c:	sw	zero, 0x10(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x10d80:	sw	zero, 0x14(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x10d84:	sw	zero, 0x18(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x18

0x10d88:	addi	a0, s0, 0x5c	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x5c

0x10d8c:	addi	a2, zero, 8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8

0x10d90:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10d94:	jal	ra, -0xa9c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffff564

0x10d98:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10d9c:	sw	s6, 0x20(s0)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x20

0x10da0:	sw	s5, 0x24(s0)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x24

0x10da4:	sw	s4, 0x28(s0)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x28

0x10da8:	sw	s3, 0x2c(s0)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x2c

0x10dac:	sw	s0, 0x1c(s0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x1c

0x10db0:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10db4:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x10db8:	sw	a5, 0x38(s2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x38

0x10dbc:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10dc0:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10dc4:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10dc8:	lw	s4, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10dcc:	lw	s5, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10dd0:	lw	s6, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10dd4:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10dd8:	ret		207

0x10ddc:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x10de0:	addi	a5, a1, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xffffffffffffffff

0x10de4:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10de8:	slli	s0, a5, 1	249
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x10dec:	add	s0, s0, a5	1
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x10df0:	slli	s0, s0, 2	249
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x2

0x10df4:	add	s0, s0, a5	1
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x10df8:	slli	s0, s0, 3	249
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x3

0x10dfc:	sw	s2, 0(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10e00:	addi	s2, a1, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x10e04:	addi	a1, s0, 0x74	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x74

0x10e08:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10e0c:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10e10:	jal	ra, 0xa04	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xa04

0x10e14:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10e18:	beq	a0, zero, 0x20	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x10e1c:	addi	a0, a0, 0xc	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xc

0x10e20:	sw	zero, 0(s1)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s1

0x10e24:	sw	s2, 4(s1)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4

0x10e28:	sw	a0, 8(s1)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x8

0x10e2c:	addi	a2, s0, 0x68	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x68

0x10e30:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10e34:	jal	ra, -0xb3c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffff4c4

0x10e38:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10e3c:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10e40:	lw	s2, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x10e44:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x10e48:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10e4c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x10e50:	ret		207

0x10e54:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x10e58:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10e5c:	lw	s2, 0x30(gp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x30

0x10e60:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10e64:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10e68:	lw	a5, 0x38(s2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x38

0x10e6c:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10e70:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10e74:	addi	s3, a0, 0	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10e78:	beq	a5, zero, 0xac	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xac
	This instruction belongs to groups: jump 

0x10e7c:	addi	s2, s2, 0x2e0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x2e0

0x10e80:	addi	s1, zero, -1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x10e84:	lw	a5, 4(s2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x10e88:	lw	s0, 8(s2)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x10e8c:	addi	a5, a5, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffffff

0x10e90:	bge	a5, zero, 0x10	81
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x10e94:	jal	zero, 0x80	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x80

0x10e98:	addi	s0, s0, 0x68	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x68

0x10e9c:	beq	a5, s1, 0x78	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x78
	This instruction belongs to groups: jump 

0x10ea0:	lh	a4, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10ea4:	addi	a5, a5, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffffff

0x10ea8:	bne	a4, zero, -0x10	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x10eac:	lui	a5, 0xffff0	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0xffff0

0x10eb0:	addi	a5, a5, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x10eb4:	sw	a5, 0xc(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x10eb8:	sw	zero, 0x64(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x64

0x10ebc:	sw	zero, 0(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10ec0:	sw	zero, 8(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10ec4:	sw	zero, 4(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x10ec8:	sw	zero, 0x10(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x10ecc:	sw	zero, 0x14(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x10ed0:	sw	zero, 0x18(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x18

0x10ed4:	addi	a2, zero, 8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8

0x10ed8:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10edc:	addi	a0, s0, 0x5c	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x5c

0x10ee0:	jal	ra, -0xbe8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffff418

0x10ee4:	sw	zero, 0x30(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x10ee8:	sw	zero, 0x34(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x34

0x10eec:	sw	zero, 0x44(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x44

0x10ef0:	sw	zero, 0x48(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x48

0x10ef4:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x10ef8:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10efc:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x10f00:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x10f04:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x10f08:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10f0c:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x10f10:	ret		207

0x10f14:	lw	s0, 0(s2)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2

0x10f18:	beq	s0, zero, 0x18	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x10f1c:	addi	s2, s0, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10f20:	jal	zero, -0x9c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff64

0x10f24:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x10f28:	jal	ra, -0x2d0	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffffd30

0x10f2c:	jal	zero, -0xb0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff50

0x10f30:	addi	a1, zero, 0x1ac	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1ac

0x10f34:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x10f38:	jal	ra, 0x8dc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x8dc

0x10f3c:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x10f40:	beq	a0, zero, 0x30	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x30
	This instruction belongs to groups: jump 

0x10f44:	addi	a0, a0, 0xc	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xc

0x10f48:	addi	a5, zero, 4	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4

0x10f4c:	sw	zero, 0(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x10f50:	sw	a5, 4(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x10f54:	sw	a0, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x10f58:	addi	a2, zero, 0x1a0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1a0

0x10f5c:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x10f60:	jal	ra, -0xc68	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffff398

0x10f64:	sw	s0, 0(s2)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2

0x10f68:	addi	s2, s0, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x10f6c:	jal	zero, -0xe8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff18

0x10f70:	sw	zero, 0(s2)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s2

0x10f74:	addi	a5, zero, 0xc	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc

0x10f78:	sw	a5, 0(s3)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x10f7c:	jal	zero, -0x88	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff78

0x10f80:	lw	a0, 0x30(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x30

0x10f84:	lui	a1, 0x12	221
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: IMM = 0x12

0x10f88:	addi	a1, a1, 0x230	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x230

0x10f8c:	jal	zero, 0x56c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x56c

0x10f90:	lw	a5, 0x38(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x38

0x10f94:	beq	a5, zero, 8	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x10f98:	ret		207

0x10f9c:	jal	zero, -0x344	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffcbc

0x10fa0:	ret		207

0x10fa4:	ret		207

0x10fa8:	ret		207

0x10fac:	ret		207

0x10fb0:	lw	a0, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x10fb4:	lui	a1, 0x11	221
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: IMM = 0x11

0x10fb8:	addi	a1, a1, -0x3c4	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xfffffffffffffc3c

0x10fbc:	jal	zero, 0x498	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x498

0x10fc0:	lw	a0, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x10fc4:	lui	a1, 0x11	221
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: IMM = 0x11

0x10fc8:	addi	a1, a1, -0x3b0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xfffffffffffffc50

0x10fcc:	jal	zero, 0x488	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x488

0x10fd0:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x10fd4:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x10fd8:	lui	a5, 0x13	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x13

0x10fdc:	lui	s0, 0x13	221
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: IMM = 0x13

0x10fe0:	addi	a5, a5, 8	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x8

0x10fe4:	addi	s0, s0, 0xc	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xc

0x10fe8:	sub	s0, s0, a5	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x10fec:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x10ff0:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x10ff4:	srai	s1, s0, 2	257
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x2

0x10ff8:	beq	s1, zero, 0x20	80
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x10ffc:	addi	s0, s0, -4	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xfffffffffffffffc

0x11000:	add	s0, s0, a5	1
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x11004:	lw	a5, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x11008:	addi	s1, s1, -1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xffffffffffffffff

0x1100c:	addi	s0, s0, -4	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xfffffffffffffffc

0x11010:	jalr	ra, a5, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x11014:	bne	s1, zero, -0x10	85
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x11018:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1101c:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11020:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x11024:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x11028:	ret		207

0x1102c:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x11030:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11034:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x11038:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x1103c:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x11040:	sw	s4, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11044:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x11048:	addi	s4, a1, 0	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x1104c:	addi	s2, a0, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x11050:	addi	s3, gp, -0x3d8	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = gp
		operands[2].type: IMM = 0xfffffffffffffc28

0x11054:	jal	ra, 0xf34	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xf34

0x11058:	lw	a4, 8(s3)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s3
			operands[1].mem.disp: 0x8

0x1105c:	lui	a5, 1	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x1

0x11060:	addi	s0, a5, -0x11	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffffef

0x11064:	lw	s1, 4(a4)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x11068:	andi	s1, s1, -4	78
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xfffffffffffffffc

0x1106c:	add	s0, s1, s0	1
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s1
		operands[2].type: REG = s0

0x11070:	sub	s0, s0, s4	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: REG = s4

0x11074:	srli	s0, s0, 0xc	262
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xc

0x11078:	addi	s0, s0, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xffffffffffffffff

0x1107c:	slli	s0, s0, 0xc	249
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xc

0x11080:	blt	s0, a5, 0x1c	83
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1c
	This instruction belongs to groups: jump 

0x11084:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11088:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x1108c:	jal	ra, 0xf04	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xf04

0x11090:	lw	a5, 8(s3)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s3
			operands[1].mem.disp: 0x8

0x11094:	add	a5, a5, s1	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = s1

0x11098:	beq	a0, a5, 0x30	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x30
	This instruction belongs to groups: jump 

0x1109c:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x110a0:	jal	ra, 0xeec	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xeec

0x110a4:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x110a8:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x110ac:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x110b0:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x110b4:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x110b8:	lw	s4, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x110bc:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x110c0:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x110c4:	ret		207

0x110c8:	sub	a1, zero, s0	265
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: REG = s0

0x110cc:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x110d0:	jal	ra, 0xec0	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xec0

0x110d4:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x110d8:	beq	a0, a5, 0x50	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x50
	This instruction belongs to groups: jump 

0x110dc:	addi	a5, gp, 0x5c	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x5c

0x110e0:	lw	a4, 0(a5)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5

0x110e4:	lw	a3, 8(s3)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s3
			operands[1].mem.disp: 0x8

0x110e8:	sub	s1, s1, s0	265
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: REG = s0

0x110ec:	ori	s1, s1, 1	231
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x1

0x110f0:	sub	a4, a4, s0	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = s0

0x110f4:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x110f8:	sw	s1, 4(a3)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0x4

0x110fc:	sw	a4, 0(a5)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5

0x11100:	jal	ra, 0xe8c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xe8c

0x11104:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x11108:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x1110c:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x11110:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x11114:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11118:	lw	s4, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x1111c:	addi	a0, zero, 1	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x11120:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x11124:	ret		207

0x11128:	addi	a1, zero, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x1112c:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x11130:	jal	ra, 0xe60	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xe60

0x11134:	lw	a4, 8(s3)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s3
			operands[1].mem.disp: 0x8

0x11138:	addi	a3, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x1113c:	sub	a5, a0, a4	265
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a0
		operands[2].type: REG = a4

0x11140:	bge	a3, a5, -0xa4	81
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffff5c
	This instruction belongs to groups: jump 

0x11144:	lw	a3, 0x3c(gp)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x3c

0x11148:	ori	a5, a5, 1	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x1114c:	sw	a5, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x11150:	sub	a0, a0, a3	265
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: REG = a3

0x11154:	sw	a0, 0x5c(gp)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x5c

0x11158:	jal	zero, -0xbc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff44

0x1115c:	beq	a1, zero, 0x17c	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x17c
	This instruction belongs to groups: jump 

0x11160:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x11164:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11168:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x1116c:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x11170:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x11174:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11178:	jal	ra, 0xe10	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xe10

0x1117c:	lw	a0, -4(s0)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xfffffffffffffffc

0x11180:	addi	a4, s0, -8	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xfffffffffffffff8

0x11184:	andi	a5, a0, -2	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xfffffffffffffffe

0x11188:	add	a2, a4, a5	1
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x1118c:	addi	a1, gp, -0x3d8	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = gp
		operands[2].type: IMM = 0xfffffffffffffc28

0x11190:	lw	a3, 4(a2)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x4

0x11194:	lw	a6, 8(a1)	222
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x8

0x11198:	andi	a3, a3, -4	78
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xfffffffffffffffc

0x1119c:	beq	a6, a2, 0x19c	80
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x19c
	This instruction belongs to groups: jump 

0x111a0:	sw	a3, 4(a2)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x4

0x111a4:	andi	a0, a0, 1	78
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x1

0x111a8:	add	a6, a2, a3	1
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = a2
		operands[2].type: REG = a3

0x111ac:	bne	a0, zero, 0x9c	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x9c
	This instruction belongs to groups: jump 

0x111b0:	lw	t1, -8(s0)	222
	op_count: 2
		operands[0].type: REG = t1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xfffffffffffffff8

0x111b4:	lw	a6, 4(a6)	222
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = a6
			operands[1].mem.disp: 0x4

0x111b8:	sub	a4, a4, t1	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = t1

0x111bc:	lw	a7, 8(a4)	222
	op_count: 2
		operands[0].type: REG = a7
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x111c0:	addi	a0, gp, -0x3d0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = gp
		operands[2].type: IMM = 0xfffffffffffffc30

0x111c4:	add	a5, a5, t1	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = t1

0x111c8:	andi	a6, a6, 1	78
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = a6
		operands[2].type: IMM = 0x1

0x111cc:	beq	a7, a0, 0x140	80
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x140
	This instruction belongs to groups: jump 

0x111d0:	lw	t1, 0xc(a4)	222
	op_count: 2
		operands[0].type: REG = t1
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x111d4:	sw	t1, 0xc(a7)	267
	op_count: 2
		operands[0].type: REG = t1
		operands[1].type: MEM
			operands[1].mem.base: REG = a7
			operands[1].mem.disp: 0xc

0x111d8:	sw	a7, 8(t1)	267
	op_count: 2
		operands[0].type: REG = a7
		operands[1].type: MEM
			operands[1].mem.base: REG = t1
			operands[1].mem.disp: 0x8

0x111dc:	beq	a6, zero, 0x1a8	80
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1a8
	This instruction belongs to groups: jump 

0x111e0:	ori	a3, a5, 1	231
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x111e4:	sw	a3, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x111e8:	sw	a5, 0(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2

0x111ec:	addi	a3, zero, 0x1ff	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1ff

0x111f0:	bltu	a3, a5, 0x78	84
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x78
	This instruction belongs to groups: jump 

0x111f4:	andi	a3, a5, -8	78
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff8

0x111f8:	addi	a3, a3, 8	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x8

0x111fc:	lw	a0, 4(a1)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x4

0x11200:	add	a3, a1, a3	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: REG = a3

0x11204:	lw	a2, 0(a3)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a3

0x11208:	srli	a6, a5, 5	262
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x5

0x1120c:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x11210:	sll	a5, a5, a6	248
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a6

0x11214:	or	a5, a5, a0	230
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a0

0x11218:	addi	a0, a3, -8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xfffffffffffffff8

0x1121c:	sw	a0, 0xc(a4)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x11220:	sw	a2, 8(a4)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x11224:	sw	a5, 4(a1)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x4

0x11228:	sw	a4, 0(a3)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a3

0x1122c:	sw	a4, 0xc(a2)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0xc

0x11230:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11234:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11238:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x1123c:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x11240:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x11244:	jal	zero, 0xd48	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xd48

0x11248:	lw	a0, 4(a6)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a6
			operands[1].mem.disp: 0x4

0x1124c:	andi	a0, a0, 1	78
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x1

0x11250:	beq	a0, zero, 0x8c	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8c
	This instruction belongs to groups: jump 

0x11254:	ori	a3, a5, 1	231
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x11258:	sw	a3, -4(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xfffffffffffffffc

0x1125c:	sw	a5, 0(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2

0x11260:	addi	a3, zero, 0x1ff	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1ff

0x11264:	bgeu	a3, a5, -0x70	82
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffff90
	This instruction belongs to groups: jump 

0x11268:	srli	a3, a5, 9	262
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x9

0x1126c:	addi	a2, zero, 4	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4

0x11270:	bltu	a2, a3, 0x11c	84
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x11c
	This instruction belongs to groups: jump 

0x11274:	srli	a3, a5, 6	262
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x6

0x11278:	addi	a0, a3, 0x39	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x39

0x1127c:	addi	a2, a3, 0x38	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x38

0x11280:	slli	a0, a0, 3	249
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x3

0x11284:	add	a0, a1, a0	1
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a1
		operands[2].type: REG = a0

0x11288:	lw	a3, 0(a0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x1128c:	addi	a0, a0, -8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xfffffffffffffff8

0x11290:	bne	a0, a3, 0x10	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x11294:	jal	zero, 0x150	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x150

0x11298:	lw	a3, 8(a3)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0x8

0x1129c:	beq	a0, a3, 0x10	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x112a0:	lw	a2, 4(a3)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0x4

0x112a4:	andi	a2, a2, -4	78
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xfffffffffffffffc

0x112a8:	bltu	a5, a2, -0x10	84
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x112ac:	lw	a0, 0xc(a3)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0xc

0x112b0:	sw	a0, 0xc(a4)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x112b4:	sw	a3, 8(a4)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x112b8:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x112bc:	sw	a4, 8(a0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x8

0x112c0:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x112c4:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x112c8:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x112cc:	sw	a4, 0xc(a3)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0xc

0x112d0:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x112d4:	jal	zero, 0xcb8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xcb8

0x112d8:	ret		207

0x112dc:	add	a5, a5, a3	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a3

0x112e0:	addi	a0, gp, -0x3d0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = gp
		operands[2].type: IMM = 0xfffffffffffffc30

0x112e4:	lw	a3, 8(a2)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x8

0x112e8:	beq	a3, a0, 0xd8	80
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xd8
	This instruction belongs to groups: jump 

0x112ec:	lw	a6, 0xc(a2)	222
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0xc

0x112f0:	ori	a0, a5, 1	231
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x112f4:	add	a2, a4, a5	1
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x112f8:	sw	a6, 0xc(a3)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0xc

0x112fc:	sw	a3, 8(a6)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a6
			operands[1].mem.disp: 0x8

0x11300:	sw	a0, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x11304:	sw	a5, 0(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2

0x11308:	jal	zero, -0x11c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffee4

0x1130c:	bne	a6, zero, 0x138	85
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x138
	This instruction belongs to groups: jump 

0x11310:	lw	a1, 8(a2)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x8

0x11314:	lw	a2, 0xc(a2)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0xc

0x11318:	add	a3, a3, a5	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: REG = a5

0x1131c:	ori	a5, a3, 1	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x1

0x11320:	sw	a2, 0xc(a1)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xc

0x11324:	sw	a1, 8(a2)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x8

0x11328:	sw	a5, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x1132c:	add	a4, a4, a3	1
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a3

0x11330:	sw	a3, 0(a4)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x11334:	jal	zero, -0x104	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffefc

0x11338:	andi	a0, a0, 1	78
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x1

0x1133c:	add	a3, a5, a3	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: REG = a3

0x11340:	bne	a0, zero, 0x20	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x11344:	lw	a0, -8(s0)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xfffffffffffffff8

0x11348:	sub	a4, a4, a0	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a0

0x1134c:	lw	a5, 0xc(a4)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x11350:	lw	a2, 8(a4)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x11354:	add	a3, a3, a0	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: REG = a0

0x11358:	sw	a5, 0xc(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0xc

0x1135c:	sw	a2, 8(a5)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x8

0x11360:	ori	a2, a3, 1	231
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x1

0x11364:	lw	a5, 0x40(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x40

0x11368:	sw	a2, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x1136c:	sw	a4, 8(a1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x8

0x11370:	bltu	a3, a5, -0x140	84
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffec0
	This instruction belongs to groups: jump 

0x11374:	lw	a1, 0x4c(gp)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x4c

0x11378:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x1137c:	jal	ra, -0x350	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffffcb0

0x11380:	jal	zero, -0x150	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffeb0

0x11384:	add	a5, a5, a3	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a3

0x11388:	jal	zero, -0xa4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff5c

0x1138c:	addi	a2, zero, 0x14	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x14

0x11390:	bgeu	a2, a3, 0x20	82
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x11394:	addi	a2, zero, 0x54	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x54

0x11398:	bltu	a2, a3, 0x68	84
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x68
	This instruction belongs to groups: jump 

0x1139c:	srli	a3, a5, 0xc	262
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc

0x113a0:	addi	a0, a3, 0x6f	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x6f

0x113a4:	addi	a2, a3, 0x6e	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x6e

0x113a8:	slli	a0, a0, 3	249
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x3

0x113ac:	jal	zero, -0x128	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffed8

0x113b0:	addi	a0, a3, 0x5c	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x5c

0x113b4:	addi	a2, a3, 0x5b	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x5b

0x113b8:	slli	a0, a0, 3	249
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x3

0x113bc:	jal	zero, -0x138	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffec8

0x113c0:	sw	a4, 0x14(a1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x14

0x113c4:	sw	a4, 0x10(a1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x10

0x113c8:	ori	a3, a5, 1	231
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x113cc:	sw	a0, 0xc(a4)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x113d0:	sw	a0, 8(a4)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x113d4:	sw	a3, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x113d8:	add	a4, a4, a5	1
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x113dc:	sw	a5, 0(a4)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x113e0:	jal	zero, -0x1b0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe50

0x113e4:	lw	a6, 4(a1)	222
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x4

0x113e8:	srai	a2, a2, 2	257
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x2

0x113ec:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x113f0:	sll	a5, a5, a2	248
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a2

0x113f4:	or	a5, a5, a6	230
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a6

0x113f8:	sw	a5, 4(a1)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x4

0x113fc:	jal	zero, -0x14c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffeb4

0x11400:	addi	a2, zero, 0x154	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x154

0x11404:	bltu	a2, a3, 0x18	84
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x11408:	srli	a3, a5, 0xf	262
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xf

0x1140c:	addi	a0, a3, 0x78	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x78

0x11410:	addi	a2, a3, 0x77	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x77

0x11414:	slli	a0, a0, 3	249
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x3

0x11418:	jal	zero, -0x194	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe6c

0x1141c:	addi	a2, zero, 0x554	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x554

0x11420:	bltu	a2, a3, 0x18	84
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x11424:	srli	a3, a5, 0x12	262
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x12

0x11428:	addi	a0, a3, 0x7d	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x7d

0x1142c:	addi	a2, a3, 0x7c	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x7c

0x11430:	slli	a0, a0, 3	249
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x3

0x11434:	jal	zero, -0x1b0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe50

0x11438:	addi	a0, zero, 0x3f8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3f8

0x1143c:	addi	a2, zero, 0x7e	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x7e

0x11440:	jal	zero, -0x1bc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe44

0x11444:	ori	a3, a5, 1	231
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x11448:	sw	a3, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x1144c:	sw	a5, 0(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2

0x11450:	jal	zero, -0x220	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffde0

0x11454:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x11458:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x1145c:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11460:	sw	s4, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11464:	sw	s5, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x11468:	sw	s6, 0(sp)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x1146c:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x11470:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x11474:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x11478:	addi	s6, a1, 0	2
	op_count: 3
		operands[0].type: REG = s6
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x1147c:	addi	s5, a0, 0x2e0	2
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x2e0

0x11480:	addi	s4, zero, 0	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11484:	addi	s3, zero, 1	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x11488:	addi	s2, zero, -1	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x1148c:	lw	s1, 4(s5)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s5
			operands[1].mem.disp: 0x4

0x11490:	lw	s0, 8(s5)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s5
			operands[1].mem.disp: 0x8

0x11494:	addi	s1, s1, -1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xffffffffffffffff

0x11498:	blt	s1, zero, 0x2c	83
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x2c
	This instruction belongs to groups: jump 

0x1149c:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x114a0:	addi	s1, s1, -1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xffffffffffffffff

0x114a4:	bgeu	s3, a5, 0x18	82
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x114a8:	lh	a5, 0xe(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xe

0x114ac:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x114b0:	beq	a5, s2, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x114b4:	jalr	ra, s6, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = s6
		operands[2].type: IMM = 0x0

0x114b8:	or	s4, s4, a0	230
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = s4
		operands[2].type: REG = a0

0x114bc:	addi	s0, s0, 0x68	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x68

0x114c0:	bne	s1, s2, -0x24	85
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xffffffffffffffdc
	This instruction belongs to groups: jump 

0x114c4:	lw	s5, 0(s5)	222
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = s5

0x114c8:	bne	s5, zero, -0x3c	85
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffc4
	This instruction belongs to groups: jump 

0x114cc:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x114d0:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x114d4:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x114d8:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x114dc:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x114e0:	lw	s5, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x114e4:	lw	s6, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x114e8:	addi	a0, s4, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x0

0x114ec:	lw	s4, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x114f0:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x114f4:	ret		207

0x114f8:	addi	sp, sp, -0x30	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffd0

0x114fc:	sw	s2, 0x20(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x20

0x11500:	sw	s3, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x11504:	sw	s4, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x11508:	sw	s5, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x1150c:	sw	s6, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x11510:	sw	s7, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11514:	sw	ra, 0x2c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x2c

0x11518:	sw	s0, 0x28(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x28

0x1151c:	sw	s1, 0x24(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x24

0x11520:	addi	s5, a0, 0	2
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x11524:	addi	s7, a1, 0	2
	op_count: 3
		operands[0].type: REG = s7
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x11528:	addi	s6, a0, 0x2e0	2
	op_count: 3
		operands[0].type: REG = s6
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x2e0

0x1152c:	addi	s4, zero, 0	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11530:	addi	s3, zero, 1	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x11534:	addi	s2, zero, -1	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x11538:	lw	s1, 4(s6)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s6
			operands[1].mem.disp: 0x4

0x1153c:	lw	s0, 8(s6)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s6
			operands[1].mem.disp: 0x8

0x11540:	addi	s1, s1, -1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xffffffffffffffff

0x11544:	blt	s1, zero, 0x30	83
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x30
	This instruction belongs to groups: jump 

0x11548:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x1154c:	addi	s1, s1, -1	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xffffffffffffffff

0x11550:	bgeu	s3, a5, 0x1c	82
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1c
	This instruction belongs to groups: jump 

0x11554:	lh	a5, 0xe(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xe

0x11558:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1155c:	addi	a0, s5, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s5
		operands[2].type: IMM = 0x0

0x11560:	beq	a5, s2, 0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x11564:	jalr	ra, s7, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = s7
		operands[2].type: IMM = 0x0

0x11568:	or	s4, s4, a0	230
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = s4
		operands[2].type: REG = a0

0x1156c:	addi	s0, s0, 0x68	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x68

0x11570:	bne	s1, s2, -0x28	85
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xffffffffffffffd8
	This instruction belongs to groups: jump 

0x11574:	lw	s6, 0(s6)	222
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = s6

0x11578:	bne	s6, zero, -0x40	85
	op_count: 3
		operands[0].type: REG = s6
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffc0
	This instruction belongs to groups: jump 

0x1157c:	lw	ra, 0x2c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x2c

0x11580:	lw	s0, 0x28(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x28

0x11584:	lw	s1, 0x24(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x24

0x11588:	lw	s2, 0x20(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x20

0x1158c:	lw	s3, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x11590:	lw	s5, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x11594:	lw	s6, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x11598:	lw	s7, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1159c:	addi	a0, s4, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x0

0x115a0:	lw	s4, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x115a4:	addi	sp, sp, 0x30	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x30

0x115a8:	ret		207

0x115ac:	lh	a5, 0xc(a1)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xc

0x115b0:	addi	sp, sp, -0x80	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffff80

0x115b4:	sw	s0, 0x78(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x78

0x115b8:	sw	ra, 0x7c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x7c

0x115bc:	sw	s1, 0x74(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x74

0x115c0:	sw	s2, 0x70(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x70

0x115c4:	sw	s3, 0x6c(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x115c8:	sw	s4, 0x68(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x68

0x115cc:	andi	a4, a5, 2	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x2

0x115d0:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x115d4:	beq	a4, zero, 0x38	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x38
	This instruction belongs to groups: jump 

0x115d8:	addi	a5, a1, 0x43	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x43

0x115dc:	sw	a5, 0(a1)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1

0x115e0:	sw	a5, 0x10(a1)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x10

0x115e4:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x115e8:	sw	a5, 0x14(a1)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x14

0x115ec:	lw	ra, 0x7c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x7c

0x115f0:	lw	s0, 0x78(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x78

0x115f4:	lw	s1, 0x74(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x74

0x115f8:	lw	s2, 0x70(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x70

0x115fc:	lw	s3, 0x6c(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x11600:	lw	s4, 0x68(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x68

0x11604:	addi	sp, sp, 0x80	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x80

0x11608:	ret		207

0x1160c:	lh	a1, 0xe(a1)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xe

0x11610:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x11614:	blt	a1, zero, 0x98	83
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x98
	This instruction belongs to groups: jump 

0x11618:	addi	a2, sp, 8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x8

0x1161c:	jal	ra, 0xd30	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xd30

0x11620:	blt	a0, zero, 0x88	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x88
	This instruction belongs to groups: jump 

0x11624:	lw	a5, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11628:	lui	s2, 0xf	221
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: IMM = 0xf

0x1162c:	lui	s3, 1	221
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: IMM = 0x1

0x11630:	and	s2, s2, a5	77
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: REG = a5

0x11634:	lui	a5, 0xffffe	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0xffffe

0x11638:	add	s2, s2, a5	1
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: REG = a5

0x1163c:	sltiu	s2, s2, 1	254
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x1

0x11640:	addi	s4, zero, 0x400	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x400

0x11644:	addi	s3, s3, -0x800	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = s3
		operands[2].type: IMM = 0xfffffffffffff800

0x11648:	addi	a1, s4, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x0

0x1164c:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x11650:	jal	ra, 0x1c4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x1c4

0x11654:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11658:	beq	a0, zero, 0x7c	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x7c
	This instruction belongs to groups: jump 

0x1165c:	lui	a4, 0x11	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0x11

0x11660:	addi	a4, a4, -0x3bc	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xfffffffffffffc44

0x11664:	sw	a4, 0x3c(s1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x3c

0x11668:	ori	a5, a5, 0x80	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x80

0x1166c:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11670:	sw	a0, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x11674:	sw	a0, 0x10(s0)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x11678:	sw	s4, 0x14(s0)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x1167c:	bne	s2, zero, 0x90	85
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x90
	This instruction belongs to groups: jump 

0x11680:	or	a5, a5, s3	230
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = s3

0x11684:	lw	ra, 0x7c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x7c

0x11688:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x1168c:	lw	s0, 0x78(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x78

0x11690:	lw	s1, 0x74(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x74

0x11694:	lw	s2, 0x70(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x70

0x11698:	lw	s3, 0x6c(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x1169c:	lw	s4, 0x68(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x68

0x116a0:	addi	sp, sp, 0x80	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x80

0x116a4:	ret		207

0x116a8:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x116ac:	andi	a5, a5, 0x80	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x80

0x116b0:	addi	s2, zero, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x116b4:	beq	a5, zero, 0x4c	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4c
	This instruction belongs to groups: jump 

0x116b8:	addi	s4, zero, 0x40	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x40

0x116bc:	addi	a1, s4, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x0

0x116c0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x116c4:	jal	ra, 0x150	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x150

0x116c8:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x116cc:	addi	s3, zero, 0	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x116d0:	bne	a0, zero, -0x74	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff8c
	This instruction belongs to groups: jump 

0x116d4:	andi	a4, a5, 0x200	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x200

0x116d8:	bne	a4, zero, -0xec	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff14
	This instruction belongs to groups: jump 

0x116dc:	andi	a5, a5, -4	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffffc

0x116e0:	ori	a5, a5, 2	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x2

0x116e4:	addi	a4, s0, 0x43	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x43

0x116e8:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x116ec:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x116f0:	sw	a4, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x116f4:	sw	a4, 0x10(s0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x116f8:	sw	a5, 0x14(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x14

0x116fc:	jal	zero, -0x110	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffef0

0x11700:	addi	s4, zero, 0x400	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x400

0x11704:	addi	s3, zero, 0	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11708:	jal	zero, -0xc0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff40

0x1170c:	lh	a1, 0xe(s0)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xe

0x11710:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x11714:	jal	ra, 0xc9c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xc9c

0x11718:	bne	a0, zero, 0xc	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x1171c:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11720:	jal	zero, -0xa0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff60

0x11724:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11728:	andi	a5, a5, -4	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffffc

0x1172c:	ori	a5, a5, 1	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x11730:	slli	a5, a5, 0x10	249
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x10

0x11734:	srai	a5, a5, 0x10	257
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x10

0x11738:	jal	zero, -0xb8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff48

0x1173c:	addi	sp, sp, -0x70	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffff90

0x11740:	sw	s0, 0x68(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x68

0x11744:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x11748:	lh	a1, 0xe(a1)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xe

0x1174c:	sw	s1, 0x64(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x64

0x11750:	sw	s2, 0x60(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x60

0x11754:	sw	ra, 0x6c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x11758:	addi	s1, a2, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x0

0x1175c:	addi	s2, a3, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x11760:	blt	a1, zero, 0x54	83
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x54
	This instruction belongs to groups: jump 

0x11764:	addi	a2, sp, 8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x8

0x11768:	jal	ra, 0xbe4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xbe4

0x1176c:	blt	a0, zero, 0x48	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x48
	This instruction belongs to groups: jump 

0x11770:	lw	a4, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11774:	lui	a5, 0xf	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0xf

0x11778:	lw	ra, 0x6c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x1177c:	and	a5, a5, a4	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x11780:	lui	a4, 0xffffe	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0xffffe

0x11784:	add	a5, a5, a4	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x11788:	lw	s0, 0x68(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x68

0x1178c:	sltiu	a5, a5, 1	254
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x11790:	sw	a5, 0(s2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2

0x11794:	addi	a4, zero, 0x400	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x400

0x11798:	sw	a4, 0(s1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s1

0x1179c:	lui	a0, 1	221
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: IMM = 0x1

0x117a0:	lw	s1, 0x64(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x64

0x117a4:	lw	s2, 0x60(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x60

0x117a8:	addi	a0, a0, -0x800	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xfffffffffffff800

0x117ac:	addi	sp, sp, 0x70	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x70

0x117b0:	ret		207

0x117b4:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x117b8:	andi	a5, a5, 0x80	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x80

0x117bc:	beq	a5, zero, 0x30	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x30
	This instruction belongs to groups: jump 

0x117c0:	lw	ra, 0x6c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x117c4:	lw	s0, 0x68(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x68

0x117c8:	addi	a5, zero, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x117cc:	sw	a5, 0(s2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2

0x117d0:	addi	a4, zero, 0x40	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x40

0x117d4:	sw	a4, 0(s1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s1

0x117d8:	lw	s2, 0x60(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x60

0x117dc:	lw	s1, 0x64(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x64

0x117e0:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x117e4:	addi	sp, sp, 0x70	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x70

0x117e8:	ret		207

0x117ec:	lw	ra, 0x6c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x117f0:	lw	s0, 0x68(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x68

0x117f4:	sw	a5, 0(s2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2

0x117f8:	addi	a4, zero, 0x400	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x400

0x117fc:	sw	a4, 0(s1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s1

0x11800:	lw	s2, 0x60(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x60

0x11804:	lw	s1, 0x64(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x64

0x11808:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x1180c:	addi	sp, sp, 0x70	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x70

0x11810:	ret		207

0x11814:	addi	sp, sp, -0x30	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffd0

0x11818:	sw	s3, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x1181c:	sw	ra, 0x2c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x2c

0x11820:	sw	s0, 0x28(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x28

0x11824:	sw	s1, 0x24(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x24

0x11828:	sw	s2, 0x20(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x20

0x1182c:	sw	s4, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x11830:	sw	s5, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x11834:	sw	s6, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x11838:	sw	s7, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1183c:	sw	s8, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s8
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11840:	sw	s9, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s9
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x11844:	addi	a5, a1, 0xb	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xb

0x11848:	addi	a4, zero, 0x16	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x16

0x1184c:	addi	s3, a0, 0	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x11850:	bltu	a4, a5, 0x98	84
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x98
	This instruction belongs to groups: jump 

0x11854:	addi	a5, zero, 0x10	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x10

0x11858:	bltu	a5, a1, 0x214	84
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x214
	This instruction belongs to groups: jump 

0x1185c:	jal	ra, 0x72c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x72c

0x11860:	addi	s1, zero, 0x10	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x10

0x11864:	addi	a5, zero, 0x18	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18

0x11868:	addi	a1, zero, 2	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x2

0x1186c:	addi	s2, gp, -0x3d8	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = gp
		operands[2].type: IMM = 0xfffffffffffffc28

0x11870:	add	a5, s2, a5	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s2
		operands[2].type: REG = a5

0x11874:	lw	s0, 4(a5)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x11878:	addi	a4, a5, -8	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff8

0x1187c:	beq	s0, a4, 0x300	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x300
	This instruction belongs to groups: jump 

0x11880:	lw	a5, 4(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11884:	lw	a3, 0xc(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11888:	lw	a2, 8(s0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x1188c:	andi	a5, a5, -4	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffffc

0x11890:	add	a5, s0, a5	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x11894:	lw	a4, 4(a5)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x11898:	sw	a3, 0xc(a2)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0xc

0x1189c:	sw	a2, 8(a3)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0x8

0x118a0:	ori	a4, a4, 1	231
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x118a4:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x118a8:	sw	a4, 4(a5)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x118ac:	jal	ra, 0x6e0	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x6e0

0x118b0:	addi	a0, s0, 8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x8

0x118b4:	lw	ra, 0x2c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x2c

0x118b8:	lw	s0, 0x28(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x28

0x118bc:	lw	s1, 0x24(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x24

0x118c0:	lw	s2, 0x20(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x20

0x118c4:	lw	s3, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x118c8:	lw	s4, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x118cc:	lw	s5, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x118d0:	lw	s6, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s6
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x118d4:	lw	s7, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x118d8:	lw	s8, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s8
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x118dc:	lw	s9, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s9
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x118e0:	addi	sp, sp, 0x30	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x30

0x118e4:	ret		207

0x118e8:	andi	s1, a5, -8	78
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff8

0x118ec:	blt	a5, zero, 0x180	83
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x180
	This instruction belongs to groups: jump 

0x118f0:	bltu	s1, a1, 0x17c	84
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x17c
	This instruction belongs to groups: jump 

0x118f4:	jal	ra, 0x694	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x694

0x118f8:	addi	a5, zero, 0x1f7	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1f7

0x118fc:	bgeu	a5, s1, 0x394	82
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x394
	This instruction belongs to groups: jump 

0x11900:	srli	a5, s1, 9	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x9

0x11904:	beq	a5, zero, 0x178	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x178
	This instruction belongs to groups: jump 

0x11908:	addi	a4, zero, 4	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4

0x1190c:	bltu	a4, a5, 0x2e0	84
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x2e0
	This instruction belongs to groups: jump 

0x11910:	srli	a5, s1, 6	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x6

0x11914:	addi	a1, a5, 0x39	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x39

0x11918:	addi	a0, a5, 0x38	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x38

0x1191c:	slli	a3, a1, 3	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x3

0x11920:	addi	s2, gp, -0x3d8	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = gp
		operands[2].type: IMM = 0xfffffffffffffc28

0x11924:	add	a3, s2, a3	1
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = s2
		operands[2].type: REG = a3

0x11928:	lw	s0, 4(a3)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0x4

0x1192c:	addi	a3, a3, -8	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xfffffffffffffff8

0x11930:	beq	a3, s0, 0x2c	80
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x2c
	This instruction belongs to groups: jump 

0x11934:	addi	a2, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x11938:	jal	zero, 0x10	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x10

0x1193c:	bge	a4, zero, 0x234	81
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x234
	This instruction belongs to groups: jump 

0x11940:	lw	s0, 0xc(s0)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11944:	beq	a3, s0, 0x18	80
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x11948:	lw	a5, 4(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x1194c:	andi	a5, a5, -4	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffffc

0x11950:	sub	a4, a5, s1	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: REG = s1

0x11954:	bge	a2, a4, -0x18	81
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x11958:	addi	a1, a0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x1195c:	lw	s0, 0x10(s2)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x10

0x11960:	addi	a6, gp, -0x3d0	2
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = gp
		operands[2].type: IMM = 0xfffffffffffffc30

0x11964:	beq	s0, a6, 0x1dc	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a6
		operands[2].type: IMM = 0x1dc
	This instruction belongs to groups: jump 

0x11968:	lw	a5, 4(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x1196c:	addi	a3, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x11970:	andi	a5, a5, -4	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffffc

0x11974:	sub	a4, a5, s1	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: REG = s1

0x11978:	blt	a3, a4, 0x324	83
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x324
	This instruction belongs to groups: jump 

0x1197c:	sw	a6, 0x14(s2)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x14

0x11980:	sw	a6, 0x10(s2)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x10

0x11984:	bge	a4, zero, 0x2ec	81
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x2ec
	This instruction belongs to groups: jump 

0x11988:	addi	a4, zero, 0x1ff	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1ff

0x1198c:	lw	a0, 4(s2)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x11990:	bltu	a4, a5, 0x1fc	84
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1fc
	This instruction belongs to groups: jump 

0x11994:	andi	a4, a5, -8	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff8

0x11998:	addi	a4, a4, 8	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x8

0x1199c:	add	a4, s2, a4	1
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s2
		operands[2].type: REG = a4

0x119a0:	lw	a3, 0(a4)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x119a4:	srli	a2, a5, 5	262
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x5

0x119a8:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x119ac:	sll	a5, a5, a2	248
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a2

0x119b0:	or	a0, a0, a5	230
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: REG = a5

0x119b4:	addi	a5, a4, -8	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xfffffffffffffff8

0x119b8:	sw	a5, 0xc(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x119bc:	sw	a3, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x119c0:	sw	a0, 4(s2)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x119c4:	sw	s0, 0(a4)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x119c8:	sw	s0, 0xc(a3)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a3
			operands[1].mem.disp: 0xc

0x119cc:	srai	a5, a1, 2	257
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x2

0x119d0:	addi	a2, zero, 1	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x119d4:	sll	a2, a2, a5	248
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: REG = a5

0x119d8:	bltu	a0, a2, 0xb4	84
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xb4
	This instruction belongs to groups: jump 

0x119dc:	and	a5, a2, a0	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a2
		operands[2].type: REG = a0

0x119e0:	bne	a5, zero, 0x28	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x28
	This instruction belongs to groups: jump 

0x119e4:	slli	a2, a2, 1	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x1

0x119e8:	andi	a1, a1, -4	78
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xfffffffffffffffc

0x119ec:	and	a5, a2, a0	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a2
		operands[2].type: REG = a0

0x119f0:	addi	a1, a1, 4	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x4

0x119f4:	bne	a5, zero, 0x14	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x14
	This instruction belongs to groups: jump 

0x119f8:	slli	a2, a2, 1	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x1

0x119fc:	and	a5, a2, a0	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a2
		operands[2].type: REG = a0

0x11a00:	addi	a1, a1, 4	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x4

0x11a04:	beq	a5, zero, -0xc	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffff4
	This instruction belongs to groups: jump 

0x11a08:	addi	a7, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x11a0c:	slli	t1, a1, 3	249
	op_count: 3
		operands[0].type: REG = t1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x3

0x11a10:	add	t1, s2, t1	1
	op_count: 3
		operands[0].type: REG = t1
		operands[1].type: REG = s2
		operands[2].type: REG = t1

0x11a14:	addi	a0, t1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = t1
		operands[2].type: IMM = 0x0

0x11a18:	lw	a5, 0xc(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0xc

0x11a1c:	addi	t3, a1, 0	2
	op_count: 3
		operands[0].type: REG = t3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x11a20:	beq	a0, a5, 0x1f0	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1f0
	This instruction belongs to groups: jump 

0x11a24:	lw	a4, 4(a5)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x11a28:	addi	s0, a5, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x11a2c:	lw	a5, 0xc(a5)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0xc

0x11a30:	andi	a4, a4, -4	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xfffffffffffffffc

0x11a34:	sub	a3, a4, s1	265
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: REG = s1

0x11a38:	blt	a7, a3, 0x1f0	83
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x1f0
	This instruction belongs to groups: jump 

0x11a3c:	blt	a3, zero, -0x1c	83
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe4
	This instruction belongs to groups: jump 

0x11a40:	add	a4, s0, a4	1
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: REG = a4

0x11a44:	lw	a3, 4(a4)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x11a48:	lw	a2, 8(s0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x11a4c:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11a50:	ori	a3, a3, 1	231
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x1

0x11a54:	sw	a3, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x11a58:	sw	a5, 0xc(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0xc

0x11a5c:	sw	a2, 8(a5)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x8

0x11a60:	jal	ra, 0x52c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x52c

0x11a64:	addi	a0, s0, 8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x8

0x11a68:	jal	zero, -0x1b4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe4c

0x11a6c:	addi	a5, zero, 0xc	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc

0x11a70:	sw	a5, 0(s3)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x11a74:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11a78:	jal	zero, -0x1c4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe3c

0x11a7c:	addi	a3, zero, 0x200	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x200

0x11a80:	addi	a1, zero, 0x40	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x40

0x11a84:	addi	a0, zero, 0x3f	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3f

0x11a88:	jal	zero, -0x168	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe98

0x11a8c:	lw	s0, 8(s2)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x11a90:	lw	a5, 4(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11a94:	andi	s6, a5, -4	78
	op_count: 3
		operands[0].type: REG = s6
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffffc

0x11a98:	bltu	s6, s1, 0x10	84
	op_count: 3
		operands[0].type: REG = s6
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x11a9c:	sub	a4, s6, s1	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s6
		operands[2].type: REG = s1

0x11aa0:	addi	a5, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x11aa4:	blt	a5, a4, 0xa4	83
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xa4
	This instruction belongs to groups: jump 

0x11aa8:	lw	s5, 0x4c(gp)	222
	op_count: 2
		operands[0].type: REG = s5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x4c

0x11aac:	lw	a4, 0x3c(gp)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x3c

0x11ab0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x11ab4:	add	s4, s0, s6	1
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = s0
		operands[2].type: REG = s6

0x11ab8:	add	s5, s1, s5	1
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s1
		operands[2].type: REG = s5

0x11abc:	beq	a4, a5, 0x3a8	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x3a8
	This instruction belongs to groups: jump 

0x11ac0:	lui	a5, 1	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0x1

0x11ac4:	addi	a5, a5, 0xf	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xf

0x11ac8:	add	s5, s5, a5	1
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s5
		operands[2].type: REG = a5

0x11acc:	lui	a5, 0xfffff	221
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: IMM = 0xfffff

0x11ad0:	and	s5, s5, a5	77
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s5
		operands[2].type: REG = a5

0x11ad4:	addi	a1, s5, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s5
		operands[2].type: IMM = 0x0

0x11ad8:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11adc:	jal	ra, 0x4b4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x4b4

0x11ae0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x11ae4:	addi	s7, a0, 0	2
	op_count: 3
		operands[0].type: REG = s7
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x11ae8:	beq	a0, a5, 0x208	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x208
	This instruction belongs to groups: jump 

0x11aec:	bltu	a0, s4, 0x200	84
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x200
	This instruction belongs to groups: jump 

0x11af0:	addi	s8, gp, 0x5c	2
	op_count: 3
		operands[0].type: REG = s8
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x5c

0x11af4:	lw	a1, 0(s8)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11af8:	add	a1, s5, a1	1
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s5
		operands[2].type: REG = a1

0x11afc:	sw	a1, 0(s8)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11b00:	addi	a4, a1, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x11b04:	bne	s4, a0, 0x28c	85
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x28c
	This instruction belongs to groups: jump 

0x11b08:	slli	a5, a0, 0x14	249
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x14

0x11b0c:	bne	a5, zero, 0x284	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x284
	This instruction belongs to groups: jump 

0x11b10:	lw	s7, 8(s2)	222
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x11b14:	add	a5, s6, s5	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s6
		operands[2].type: REG = s5

0x11b18:	ori	a5, a5, 1	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1

0x11b1c:	sw	a5, 4(s7)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s7
			operands[1].mem.disp: 0x4

0x11b20:	lw	a3, 0x48(gp)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x48

0x11b24:	bgeu	a3, a1, 8	82
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x11b28:	sw	a1, 0x48(gp)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x48

0x11b2c:	lw	a3, 0x44(gp)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x44

0x11b30:	bgeu	a3, a1, 8	82
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x11b34:	sw	a1, 0x44(gp)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x44

0x11b38:	addi	s0, s7, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s7
		operands[2].type: IMM = 0x0

0x11b3c:	jal	zero, 0x1bc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x1bc

0x11b40:	lw	a0, 4(s2)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x11b44:	jal	zero, -0x178	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe88

0x11b48:	ori	a5, s1, 1	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x1

0x11b4c:	sw	a5, 4(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11b50:	add	s1, s0, s1	1
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s0
		operands[2].type: REG = s1

0x11b54:	sw	s1, 8(s2)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x11b58:	ori	a4, a4, 1	231
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x11b5c:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11b60:	sw	a4, 4(s1)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4

0x11b64:	jal	ra, 0x428	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x428

0x11b68:	addi	a0, s0, 8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x8

0x11b6c:	jal	zero, -0x2b8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffd48

0x11b70:	lw	a3, 0xc(s0)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11b74:	lw	a2, 8(s0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x11b78:	jal	zero, -0x2e8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffd18

0x11b7c:	lw	s0, 0xc(a5)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0xc

0x11b80:	addi	a1, a1, 2	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x2

0x11b84:	beq	a5, s0, -0x228	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xfffffffffffffdd8
	This instruction belongs to groups: jump 

0x11b88:	jal	zero, -0x308	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffcf8

0x11b8c:	srli	a4, a5, 9	262
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x9

0x11b90:	addi	a3, zero, 4	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4

0x11b94:	bgeu	a3, a4, 0x144	82
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x144
	This instruction belongs to groups: jump 

0x11b98:	addi	a3, zero, 0x14	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x14

0x11b9c:	bltu	a3, a4, 0x314	84
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x314
	This instruction belongs to groups: jump 

0x11ba0:	addi	a2, a4, 0x5c	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x5c

0x11ba4:	addi	a3, a4, 0x5b	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x5b

0x11ba8:	slli	a2, a2, 3	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x3

0x11bac:	add	a2, s2, a2	1
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = s2
		operands[2].type: REG = a2

0x11bb0:	lw	a4, 0(a2)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a2

0x11bb4:	addi	a2, a2, -8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xfffffffffffffff8

0x11bb8:	bne	a2, a4, 0x10	85
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x11bbc:	jal	zero, 0x2b0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x2b0

0x11bc0:	lw	a4, 8(a4)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x11bc4:	beq	a2, a4, 0x10	80
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x11bc8:	lw	a3, 4(a4)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x11bcc:	andi	a3, a3, -4	78
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xfffffffffffffffc

0x11bd0:	bltu	a5, a3, -0x10	84
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a3
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x11bd4:	lw	a2, 0xc(a4)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x11bd8:	sw	a2, 0xc(s0)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x11bdc:	sw	a4, 8(s0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x11be0:	sw	s0, 8(a2)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0x8

0x11be4:	sw	s0, 0xc(a4)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0xc

0x11be8:	jal	zero, -0x21c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffde4

0x11bec:	addi	a4, zero, 0x14	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x14

0x11bf0:	bgeu	a4, a5, 0x12c	82
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x12c
	This instruction belongs to groups: jump 

0x11bf4:	addi	a4, zero, 0x54	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x54

0x11bf8:	bltu	a4, a5, 0x2d4	84
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x2d4
	This instruction belongs to groups: jump 

0x11bfc:	srli	a5, s1, 0xc	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xc

0x11c00:	addi	a1, a5, 0x6f	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x6f

0x11c04:	addi	a0, a5, 0x6e	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x6e

0x11c08:	slli	a3, a1, 3	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x3

0x11c0c:	jal	zero, -0x2ec	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffd14

0x11c10:	addi	t3, t3, 1	2
	op_count: 3
		operands[0].type: REG = t3
		operands[1].type: REG = t3
		operands[2].type: IMM = 0x1

0x11c14:	andi	a5, t3, 3	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = t3
		operands[2].type: IMM = 0x3

0x11c18:	addi	a0, a0, 8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x8

0x11c1c:	beq	a5, zero, 0x11c	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x11c
	This instruction belongs to groups: jump 

0x11c20:	lw	a5, 0xc(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0xc

0x11c24:	jal	zero, -0x204	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffdfc

0x11c28:	lw	a2, 8(s0)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x8

0x11c2c:	ori	a1, s1, 1	231
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x1

0x11c30:	sw	a1, 4(s0)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11c34:	sw	a5, 0xc(a2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a2
			operands[1].mem.disp: 0xc

0x11c38:	sw	a2, 8(a5)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x8

0x11c3c:	add	s1, s0, s1	1
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s0
		operands[2].type: REG = s1

0x11c40:	sw	s1, 0x14(s2)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x14

0x11c44:	sw	s1, 0x10(s2)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x10

0x11c48:	ori	a5, a3, 1	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x1

0x11c4c:	sw	a6, 0xc(s1)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0xc

0x11c50:	sw	a6, 8(s1)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x8

0x11c54:	sw	a5, 4(s1)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4

0x11c58:	add	a4, s0, a4	1
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: REG = a4

0x11c5c:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11c60:	sw	a3, 0(a4)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a4

0x11c64:	jal	ra, 0x328	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x328

0x11c68:	addi	a0, s0, 8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x8

0x11c6c:	jal	zero, -0x3b8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffc48

0x11c70:	add	a5, s0, a5	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x11c74:	lw	a4, 4(a5)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x11c78:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11c7c:	ori	a4, a4, 1	231
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x11c80:	sw	a4, 4(a5)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x11c84:	jal	ra, 0x308	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x308

0x11c88:	addi	a0, s0, 8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x8

0x11c8c:	jal	zero, -0x3d8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffc28

0x11c90:	srli	a1, s1, 3	262
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x3

0x11c94:	addi	a5, s1, 8	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x8

0x11c98:	jal	zero, -0x42c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffbd4

0x11c9c:	ori	a3, s1, 1	231
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x1

0x11ca0:	sw	a3, 4(s0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11ca4:	add	s1, s0, s1	1
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = s0
		operands[2].type: REG = s1

0x11ca8:	sw	s1, 0x14(s2)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x14

0x11cac:	sw	s1, 0x10(s2)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x10

0x11cb0:	ori	a3, a4, 1	231
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x11cb4:	sw	a6, 0xc(s1)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0xc

0x11cb8:	sw	a6, 8(s1)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x8

0x11cbc:	sw	a3, 4(s1)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4

0x11cc0:	add	a5, s0, a5	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x11cc4:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11cc8:	sw	a4, 0(a5)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5

0x11ccc:	jal	ra, 0x2c0	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x2c0

0x11cd0:	addi	a0, s0, 8	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x8

0x11cd4:	jal	zero, -0x420	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffbe0

0x11cd8:	srli	a4, a5, 6	262
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x6

0x11cdc:	addi	a2, a4, 0x39	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x39

0x11ce0:	addi	a3, a4, 0x38	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x38

0x11ce4:	slli	a2, a2, 3	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x3

0x11ce8:	jal	zero, -0x13c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffec4

0x11cec:	beq	s0, s2, 0x94	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x94
	This instruction belongs to groups: jump 

0x11cf0:	lw	s0, 8(s2)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x11cf4:	lw	a5, 4(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11cf8:	andi	a5, a5, -4	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffffc

0x11cfc:	sub	a4, a5, s1	265
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: REG = s1

0x11d00:	bltu	a5, s1, 0xc	84
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x11d04:	addi	a5, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x11d08:	blt	a5, a4, -0x1c0	83
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xfffffffffffffe40
	This instruction belongs to groups: jump 

0x11d0c:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11d10:	jal	ra, 0x27c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x27c

0x11d14:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11d18:	jal	zero, -0x464	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffb9c

0x11d1c:	addi	a1, a5, 0x5c	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x5c

0x11d20:	addi	a0, a5, 0x5b	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x5b

0x11d24:	slli	a3, a1, 3	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x3

0x11d28:	jal	zero, -0x408	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffbf8

0x11d2c:	lw	a5, 8(t1)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = t1
			operands[1].mem.disp: 0x8

0x11d30:	addi	a1, a1, -1	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0xffffffffffffffff

0x11d34:	bne	a5, t1, 0x24c	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = t1
		operands[2].type: IMM = 0x24c
	This instruction belongs to groups: jump 

0x11d38:	andi	a5, a1, 3	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x3

0x11d3c:	addi	t1, t1, -8	2
	op_count: 3
		operands[0].type: REG = t1
		operands[1].type: REG = t1
		operands[2].type: IMM = 0xfffffffffffffff8

0x11d40:	bne	a5, zero, -0x14	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffec
	This instruction belongs to groups: jump 

0x11d44:	lw	a4, 4(s2)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x11d48:	xori	a5, a2, -1	272
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xffffffffffffffff

0x11d4c:	and	a5, a5, a4	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x11d50:	sw	a5, 4(s2)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x11d54:	slli	a2, a2, 1	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x1

0x11d58:	bltu	a5, a2, -0x2cc	84
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a2
		operands[2].type: IMM = 0xfffffffffffffd34
	This instruction belongs to groups: jump 

0x11d5c:	beq	a2, zero, -0x2d0	80
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffd30
	This instruction belongs to groups: jump 

0x11d60:	and	a4, a2, a5	77
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a2
		operands[2].type: REG = a5

0x11d64:	bne	a4, zero, 0x14	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x14
	This instruction belongs to groups: jump 

0x11d68:	slli	a2, a2, 1	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x1

0x11d6c:	and	a4, a2, a5	77
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a2
		operands[2].type: REG = a5

0x11d70:	addi	t3, t3, 4	2
	op_count: 3
		operands[0].type: REG = t3
		operands[1].type: REG = t3
		operands[2].type: IMM = 0x4

0x11d74:	beq	a4, zero, -0xc	80
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffff4
	This instruction belongs to groups: jump 

0x11d78:	addi	a1, t3, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = t3
		operands[2].type: IMM = 0x0

0x11d7c:	jal	zero, -0x370	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffc90

0x11d80:	addi	s8, gp, 0x5c	2
	op_count: 3
		operands[0].type: REG = s8
		operands[1].type: REG = gp
		operands[2].type: IMM = 0x5c

0x11d84:	lw	a4, 0(s8)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11d88:	add	a4, s5, a4	1
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s5
		operands[2].type: REG = a4

0x11d8c:	sw	a4, 0(s8)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11d90:	lw	a3, 0x3c(gp)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x3c

0x11d94:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x11d98:	beq	a3, a5, 0x150	80
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x150
	This instruction belongs to groups: jump 

0x11d9c:	sub	a5, s7, s4	265
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s7
		operands[2].type: REG = s4

0x11da0:	add	a5, a5, a4	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x11da4:	sw	a5, 0(s8)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11da8:	andi	s9, s7, 7	78
	op_count: 3
		operands[0].type: REG = s9
		operands[1].type: REG = s7
		operands[2].type: IMM = 0x7

0x11dac:	beq	s9, zero, 0xd8	80
	op_count: 3
		operands[0].type: REG = s9
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xd8
	This instruction belongs to groups: jump 

0x11db0:	lui	a4, 1	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0x1

0x11db4:	sub	s7, s7, s9	265
	op_count: 3
		operands[0].type: REG = s7
		operands[1].type: REG = s7
		operands[2].type: REG = s9

0x11db8:	addi	a1, a4, 8	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x8

0x11dbc:	addi	s7, s7, 8	2
	op_count: 3
		operands[0].type: REG = s7
		operands[1].type: REG = s7
		operands[2].type: IMM = 0x8

0x11dc0:	sub	a1, a1, s9	265
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: REG = s9

0x11dc4:	add	s5, s7, s5	1
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s7
		operands[2].type: REG = s5

0x11dc8:	sub	a1, a1, s5	265
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: REG = s5

0x11dcc:	addi	a4, a4, -1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xffffffffffffffff

0x11dd0:	and	s4, a1, a4	77
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = a1
		operands[2].type: REG = a4

0x11dd4:	addi	a1, s4, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x0

0x11dd8:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11ddc:	jal	ra, 0x1b4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x1b4

0x11de0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x11de4:	beq	a0, a5, 0x150	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x150
	This instruction belongs to groups: jump 

0x11de8:	sub	a0, a0, s7	265
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: REG = s7

0x11dec:	add	s5, a0, s4	1
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = a0
		operands[2].type: REG = s4

0x11df0:	lw	a4, 0(s8)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11df4:	sw	s7, 8(s2)	267
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x11df8:	ori	a5, s5, 1	231
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s5
		operands[2].type: IMM = 0x1

0x11dfc:	add	a1, s4, a4	1
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s4
		operands[2].type: REG = a4

0x11e00:	sw	a1, 0(s8)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11e04:	sw	a5, 4(s7)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s7
			operands[1].mem.disp: 0x4

0x11e08:	beq	s0, s2, -0x2e8	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0xfffffffffffffd18
	This instruction belongs to groups: jump 

0x11e0c:	addi	a3, zero, 0xf	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xf

0x11e10:	bgeu	a3, s6, 0xe0	82
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = s6
		operands[2].type: IMM = 0xe0
	This instruction belongs to groups: jump 

0x11e14:	lw	a4, 4(s0)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11e18:	addi	a5, s6, -0xc	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s6
		operands[2].type: IMM = 0xfffffffffffffff4

0x11e1c:	andi	a5, a5, -8	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xfffffffffffffff8

0x11e20:	andi	a4, a4, 1	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x11e24:	or	a4, a4, a5	230
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: REG = a5

0x11e28:	sw	a4, 4(s0)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x4

0x11e2c:	addi	a2, zero, 5	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x5

0x11e30:	add	a4, s0, a5	1
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = s0
		operands[2].type: REG = a5

0x11e34:	sw	a2, 4(a4)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x4

0x11e38:	sw	a2, 8(a4)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x8

0x11e3c:	bltu	a3, a5, 0xc	84
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x11e40:	lw	a5, 4(s7)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s7
			operands[1].mem.disp: 0x4

0x11e44:	jal	zero, -0x324	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffcdc

0x11e48:	addi	a1, s0, 8	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x8

0x11e4c:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11e50:	jal	ra, -0xcf4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffff30c

0x11e54:	lw	s7, 8(s2)	222
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x8

0x11e58:	lw	a1, 0(s8)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s8

0x11e5c:	lw	a5, 4(s7)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s7
			operands[1].mem.disp: 0x4

0x11e60:	jal	zero, -0x340	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffcc0

0x11e64:	addi	s5, s5, 0x10	2
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s5
		operands[2].type: IMM = 0x10

0x11e68:	jal	zero, -0x394	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffc6c

0x11e6c:	srai	a3, a3, 2	257
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x2

0x11e70:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x11e74:	sll	a5, a5, a3	248
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a3

0x11e78:	or	a0, a0, a5	230
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: REG = a5

0x11e7c:	sw	a0, 4(s2)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x11e80:	jal	zero, -0x2a8	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffd58

0x11e84:	add	a1, s7, s5	1
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s7
		operands[2].type: REG = s5

0x11e88:	sub	a1, zero, a1	265
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: REG = a1

0x11e8c:	slli	a1, a1, 0x14	249
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x14

0x11e90:	srli	s4, a1, 0x14	262
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x14

0x11e94:	addi	a1, s4, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x0

0x11e98:	addi	a0, s3, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x11e9c:	jal	ra, 0xf4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xf4

0x11ea0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x11ea4:	bne	a0, a5, -0xbc	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xffffffffffffff44
	This instruction belongs to groups: jump 

0x11ea8:	addi	s4, zero, 0	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11eac:	jal	zero, -0xbc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff44

0x11eb0:	addi	a3, zero, 0x54	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x54

0x11eb4:	bltu	a3, a4, 0x48	84
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x48
	This instruction belongs to groups: jump 

0x11eb8:	srli	a4, a5, 0xc	262
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc

0x11ebc:	addi	a2, a4, 0x6f	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x6f

0x11ec0:	addi	a3, a4, 0x6e	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x6e

0x11ec4:	slli	a2, a2, 3	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x3

0x11ec8:	jal	zero, -0x31c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffce4

0x11ecc:	addi	a4, zero, 0x154	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x154

0x11ed0:	bltu	a4, a5, 0x48	84
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x48
	This instruction belongs to groups: jump 

0x11ed4:	srli	a5, s1, 0xf	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0xf

0x11ed8:	addi	a1, a5, 0x78	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x78

0x11edc:	addi	a0, a5, 0x77	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x77

0x11ee0:	slli	a3, a1, 3	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x3

0x11ee4:	jal	zero, -0x5c4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffa3c

0x11ee8:	sw	s7, 0x3c(gp)	267
	op_count: 2
		operands[0].type: REG = s7
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x3c

0x11eec:	jal	zero, -0x144	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffebc

0x11ef0:	addi	a5, zero, 1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x11ef4:	sw	a5, 4(s7)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s7
			operands[1].mem.disp: 0x4

0x11ef8:	jal	zero, -0x1ec	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffe14

0x11efc:	addi	a3, zero, 0x154	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x154

0x11f00:	bltu	a3, a4, 0x48	84
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x48
	This instruction belongs to groups: jump 

0x11f04:	srli	a4, a5, 0xf	262
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xf

0x11f08:	addi	a2, a4, 0x78	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x78

0x11f0c:	addi	a3, a4, 0x77	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x77

0x11f10:	slli	a2, a2, 3	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x3

0x11f14:	jal	zero, -0x368	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffc98

0x11f18:	addi	a4, zero, 0x554	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x554

0x11f1c:	bltu	a4, a5, 0x48	84
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x48
	This instruction belongs to groups: jump 

0x11f20:	srli	a5, s1, 0x12	262
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x12

0x11f24:	addi	a1, a5, 0x7d	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x7d

0x11f28:	addi	a0, a5, 0x7c	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x7c

0x11f2c:	slli	a3, a1, 3	249
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x3

0x11f30:	jal	zero, -0x610	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffff9f0

0x11f34:	addi	s9, s9, -8	2
	op_count: 3
		operands[0].type: REG = s9
		operands[1].type: REG = s9
		operands[2].type: IMM = 0xfffffffffffffff8

0x11f38:	add	s5, s5, s9	1
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s5
		operands[2].type: REG = s9

0x11f3c:	sub	s5, s5, s7	265
	op_count: 3
		operands[0].type: REG = s5
		operands[1].type: REG = s5
		operands[2].type: REG = s7

0x11f40:	addi	s4, zero, 0	2
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x11f44:	jal	zero, -0x154	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffeac

0x11f48:	addi	a3, zero, 0x554	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x554

0x11f4c:	bltu	a3, a4, 0x28	84
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x28
	This instruction belongs to groups: jump 

0x11f50:	srli	a4, a5, 0x12	262
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x12

0x11f54:	addi	a2, a4, 0x7d	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x7d

0x11f58:	addi	a3, a4, 0x7c	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x7c

0x11f5c:	slli	a2, a2, 3	249
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x3

0x11f60:	jal	zero, -0x3b4	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffc4c

0x11f64:	addi	a3, zero, 0x3f8	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3f8

0x11f68:	addi	a1, zero, 0x7f	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x7f

0x11f6c:	addi	a0, zero, 0x7e	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x7e

0x11f70:	jal	zero, -0x650	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffff9b0

0x11f74:	addi	a2, zero, 0x3f8	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3f8

0x11f78:	addi	a3, zero, 0x7e	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x7e

0x11f7c:	jal	zero, -0x3d0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffc30

0x11f80:	lw	a5, 4(s2)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s2
			operands[1].mem.disp: 0x4

0x11f84:	jal	zero, -0x230	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffdd0

0x11f88:	ret		207

0x11f8c:	ret		207

0x11f90:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x11f94:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11f98:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x11f9c:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x11fa0:	addi	a0, a1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x11fa4:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11fa8:	sw	zero, 0x50(gp)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x11fac:	jal	ra, 0x914	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x914

0x11fb0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x11fb4:	beq	a0, a5, 0x18	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x11fb8:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11fbc:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11fc0:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x11fc4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x11fc8:	ret		207

0x11fcc:	lw	a5, 0x50(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x11fd0:	beq	a5, zero, -0x18	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x11fd4:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x11fd8:	sw	a5, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x11fdc:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11fe0:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x11fe4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x11fe8:	ret		207

0x11fec:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x11ff0:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x11ff4:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x11ff8:	lh	a1, 0xe(a1)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xe

0x11ffc:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12000:	jal	ra, 0x474	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x474

0x12004:	blt	a0, zero, 0x20	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x12008:	lw	a5, 0x50(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x50

0x1200c:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12010:	add	a5, a5, a0	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a0

0x12014:	sw	a5, 0x50(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x50

0x12018:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x1201c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12020:	ret		207

0x12024:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12028:	lui	a4, 0xfffff	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0xfffff

0x1202c:	addi	a4, a4, -1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xffffffffffffffff

0x12030:	and	a5, a5, a4	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x12034:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12038:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x1203c:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12040:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12044:	ret		207

0x12048:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x1204c:	ret		207

0x12050:	lh	a5, 0xc(a1)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xc

0x12054:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x12058:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x1205c:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x12060:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x12064:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12068:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x1206c:	andi	a4, a5, 0x100	78
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x100

0x12070:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x12074:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12078:	addi	s2, a2, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x0

0x1207c:	addi	s3, a3, 0	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x12080:	bne	a4, zero, 0x40	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x40
	This instruction belongs to groups: jump 

0x12084:	lui	a4, 0xfffff	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0xfffff

0x12088:	addi	a4, a4, -1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xffffffffffffffff

0x1208c:	and	a5, a5, a4	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x12090:	lh	a1, 0xe(s0)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xe

0x12094:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12098:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x1209c:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x120a0:	addi	a3, s3, 0	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x120a4:	addi	a2, s2, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x120a8:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x120ac:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x120b0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x120b4:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x120b8:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x120bc:	jal	zero, 0x9c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x9c

0x120c0:	lh	a1, 0xe(a1)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xe

0x120c4:	addi	a3, zero, 2	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x2

0x120c8:	addi	a2, zero, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x120cc:	jal	ra, 0x340	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x340

0x120d0:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x120d4:	jal	zero, -0x50	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffb0

0x120d8:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x120dc:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x120e0:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x120e4:	lh	a1, 0xe(a1)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xe

0x120e8:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x120ec:	jal	ra, 0x320	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x320

0x120f0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x120f4:	beq	a0, a5, 0x30	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x30
	This instruction belongs to groups: jump 

0x120f8:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x120fc:	lui	a4, 1	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0x1

0x12100:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12104:	or	a5, a5, a4	230
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x12108:	slli	a5, a5, 0x10	249
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x10

0x1210c:	srai	a5, a5, 0x10	257
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x10

0x12110:	sw	a0, 0x50(s0)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x50

0x12114:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12118:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x1211c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12120:	ret		207

0x12124:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12128:	lui	a4, 0xfffff	221
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: IMM = 0xfffff

0x1212c:	addi	a4, a4, -1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0xffffffffffffffff

0x12130:	and	a5, a5, a4	77
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x12134:	slli	a5, a5, 0x10	249
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x10

0x12138:	srai	a5, a5, 0x10	257
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x10

0x1213c:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12140:	sh	a5, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12144:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12148:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x1214c:	ret		207

0x12150:	lh	a1, 0xe(a1)	211
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0xe

0x12154:	jal	zero, 0x80	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x80

0x12158:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x1215c:	addi	a4, a1, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x12160:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12164:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12168:	addi	a1, a2, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x0

0x1216c:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12170:	addi	a2, a3, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x12174:	addi	a0, a4, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x0

0x12178:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1217c:	sw	zero, 0x50(gp)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x12180:	jal	ra, 0x7b8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x7b8

0x12184:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12188:	beq	a0, a5, 0x18	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x1218c:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12190:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12194:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12198:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x1219c:	ret		207

0x121a0:	lw	a5, 0x50(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x121a4:	beq	a5, zero, -0x18	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x121a8:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x121ac:	sw	a5, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x121b0:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x121b4:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x121b8:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x121bc:	ret		207

0x121c0:	addi	a1, a0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x121c4:	addi	a3, zero, 0	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x121c8:	addi	a2, zero, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x121cc:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x121d0:	jal	zero, 0x4bc	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x4bc

0x121d4:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x121d8:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x121dc:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x121e0:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x121e4:	addi	a0, a1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x121e8:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x121ec:	sw	zero, 0x50(gp)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x121f0:	jal	ra, 0x534	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x534

0x121f4:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x121f8:	beq	a0, a5, 0x18	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x121fc:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12200:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12204:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12208:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x1220c:	ret		207

0x12210:	lw	a5, 0x50(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x12214:	beq	a5, zero, -0x18	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x12218:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1221c:	sw	a5, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x12220:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12224:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12228:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x1222c:	ret		207

0x12230:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x12234:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12238:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x1223c:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12240:	sw	s2, 0(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x12244:	beq	a1, zero, 0x20	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x12248:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x1224c:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12250:	beq	a0, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x12254:	lw	a5, 0x38(a0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x38

0x12258:	beq	a5, zero, 0xb8	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xb8
	This instruction belongs to groups: jump 

0x1225c:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12260:	bne	a5, zero, 0x24	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x24
	This instruction belongs to groups: jump 

0x12264:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12268:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x1226c:	addi	s2, zero, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x12270:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12274:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x12278:	lw	s2, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x1227c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12280:	ret		207

0x12284:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x12288:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x1228c:	jal	ra, -0x1978	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffe688

0x12290:	lw	a5, 0x2c(s0)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x2c

0x12294:	addi	s2, a0, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12298:	beq	a5, zero, 0x14	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x14
	This instruction belongs to groups: jump 

0x1229c:	lw	a1, 0x1c(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x1c

0x122a0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x122a4:	jalr	ra, a5, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x122a8:	blt	a0, zero, 0x78	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x78
	This instruction belongs to groups: jump 

0x122ac:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x122b0:	andi	a5, a5, 0x80	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x80

0x122b4:	bne	a5, zero, 0x7c	85
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x7c
	This instruction belongs to groups: jump 

0x122b8:	lw	a1, 0x30(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x122bc:	beq	a1, zero, 0x18	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x122c0:	addi	a5, s0, 0x40	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x40

0x122c4:	beq	a1, a5, 0xc	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a5
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x122c8:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x122cc:	jal	ra, -0x1170	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffee90

0x122d0:	sw	zero, 0x30(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x30

0x122d4:	lw	a1, 0x44(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x44

0x122d8:	beq	a1, zero, 0x10	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x10
	This instruction belongs to groups: jump 

0x122dc:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x122e0:	jal	ra, -0x1184	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffee7c

0x122e4:	sw	zero, 0x44(s0)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x44

0x122e8:	jal	ra, -0x1348	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffecb8

0x122ec:	sh	zero, 0xc(s0)	247
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x122f0:	jal	ra, -0x134c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffecb4

0x122f4:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x122f8:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x122fc:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12300:	addi	a0, s2, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x12304:	lw	s2, 0(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp

0x12308:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x1230c:	ret		207

0x12310:	jal	ra, -0x1380	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffec80

0x12314:	lh	a5, 0xc(s0)	211
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12318:	beq	a5, zero, -0xb4	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff4c
	This instruction belongs to groups: jump 

0x1231c:	jal	zero, -0x98	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff68

0x12320:	lhu	a5, 0xc(s0)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0xc

0x12324:	addi	s2, zero, -1	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12328:	andi	a5, a5, 0x80	78
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x80

0x1232c:	beq	a5, zero, -0x74	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffff8c
	This instruction belongs to groups: jump 

0x12330:	lw	a1, 0x10(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0
			operands[1].mem.disp: 0x10

0x12334:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12338:	jal	ra, -0x11dc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffee24

0x1233c:	jal	zero, -0x84	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffff7c

0x12340:	addi	a1, a0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12344:	lw	a0, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x12348:	jal	zero, -0x118	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xfffffffffffffee8

0x1234c:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x12350:	addi	a4, a1, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x12354:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12358:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x1235c:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12360:	addi	a1, a2, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x0

0x12364:	addi	a0, a4, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x0

0x12368:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1236c:	sw	zero, 0x50(gp)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x12370:	jal	ra, 0x428	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x428

0x12374:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12378:	beq	a0, a5, 0x18	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x1237c:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12380:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12384:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12388:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x1238c:	ret		207

0x12390:	lw	a5, 0x50(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x12394:	beq	a5, zero, -0x18	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x12398:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1239c:	sw	a5, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x123a0:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x123a4:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x123a8:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x123ac:	ret		207

0x123b0:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x123b4:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x123b8:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x123bc:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x123c0:	addi	a0, a1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x123c4:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x123c8:	sw	zero, 0x50(gp)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x123cc:	jal	ra, 0x42c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x42c

0x123d0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x123d4:	beq	a0, a5, 0x18	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x123d8:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x123dc:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x123e0:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x123e4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x123e8:	ret		207

0x123ec:	lw	a5, 0x50(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x123f0:	beq	a5, zero, -0x18	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x123f4:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x123f8:	sw	a5, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x123fc:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12400:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12404:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12408:	ret		207

0x1240c:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x12410:	addi	a4, a1, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x12414:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12418:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x1241c:	addi	a1, a2, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x0

0x12420:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12424:	addi	a2, a3, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x12428:	addi	a0, a4, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x0

0x1242c:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12430:	sw	zero, 0x50(gp)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x12434:	jal	ra, 0x404	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x404

0x12438:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x1243c:	beq	a0, a5, 0x18	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x12440:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12444:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12448:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x1244c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12450:	ret		207

0x12454:	lw	a5, 0x50(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x12458:	beq	a5, zero, -0x18	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x1245c:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12460:	sw	a5, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x12464:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12468:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x1246c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12470:	ret		207

0x12474:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x12478:	addi	a4, a1, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x1247c:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12480:	sw	s1, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12484:	addi	a1, a2, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x0

0x12488:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x1248c:	addi	a2, a3, 0	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x0

0x12490:	addi	a0, a4, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x0

0x12494:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12498:	sw	zero, 0x50(gp)	267
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x1249c:	jal	ra, 0x3e0	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x3e0

0x124a0:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x124a4:	beq	a0, a5, 0x18	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x124a8:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x124ac:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x124b0:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x124b4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x124b8:	ret		207

0x124bc:	lw	a5, 0x50(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x50

0x124c0:	beq	a5, zero, -0x18	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffe8
	This instruction belongs to groups: jump 

0x124c4:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x124c8:	sw	a5, 0(s0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x124cc:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x124d0:	lw	s1, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x124d4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x124d8:	ret		207

0x124dc:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x124e0:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x124e4:	lw	s2, 0(a1)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = a1

0x124e8:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x124ec:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x124f0:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x124f4:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x124f8:	sw	s4, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x124fc:	addi	s0, a1, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x12500:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12504:	beq	s2, zero, 0x44	80
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x44
	This instruction belongs to groups: jump 

0x12508:	lw	s3, 0(s2)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = s2

0x1250c:	beq	s3, zero, 0x30	80
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x30
	This instruction belongs to groups: jump 

0x12510:	lw	s4, 0(s3)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = s3

0x12514:	beq	s4, zero, 0x1c	80
	op_count: 3
		operands[0].type: REG = s4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1c
	This instruction belongs to groups: jump 

0x12518:	lw	a1, 0(s4)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s4

0x1251c:	beq	a1, zero, 8	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x12520:	jal	ra, -0x44	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffffbc

0x12524:	addi	a1, s4, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s4
		operands[2].type: IMM = 0x0

0x12528:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x1252c:	jal	ra, -0x13d0	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffec30

0x12530:	addi	a1, s3, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s3
		operands[2].type: IMM = 0x0

0x12534:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12538:	jal	ra, -0x13dc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffec24

0x1253c:	addi	a1, s2, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x0

0x12540:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12544:	jal	ra, -0x13e8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffec18

0x12548:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1254c:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x12550:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x12554:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x12558:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1255c:	lw	s4, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s4
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12560:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12564:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x12568:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x1256c:	jal	zero, -0x1410	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffebf0

0x12570:	lw	a5, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x12574:	beq	a5, a0, 0x114	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x114
	This instruction belongs to groups: jump 

0x12578:	lw	a1, 0x4c(a0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x4c

0x1257c:	addi	sp, sp, -0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffffe0

0x12580:	sw	s1, 0x14(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x12584:	sw	ra, 0x1c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x12588:	sw	s0, 0x18(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x1258c:	sw	s2, 0x10(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x12590:	sw	s3, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12594:	addi	s1, a0, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12598:	beq	a1, zero, 0x40	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x40
	This instruction belongs to groups: jump 

0x1259c:	addi	s2, zero, 0	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x125a0:	addi	s3, zero, 0x80	2
	op_count: 3
		operands[0].type: REG = s3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x80

0x125a4:	add	a5, a1, s2	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a1
		operands[2].type: REG = s2

0x125a8:	lw	s0, 0(a5)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a5

0x125ac:	beq	s0, zero, 0x1c	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1c
	This instruction belongs to groups: jump 

0x125b0:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x125b4:	lw	s0, 0(s0)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x125b8:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x125bc:	jal	ra, -0x1460	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffeba0

0x125c0:	bne	s0, zero, -0x10	85
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x125c4:	lw	a1, 0x4c(s1)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x4c

0x125c8:	addi	s2, s2, 4	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x4

0x125cc:	bne	s2, s3, -0x28	85
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s3
		operands[2].type: IMM = 0xffffffffffffffd8
	This instruction belongs to groups: jump 

0x125d0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x125d4:	jal	ra, -0x1478	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffeb88

0x125d8:	lw	a1, 0x40(s1)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x40

0x125dc:	beq	a1, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x125e0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x125e4:	jal	ra, -0x1488	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffeb78

0x125e8:	lw	s0, 0x148(s1)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x148

0x125ec:	beq	s0, zero, 0x20	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x125f0:	addi	s2, s1, 0x14c	2
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x14c

0x125f4:	beq	s0, s2, 0x18	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = s2
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x125f8:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x125fc:	lw	s0, 0(s0)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x12600:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12604:	jal	ra, -0x14a8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffeb58

0x12608:	bne	s2, s0, -0x10	85
	op_count: 3
		operands[0].type: REG = s2
		operands[1].type: REG = s0
		operands[2].type: IMM = 0xfffffffffffffff0
	This instruction belongs to groups: jump 

0x1260c:	lw	a1, 0x54(s1)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x54

0x12610:	beq	a1, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x12614:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12618:	jal	ra, -0x14bc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffeb44

0x1261c:	lw	a5, 0x38(s1)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x38

0x12620:	beq	a5, zero, 0x4c	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x4c
	This instruction belongs to groups: jump 

0x12624:	lw	a5, 0x3c(s1)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x3c

0x12628:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x1262c:	jalr	ra, a5, 0	207
	op_count: 3
		operands[0].type: REG = ra
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x0

0x12630:	lw	s0, 0x2e0(s1)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = s1
			operands[1].mem.disp: 0x2e0

0x12634:	beq	s0, zero, 0x38	80
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x38
	This instruction belongs to groups: jump 

0x12638:	lw	a1, 0(s0)	222
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = s0

0x1263c:	beq	a1, zero, 0xc	80
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc
	This instruction belongs to groups: jump 

0x12640:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12644:	jal	ra, -0x168	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xfffffffffffffe98

0x12648:	addi	a1, s0, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1264c:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x12650:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x12654:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x12658:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1265c:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x12660:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x12664:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x12668:	jal	zero, -0x150c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffeaf4

0x1266c:	lw	ra, 0x1c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x1c

0x12670:	lw	s0, 0x18(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x18

0x12674:	lw	s1, 0x14(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x14

0x12678:	lw	s2, 0x10(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x10

0x1267c:	lw	s3, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s3
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12680:	addi	sp, sp, 0x20	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x20

0x12684:	ret		207

0x12688:	ret		207

0x1268c:	lw	a4, 0x30(gp)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x30

0x12690:	lw	a5, 0x148(a4)	222
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x148

0x12694:	beq	a5, zero, 0x58	80
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x58
	This instruction belongs to groups: jump 

0x12698:	lw	a4, 4(a5)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x1269c:	addi	a6, zero, 0x1f	2
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1f

0x126a0:	blt	a6, a4, 0x7c	83
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x7c
	This instruction belongs to groups: jump 

0x126a4:	slli	a6, a4, 2	249
	op_count: 3
		operands[0].type: REG = a6
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x2

0x126a8:	beq	a0, zero, 0x2c	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x2c
	This instruction belongs to groups: jump 

0x126ac:	add	t1, a5, a6	1
	op_count: 3
		operands[0].type: REG = t1
		operands[1].type: REG = a5
		operands[2].type: REG = a6

0x126b0:	sw	a2, 0x88(t1)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = t1
			operands[1].mem.disp: 0x88

0x126b4:	lw	a7, 0x188(a5)	222
	op_count: 2
		operands[0].type: REG = a7
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x188

0x126b8:	addi	a2, zero, 1	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x1

0x126bc:	sll	a2, a2, a4	248
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = a2
		operands[2].type: REG = a4

0x126c0:	or	a7, a7, a2	230
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = a7
		operands[2].type: REG = a2

0x126c4:	sw	a7, 0x188(a5)	267
	op_count: 2
		operands[0].type: REG = a7
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x188

0x126c8:	sw	a3, 0x108(t1)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = t1
			operands[1].mem.disp: 0x108

0x126cc:	addi	a3, zero, 2	2
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x2

0x126d0:	beq	a0, a3, 0x28	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a3
		operands[2].type: IMM = 0x28
	This instruction belongs to groups: jump 

0x126d4:	addi	a4, a4, 1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x126d8:	sw	a4, 4(a5)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x126dc:	add	a5, a5, a6	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a6

0x126e0:	sw	a1, 8(a5)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x8

0x126e4:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x126e8:	ret		207

0x126ec:	addi	a5, a4, 0x14c	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x14c

0x126f0:	sw	a5, 0x148(a4)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a4
			operands[1].mem.disp: 0x148

0x126f4:	jal	zero, -0x5c	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffa4

0x126f8:	lw	a3, 0x18c(a5)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x18c

0x126fc:	addi	a4, a4, 1	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x1

0x12700:	sw	a4, 4(a5)	267
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x4

0x12704:	or	a3, a3, a2	230
	op_count: 3
		operands[0].type: REG = a3
		operands[1].type: REG = a3
		operands[2].type: REG = a2

0x12708:	sw	a3, 0x18c(a5)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x18c

0x1270c:	add	a5, a5, a6	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a6

0x12710:	sw	a1, 8(a5)	267
	op_count: 2
		operands[0].type: REG = a1
		operands[1].type: MEM
			operands[1].mem.base: REG = a5
			operands[1].mem.disp: 0x8

0x12714:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x12718:	ret		207

0x1271c:	addi	a0, zero, -1	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12720:	ret		207

0x12724:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x12728:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1272c:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12730:	addi	a7, zero, 0x39	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x39

0x12734:	ecall		140

0x12738:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x1273c:	blt	a0, zero, 0x18	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x12740:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12744:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x12748:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x1274c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12750:	ret		207

0x12754:	sub	s0, zero, s0	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: REG = s0

0x12758:	jal	ra, 0x2cc	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x2cc

0x1275c:	sw	s0, 0(a0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x12760:	addi	s0, zero, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12764:	jal	zero, -0x24	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffdc

0x12768:	addi	a7, zero, 0x5d	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x5d

0x1276c:	ecall		140

0x12770:	blt	a0, zero, 8	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x8
	This instruction belongs to groups: jump 

0x12774:	jal	zero, 0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x0

0x12778:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x1277c:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12780:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12784:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12788:	sub	s0, zero, s0	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: REG = s0

0x1278c:	jal	ra, 0x298	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x298

0x12790:	sw	s0, 0(a0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x12794:	jal	zero, 0	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0x0

0x12798:	addi	sp, sp, -0x90	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffff70

0x1279c:	sw	s1, 0x84(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x84

0x127a0:	sw	ra, 0x8c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8c

0x127a4:	addi	s1, a1, 0	2
	op_count: 3
		operands[0].type: REG = s1
		operands[1].type: REG = a1
		operands[2].type: IMM = 0x0

0x127a8:	sw	s0, 0x88(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x88

0x127ac:	addi	a7, zero, 0x50	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x50

0x127b0:	addi	a1, sp, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x0

0x127b4:	ecall		140

0x127b8:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x127bc:	blt	a0, zero, 0x28	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x28
	This instruction belongs to groups: jump 

0x127c0:	addi	a0, s1, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s1
		operands[2].type: IMM = 0x0

0x127c4:	addi	a1, sp, 0	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x0

0x127c8:	jal	ra, 0x1b4	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x1b4

0x127cc:	lw	ra, 0x8c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8c

0x127d0:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x127d4:	lw	s0, 0x88(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x88

0x127d8:	lw	s1, 0x84(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x84

0x127dc:	addi	sp, sp, 0x90	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x90

0x127e0:	ret		207

0x127e4:	sub	s0, zero, s0	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: REG = s0

0x127e8:	jal	ra, 0x23c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x23c

0x127ec:	sw	s0, 0(a0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x127f0:	addi	s0, zero, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x127f4:	jal	zero, -0x34	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffcc

0x127f8:	addi	sp, sp, -0x70	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xffffffffffffff90

0x127fc:	addi	a1, sp, 8	2
	op_count: 3
		operands[0].type: REG = a1
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x8

0x12800:	sw	ra, 0x6c(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x12804:	jal	ra, -0x6c	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xffffffffffffff94

0x12808:	addi	a5, zero, -1	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x1280c:	beq	a0, a5, 0x1c	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x1c
	This instruction belongs to groups: jump 

0x12810:	lw	a0, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12814:	lw	ra, 0x6c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x12818:	srli	a0, a0, 0xd	262
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0xd

0x1281c:	andi	a0, a0, 1	78
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x1

0x12820:	addi	sp, sp, 0x70	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x70

0x12824:	ret		207

0x12828:	lw	ra, 0x6c(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x6c

0x1282c:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x12830:	addi	sp, sp, 0x70	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x70

0x12834:	ret		207

0x12838:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x1283c:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12840:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12844:	addi	a7, zero, 0x3e	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3e

0x12848:	ecall		140

0x1284c:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12850:	blt	a0, zero, 0x18	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x12854:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12858:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1285c:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12860:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12864:	ret		207

0x12868:	sub	s0, zero, s0	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: REG = s0

0x1286c:	jal	ra, 0x1b8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x1b8

0x12870:	sw	s0, 0(a0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x12874:	addi	s0, zero, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12878:	jal	zero, -0x24	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffdc

0x1287c:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x12880:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12884:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12888:	addi	a7, zero, 0x3f	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x3f

0x1288c:	ecall		140

0x12890:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12894:	blt	a0, zero, 0x18	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x12898:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1289c:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x128a0:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x128a4:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x128a8:	ret		207

0x128ac:	sub	s0, zero, s0	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: REG = s0

0x128b0:	jal	ra, 0x174	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x174

0x128b4:	sw	s0, 0(a0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x128b8:	addi	s0, zero, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x128bc:	jal	zero, -0x24	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffdc

0x128c0:	lw	a4, 0x54(gp)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x54

0x128c4:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x128c8:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x128cc:	addi	a5, a0, 0	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x128d0:	bne	a4, zero, 0x20	85
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x20
	This instruction belongs to groups: jump 

0x128d4:	addi	a7, zero, 0xd6	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xd6

0x128d8:	addi	a0, zero, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x0

0x128dc:	ecall		140

0x128e0:	addi	a2, zero, -1	2
	op_count: 3
		operands[0].type: REG = a2
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x128e4:	addi	a4, a0, 0	2
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x128e8:	beq	a0, a2, 0x34	80
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a2
		operands[2].type: IMM = 0x34
	This instruction belongs to groups: jump 

0x128ec:	sw	a0, 0x54(gp)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x54

0x128f0:	addi	a7, zero, 0xd6	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xd6

0x128f4:	add	a0, a5, a4	1
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x128f8:	ecall		140

0x128fc:	lw	a4, 0x54(gp)	222
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x54

0x12900:	add	a5, a5, a4	1
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x12904:	bne	a0, a5, 0x18	85
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a5
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x12908:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x1290c:	sw	a0, 0x54(gp)	267
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x54

0x12910:	addi	a0, a4, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x0

0x12914:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12918:	ret		207

0x1291c:	jal	ra, 0x108	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0x108

0x12920:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12924:	addi	a5, zero, 0xc	2
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xc

0x12928:	sw	a5, 0(a0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x1292c:	addi	a0, zero, -1	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12930:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12934:	ret		207

0x12938:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x1293c:	sw	ra, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12940:	sw	s0, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12944:	addi	a7, zero, 0x40	2
	op_count: 3
		operands[0].type: REG = a7
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x40

0x12948:	ecall		140

0x1294c:	addi	s0, a0, 0	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = a0
		operands[2].type: IMM = 0x0

0x12950:	blt	a0, zero, 0x18	83
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0x18
	This instruction belongs to groups: jump 

0x12954:	lw	ra, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12958:	addi	a0, s0, 0	2
	op_count: 3
		operands[0].type: REG = a0
		operands[1].type: REG = s0
		operands[2].type: IMM = 0x0

0x1295c:	lw	s0, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12960:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12964:	ret		207

0x12968:	sub	s0, zero, s0	265
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: REG = s0

0x1296c:	jal	ra, 0xb8	206
	op_count: 2
		operands[0].type: REG = ra
		operands[1].type: IMM = 0xb8

0x12970:	sw	s0, 0(a0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x12974:	addi	s0, zero, -1	2
	op_count: 3
		operands[0].type: REG = s0
		operands[1].type: REG = zero
		operands[2].type: IMM = 0xffffffffffffffff

0x12978:	jal	zero, -0x24	206
	op_count: 2
		operands[0].type: REG = zero
		operands[1].type: IMM = 0xffffffffffffffdc

0x1297c:	lhu	a4, 0x18(a1)	212
	op_count: 2
		operands[0].type: REG = a4
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x18

0x12980:	lhu	a5, 0x14(a1)	212
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x14

0x12984:	addi	sp, sp, -0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0xfffffffffffffff0

0x12988:	lw	t0, 0x1c(a1)	222
	op_count: 2
		operands[0].type: REG = t0
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x1c

0x1298c:	lw	t6, 0x20(a1)	222
	op_count: 2
		operands[0].type: REG = t6
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x20

0x12990:	lw	t5, 0x30(a1)	222
	op_count: 2
		operands[0].type: REG = t5
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x30

0x12994:	lw	t4, 0x40(a1)	222
	op_count: 2
		operands[0].type: REG = t4
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x40

0x12998:	lw	t3, 0x38(a1)	222
	op_count: 2
		operands[0].type: REG = t3
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x38

0x1299c:	lw	t1, 0x48(a1)	222
	op_count: 2
		operands[0].type: REG = t1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x48

0x129a0:	lw	t2, 0x4c(a1)	222
	op_count: 2
		operands[0].type: REG = t2
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x4c

0x129a4:	lw	a6, 0x58(a1)	222
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x58

0x129a8:	lw	a7, 0x5c(a1)	222
	op_count: 2
		operands[0].type: REG = a7
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x5c

0x129ac:	sw	s0, 0xc(sp)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x129b0:	sw	s1, 8(sp)	267
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x129b4:	lw	s0, 0x10(a1)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x10

0x129b8:	lw	s1, 8(a1)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x8

0x129bc:	sw	s2, 4(sp)	267
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x129c0:	lw	s2, 0(a1)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = a1

0x129c4:	lw	a2, 0x68(a1)	222
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x68

0x129c8:	slli	a4, a4, 0x10	249
	op_count: 3
		operands[0].type: REG = a4
		operands[1].type: REG = a4
		operands[2].type: IMM = 0x10

0x129cc:	or	a5, a5, a4	230
	op_count: 3
		operands[0].type: REG = a5
		operands[1].type: REG = a5
		operands[2].type: REG = a4

0x129d0:	lw	a3, 0x6c(a1)	222
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a1
			operands[1].mem.disp: 0x6c

0x129d4:	sh	s2, 0(a0)	247
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = a0

0x129d8:	sh	s1, 2(a0)	247
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x2

0x129dc:	sw	s0, 4(a0)	267
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x4

0x129e0:	sw	a5, 8(a0)	267
	op_count: 2
		operands[0].type: REG = a5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x8

0x129e4:	sh	t0, 0xc(a0)	247
	op_count: 2
		operands[0].type: REG = t0
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0xc

0x129e8:	sh	t6, 0xe(a0)	247
	op_count: 2
		operands[0].type: REG = t6
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0xe

0x129ec:	sw	t5, 0x10(a0)	267
	op_count: 2
		operands[0].type: REG = t5
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x10

0x129f0:	sw	t4, 0x4c(a0)	267
	op_count: 2
		operands[0].type: REG = t4
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x4c

0x129f4:	sw	t3, 0x48(a0)	267
	op_count: 2
		operands[0].type: REG = t3
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x48

0x129f8:	sw	t1, 0x18(a0)	267
	op_count: 2
		operands[0].type: REG = t1
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x18

0x129fc:	sw	t2, 0x1c(a0)	267
	op_count: 2
		operands[0].type: REG = t2
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x1c

0x12a00:	sw	a6, 0x28(a0)	267
	op_count: 2
		operands[0].type: REG = a6
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x28

0x12a04:	sw	a7, 0x2c(a0)	267
	op_count: 2
		operands[0].type: REG = a7
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x2c

0x12a08:	sw	a2, 0x38(a0)	267
	op_count: 2
		operands[0].type: REG = a2
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x38

0x12a0c:	lw	s0, 0xc(sp)	222
	op_count: 2
		operands[0].type: REG = s0
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0xc

0x12a10:	sw	a3, 0x3c(a0)	267
	op_count: 2
		operands[0].type: REG = a3
		operands[1].type: MEM
			operands[1].mem.base: REG = a0
			operands[1].mem.disp: 0x3c

0x12a14:	lw	s1, 8(sp)	222
	op_count: 2
		operands[0].type: REG = s1
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x8

0x12a18:	lw	s2, 4(sp)	222
	op_count: 2
		operands[0].type: REG = s2
		operands[1].type: MEM
			operands[1].mem.base: REG = sp
			operands[1].mem.disp: 0x4

0x12a1c:	addi	sp, sp, 0x10	2
	op_count: 3
		operands[0].type: REG = sp
		operands[1].type: REG = sp
		operands[2].type: IMM = 0x10

0x12a20:	ret		207

0x12a24:	lw	a0, 0x38(gp)	222
	op_count: 2
		operands[0].type: REG = a0
		operands[1].type: MEM
			operands[1].mem.base: REG = gp
			operands[1].mem.disp: 0x38

0x12a28:	ret		207

